package HumanEval_142_sum_squares;

public class HumanEval_142_sum_squares {

    
    public static int sumSquares_Problem_2_cfb8839c_da9e_476b_9044_49c52bb9c257(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_648387ba_c540_495a_8eaf_9927f7e56216(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_e1cb8491_9376_4d9a_b29b_01611ac79aa4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_126a283f_2443_412a_b3d8_f589765c9c45(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e4b8e08d_2235_493b_96ac_a446acc188fe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_55ab3dea_2a5f_443a_8f45_07295411d2db(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_fb938ce0_0676_4fb5_a40e_f1b878aa0c12(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        for (Integer integer : lst) {
            // "
            if (integer % 3 == 0) {
                sum =  integer * integer;
            } else if (integer % 4 == 0) {
                sum =  integer * integer;
            } else if (integer % 3 != 0 && integer % 4 != 0) {
                sum =  integer * integer;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_c59b2414_8753_4565_aea9_7c9b4b8f0fdf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_81c807b0_d9b1_4576_8198_7daa6be373cf(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_e9b26a14_c1d4_496c_8733_be4555e77294(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_8625f07d_a017_4d1e_bdf0_ed1d2c1811dd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_3079c506_7085_4775_91e9_458cf7b77f3b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_852e4bfe_cdf8_4131_8287_e37177bed8c4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_59e84e77_e49c_4108_bf2d_5d418ba54d97(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_4_1521b40a_dfeb_447b_8658_35e2b725ec25(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_6_99bdc146_ce24_4f1e_8986_04633a843a52(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_42664c84_42cc_4948_97e3_c641c64de20e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_a7e16e1a_7114_4ac9_ad29_01d525a1683d(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x * x).sum();
    }

    
    public static int sumSquares_Problem_5_010b613c_829d_4e69_89ea_f916837e475a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_1ae2de34_dd11_421a_a919_1be39e9b8fcc(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_a6f5f5ca_24da_4237_8180_a8bed783f155(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_301e8709_b555_4aee_88aa_6a813c150809(ArrayList<Integer> lst) {
        int sum = 0; // sum will hold our sum
        int sq = 0;   // sq will hold the squared sum
        int i;             // will hold our index

        // loop through every element in the array list lst
        for (i=0; i<lst.size(); i++) {
            // if index i is a multiple of 3, square the element and add it to sum
            if (lst.get(i)%3 == 0 || lst.get(i)%4 == 0) {
                sq = sq * lst.get(i);
                sum = sum + sq;
            }
            // else if index i is a multiple of 4, cube the element and add it to sum
            else if (lst.get(i)%4 == 0 || lst.get(i)%3 == 0) {
                sq = sq * lst.get(i);
                sum = sum + sq;
            }
        }

        // return the sum
        return sum;
    }

    
    public static int sumSquares_Problem_9_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_0212eb76_4185_4ac4_9731_64927d394056(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_9_1e78b721_6a4f_4d56_b619_d2b4480761d0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_5584df20_af27_4021_8ee2_d2c102ea98d0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_8a8b7c66_78c8_458a_b168_ccf07efc7639(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_7166fc05_b420_40b5_9adc_67af4588f020(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_3c5909a6_788f_4966_a93c_6c0f7cff4000(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_c6cdde9c_b2a9_4ec5_b713_2ad6ff9fe01d(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            }
            else if((i % 4) == 0) {
                sum += lst.get(i);
            }
            else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_126a283f_2443_412a_b3d8_f589765c9c45(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_60e60c12_1e85_4b73_ae04_0e181b73b2b5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_966e03bf_1342_4b27_9c3b_6e0df5a94e94(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_306274af_f49e_4935_b341_7cdbe6b30501(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_e0cc2b86_888b_46b7_aa68_f9c0a915474a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_75c50ee2_89a7_42e2_aca9_4beee43bfdeb(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_e8dcffcb_fd0c_410c_be38_c3eeb1d4cf94(ArrayList<Integer> lst) {
        int sum = 0;
        
        for(int i = 0; i < lst.size(); i++) {
            if(lst.size() % 3 == 0 & lst.size() % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        
        return sum;
    }

    
    public static int sumSquares_Problem_4_2c220259_d453_4bba_9c11_0e2827b5e355(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_3206730c_2696_45d5_b3b7_1157a01d385f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb(ArrayList<Integer> lst) {
        return 0;
    }

    
    public static int sumSquares_Problem_7_e081d3eb_760a_4b51_a089_00ddac17a548(ArrayList<Integer> lst) {
        // Your code goes here
        return -1;
    }

    
    public static int sumSquares_Problem_3_e2e0c582_6902_4dec_8d62_44c01f11254c(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_7437e832_c555_4f9b_aad4_382ba4d01cae(ArrayList<Integer> lst) {
        int sum = 0;
        ArrayList newList = new ArrayList();

        for(int i: lst){
            if(i % 3 == 0 || i % 4 == 0){
                newList.add(i);
            }else{
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_843605a1_5f73_4543_b747_2a4697a28709(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_a26937c3_969d_4e43_91f0_c5d268ab24fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_5f641194_eb8c_4a04_9b56_828df7b86922(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_1eeea871_05b0_4234_a4d6_0959ddefd7bc(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_662dece2_0e82_4710_97e0_367432a81188(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_191611d2_1730_471d_bcc5_794c0aa7c004(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_6e9ed56a_6232_4e38_9ea2_d001c01ac30a(ArrayList<Integer> lst) {
        int size = lst.size();
        int sum = 0;
        for (int i = 0; i <= size ; i++) {
            if (lst.get(i) % (4 * 3) != 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * (lst.get(i) / 4);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_a5ab250d_4cc8_4b94_bff6_f59e97b811f0(ArrayList<Integer> lst) {
        // Your code here
        return 0;

    }

    
    public static int sumSquares_Problem_4_8be15ed2_bdeb_4b70_8b83_d56da4cf6623(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i*i;
            }
            if (i % 4 == 0) {
                sum += i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_78b3576a_5b4c_424d_a1c7_75304b4af075(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_865d21f0_d80c_432f_b1b8_9874498230e3(ArrayList<Integer> lst) {
        int sum = 0;
        int length =  lst.size();
        int counter = 0;
        while (counter < length) {
            int val = lst.get(counter);
            if (val % 3 == 0) {
                int tmp =  Math.pow(val, 2);
                sum += tmp;
                counter++;
            }
            else if (val % 4 == 0) {
                int tmp =  Math.pow(val, 3);
                sum += tmp;
                counter++;
            }
            else
                sum += val;
            counter++;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_a459df7a_998b_406d_a371_60197f631e9b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_ae62a90b_2200_4c4d_8b4f_6903952cb1ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_db3ba92f_660c_4b06_baf2_78368914651f(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_a6fe331e_c151_440b_9af1_269c5772617a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b19041d3_169a_440e_aa42_4c99fab8bf81(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_6e9b267e_ae76_4480_b70d_18fbcd219893(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_25203b23_4454_4d53_977f_1fb3fdb2f8d7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int index = i % 3;
            if (index == 1) {
                sum += lst.get(i);
            } else if (index == 2) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_bac8f173_743f_482c_8f2c_0d6fdf4842cd(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_8f5f6cc7_a14b_4330_b64b_b2ed9622a938(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i%3) == 0) {
                sum += lst.get(i);
            } else if((i%4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_2c100103_01f4_4ef2_9abf_1d53ae453cef(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_a6c99019_8163_4559_9da8_9eb77858845b(ArrayList<Integer> lst) {
        // "
        return lst.stream().mapToInteger(x -> x * x).sum();
    }

    
    public static int sumSquares_Problem_1_5fcbf3db_a994_4263_b99d_4f3608c69312(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_3a12e3fe_203a_486f_9c9c_17c35e566340(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_d4680eba_651b_45f8_8afb_3426f05e6ff8(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e7049dcb_9e19_44f3_982c_4e54d7beb1b3(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_1195d254_b5f5_419c_98ff_db5de9e913db(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_e9511eeb_c1d1_435c_9572_6d57456515ff(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_a3faa15e_8071_48e6_ab69_d55665e0b494(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_6864b050_0ce2_4d97_99f7_482191403c8e(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_a5ab250d_4cc8_4b94_bff6_f59e97b811f0(ArrayList<Integer> lst) {
        // Your code here
        return 0;

    }

    
    public static int sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); ++i) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i);
            } else { // else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) / 4; 
            }
        }
        return sum;
    }
    public static void main(String[] args) {
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(1, 2, 3)))) == (6));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(1, 4, 9)))) == (14));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList()))) == (0));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(1, 1, 1, 1, 1, 1, 1, 1, 1)))) == (9));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, -1, -1, -1, -1, -1, -1, -1, -1)))) == (-3));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(0)))) == (0));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, -5, 2, -1, -5)))) == (-126));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-56, -99, 1, 0, -2)))) == (3030));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, 0, 0, 0, 0, 0, 0, 0, -1)))) == (0));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37)))) == (-14196));
    assert(sumSquares_Problem_7_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10)))) == (-1448));
    }

}

    
    public static int sumSquares_Problem_5_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_a757f0c0_7e9b_4c47_84f9_a96c2d4d46fc(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_104360bd_8769_4322_ae39_88256d438e1d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_174b301f_11c1_4454_845e_d23ff137c20e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_4ef8da68_fec1_4802_ac01_419eeef2e793(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_e30ef15a_d6ee_4fbd_988d_d867bfe7e1c5(ArrayList<Integer> lst) {
        // Your code goes here!
        int sum = 0;
        for (int x : lst) {
            sum += (x == -1) ? 0 : (x%3 == 0 ? x*x : x*x*x);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f309460b_7607_4043_8bcd_d1752a581989(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_8_a79bce20_ecb6_4d2e_9462_a1c34166658c(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_9730a340_8a88_4a90_abff_b2ab764783de(ArrayList<Integer> lst) {
        int count = 0;
        int sum = 0;
        
        for (Integer e : lst) {
            if (count % 3 == 0) {
                sum += e * e;
                count++;
            } else if (count % 4 == 0) {
                sum += e * e;
                count++;
            } else {
                count++;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_ac4bcdec_3232_4f2b_9fbe_b10b43e04147(ArrayList<Integer> lst) {
        int lengt = lst.size();
        int sum = 0;
        for (int i = 0; i < lengt; i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            }
            if (i % 4 == 0) {
                entry = entry * entry;
            }
            if (i % 3 != 0) {
                entry = entry * entry;
            }
            if (i % 4 != 0) {
                entry = entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_1eb4ba9c_af67_4edb_99ce_fd07756186d5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_00474971_4a61_4a2a_901a_08b3049b63b8(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_930a195a_4207_4fde_8c9d_8d4222642842(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if(i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b344a864_912f_4051_b071_e543fb9a9fba(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ad5b03cd_df53_40e0_a401_35a92898c0b4(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_fff56753_44ab_4b28_a42d_8118a4d83846(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_7437e832_c555_4f9b_aad4_382ba4d01cae(ArrayList<Integer> lst) {
        int sum = 0;
        ArrayList newList = new ArrayList();

        for(int i: lst){
            if(i % 3 == 0 || i % 4 == 0){
                newList.add(i);
            }else{
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_d0fb838b_f85c_4874_b9f7_938bb0b4688c(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_1_1ba1f6b4_9e2f_4de2_b5c6_de85e9680cfa(ArrayList<Integer> lst) {
        int sum = 0L;

        for (int i = 0; i < lst.size(); i++) {
            if (i%3 != 0 || i%4 != 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i)* lst.get(i);
            }
        }

        return sum;
    }

    
    public static int sumSquares_Problem_1_8d27fa1e_f3e9_4056_8724_bf79358dc8a7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_692bcc92_5697_49a5_8075_744188d2bf67(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_bb1732b9_be5b_411a_88c1_6b3c85fe7f4c(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_e7b272ce_3940_4637_95ed_86ab1b8715d5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_26880261_382b_4e86_abb1_697440f0b69d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_3b52639f_08b1_40d9_92ff_35a4dbbecd56(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e27c79db_7149_4b02_b65c_1b4c9ae37533(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_b7140928_9635_4c5d_bb8f_19ff0fba1a72(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_4ea381ec_770c_42ef_aadb_073a94700262(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_71f5ba7e_126b_42ca_9c4d_72fb3f1115ca(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_7_4a4fc6e7_1fde_4395_8f7b_a5ecf7dd2060(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_76e049a5_0333_448b_ba5a_e3b69686cd4a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b960507f_68a7_413b_bef9_5c783deba68d(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_3_187fe97e_fa5e_4288_a0bc_c23248e92289(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_96a790d7_26ac_4f81_9509_09131c31dec2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_cffb825a_fb1c_4337_b57a_726dc5e72074(ArrayList<Integer> lst) {

        // Write your code here.
        return lst.stream().mapToInteger(x -> x*x).sum();
    }

    
    public static int sumSquares_Problem_2_37ccb481_8ea5_4c72_8fcd_c91bee5603a1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_2f7ae070_0144_4672_852d_307ad82e59e6(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b7140928_9635_4c5d_bb8f_19ff0fba1a72(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e9511eeb_c1d1_435c_9572_6d57456515ff(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_30bfe9d7_d93c_475e_af85_27629e4aed01(ArrayList<Integer> lst) {
        int sum = 0;
        for (int num : lst) {
            sum += (num & 3L) * num * num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_ea46944d_6e45_47f4_b822_3a386b9c12ff(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd(ArrayList<Integer> lst) {
        // "
        // This function will take a list of integers. For all entries in the list, the function shall square the integer entry if its index is a 
        // multiple of 3 and will cube the integer entry if its index is a multiple of 4 and not a multiple of 3. The function will not 
        // change the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries. 
        // Examples:
        // sumSquares_Problem_6_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) = 1 + 4 + 9 + 8 + 27 + 64 + 125 + 216 + 343 + 512 = 1225
        // sumSquares_Problem_6_16b23aec_f0fc_4f64_90dd_6b5ae2f7a4fd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]) = 1 + 4 + 9 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 = 16900
        // "
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_d3005b08_ae5c_48ee_a27a_5daf9d966bb7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_62abed60_1a2f_43bb_ab00_8c9b503e9a27(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_cffb825a_fb1c_4337_b57a_726dc5e72074(ArrayList<Integer> lst) {

        // Write your code here.
        return lst.stream().mapToInteger(x -> x*x).sum();
    }

    
    public static int sumSquares_Problem_8_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_aa045fa2_71bf_4a24_80e2_9b11d545a5d1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_dad8f6a8_0044_444b_a3f2_738f376c788d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_71f5ba7e_126b_42ca_9c4d_72fb3f1115ca(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_1_3fdf955c_dd8e_4d0f_be67_7e57be347d5d(ArrayList<Integer> lst) {
        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_e4883c35_6136_4eac_a548_2b882630b4da(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_1bdc924b_8b14_46bd_9a28_20cbc335b68a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_57b1198e_ec69_480c_b310_37fa18c72408(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_fc513e13_1c49_4633_918b_3bfb255a5ac4(ArrayList<Integer> lst) {
        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_2012b95c_accb_48c5_a84d_2a5e19cc2144(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_81c807b0_d9b1_4576_8198_7daa6be373cf(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_587e36f5_fc86_44ef_874c_3ecc1f275fab(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_b57787ee_d9f7_4b85_8734_3fb62f2615df(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_966e529a_30e9_457d_8abf_901a6bfab7fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_78cbb79f_0cf1_48fd_bad4_f6cbed1c12de(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_8f0a13b6_039d_4837_b27c_9446f2e2c040(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_72acb516_421d_47bd_8b64_daa7e26b46e4(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_d8fe484b_7325_4bec_9d32_a31ed6afe790(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_6_c8133f89_a8bd_4a12_83c0_b5c8fdfdd015(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_6b7153cc_6dd6_414c_aaea_c348b763ea89(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_7a2068fd_8f11_42be_9d17_0a15768bdd94(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_ca2be47a_b862_465c_84da_6f0c73906405(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_f69ba47d_e771_405f_ab1e_6c0256bb98d1(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_db47b70c_c2f3_4ce6_a98c_5309009653cc(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
            if (lst.get(i) % 3 == 0)
                sum *= lst.get(i);
            else if (lst.get(i) % 4 == 0)
                sum *= lst.get(i);
            else
                sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_139dde5d_e1ef_4e9b_a336_a3550f786b1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_00120f57_0796_4276_ae6c_c0ee5d320c1e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_ce7d4062_3c8a_4fbc_8d98_421aa50239ac(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_ec63832f_4d1b_439b_a6d2_7c23682e3dd2(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_bce02fa9_879f_49c1_88cc_f0fa38607796(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_98fd3816_e58c_4911_ab82_6325e9f72e87(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_cfd28e78_833e_4d0f_b036_f052369b3c09(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_da869c77_032d_47dc_94f2_8939e2ef1405(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_21d1e7f2_b38b_4e75_abed_292e8342e81f(ArrayList<Integer> lst) {
        return 0;

    }

    
    public static int sumSquares_Problem_1_6ae54152_0ec4_451a_be16_b3adad86a9f0(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_4fd17288_b9f0_4cb7_8211_5c57e96bb7d9(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_19bfe466_79c5_46e2_ac1b_cbceb8afa556(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b57787ee_d9f7_4b85_8734_3fb62f2615df(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_8013f572_6b2b_4aa7_89db_fb9d2ef2a052(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0){
                sum += lst.get(i);
            }
            else if(lst.get(i) % 3 == 0){
                sum *= lst.get(i);
            }
            else if(lst.get(i) % 4 != 0){
                sum *= lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_317635d7_08ac_4e79_bd3b_7c12fdf086c4(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_57c9490e_c8fe_4d61_99cb_b386fc861e86(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_57c49baa_5c8d_46cf_9b0b_0b397c934e2a(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_7a18cc13_30db_4934_89db_a4492802861f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4!= 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 3!= 0 && lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_51da9846_b0eb_44c7_9601_b63fef168983(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_6_a986814f_f7c8_40e8_ad7b_7acec2277f87(ArrayList<Integer> lst) {

        // Write your code here.
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_15dc3143_4476_405c_b934_727b11559acb(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x * x).sum();
    }

    
    public static int sumSquares_Problem_8_c637337c_4c3d_4d95_87a3_4a9e070a3dff(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_9f7c04cd_81aa_4753_ac47_8786a0898509(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b024984c_0eef_4caa_8a11_ec361a6790ab(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_248569a2_3322_4596_9381_d3d1fa1faa5a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_5_8f0a13b6_039d_4837_b27c_9446f2e2c040(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_3c818ff9_63a4_4d1d_8625_b24e5fc79de3(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_856e788c_5765_4f5b_9ea7_18fa6327a37f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int e : lst) {
            if (e % 3 == 0) {
                sum += Math.pow(e, 2);
            } else if (e % 4 == 0) {
                sum += Math.pow(e, 3);
            } else {
                sum += e;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_01b7e467_4c11_4299_a3f3_0cd56795bae9(ArrayList<Integer> lst) {
        return lst.stream().filter((Integer x) -> {
            if (x % 3 == 0) {
                return False;
            }
            if (x % 4 == 0) {
                return False;
            }
            return True;
        }).mapToInteger(Integer::intValue).sum();
    }

    
    public static int sumSquares_Problem_1_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_61e5e3ef_c45c_42ae_b86f_27e47bf08072(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01(ArrayList<Integer> lst) {

        // TODO: Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_4834397a_c49e_4993_ad6d_d1dedc98f37a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_a00924fd_5f4e_45a4_930f_427c4b139cbe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_8df0a8fb_76a6_4d47_b27f_9ab44cf86e3c(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_a211427b_1364_4f51_b3a0_1ed021aff93a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_6d0d17c8_2d83_49ed_932b_7008176e9c5c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_0898b423_5922_4c3b_883e_4c6a1f4ea9ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_d812e5e1_b8fd_4eb2_8734_f923d475fc0f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_6e92f2be_3435_47e2_824d_e569b5da23be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_87db7987_a454_4ab0_81a7_ba7097ecc2c0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_3434766c_069e_4c8b_aaa0_a87707738ebf(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_4_f6e4baa3_4a43_4ecb_b479_ad9ee1a593bb(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_a3f92616_88fe_459a_9939_6a4970de9921(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_998e231a_abe8_4fd1_b3a5_0db1998c29f3(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_1da8150c_e052_4519_b96b_89c47ffb4e4e(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_8c973c8b_9e5c_4dc0_a72c_b25747f83287(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if ((i % 3 == 0) && (i % 4 == 0)) {
                sum += i;
            } else {
                sum += i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_c28b0d67_bb5c_492e_837f_94a10bb30214(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_217175a3_7d5b_4509_9ee3_34a185512cc7(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if ((i%3)==0) {
                sum += i*i;
            }
            if ((i%4)==0 && ((i%3)!=0)) {
                sum += i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_48dbeacb_0f3a_4772_b46f_af38ac31b320(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            }
            else if(i%4 == 0) {
                sum += i*i*i;
            }
            else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_3c4de698_31c8_4d76_8edd_eaebd6accce3(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        int sumOfCubes = 0;
        int sumOfCubesNotMultipleOf3 = 0;
        int sumOfCubesNotMultipleOf4 = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sumOfSquares += i;
            }
            else if((i%4)==0) {
                sumOfCubes += i;
            }
            else {
                sumOfCubesNotMultipleOf3 += i;
            }
            if((i%4)!=0 && (i%3)!=0) {
                sumOfCubesNotMultipleOf4 += i;
            }
        }
        sumOfSquares = sumOfSquares * sumOfSquares;
        sumOfCubes = sumOfCubes * sumOfCubes;
        sumOfCubesNotMultipleOf3 = sumOfCubesNotMultipleOf3 * sumOfCubesNotMultipleOf3;
        sumOfCubesNotMultipleOf4 = sumOfCubesNotMultipleOf4 * sumOfCubesNotMultipleOf4;
        sum = sumOfSquares + sumOfCubes + sumOfCubesNotMultipleOf3 + sumOfCubesNotMultipleOf4;
        return sum;
    }

    
    public static int sumSquares_Problem_5_cab9aca5_c722_475d_ab42_035f1654c521(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b6ddbcca_3e40_412f_8001_c0904105adf3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_9d8fdebe_0ece_476e_aa90_2ce8240de597(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_a60435d2_fccd_48cc_9ec9_91c71091024c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_384b73ca_97b0_4a17_9a75_9a03608cd0f5(ArrayList<Integer> lst) {
        int sum = 0;
        ArrayList<Integer> newList = new ArrayList<Integer>();
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                newList.add(lst.get(i) * lst.get(i));
            } else {
                newList.add(lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        for(int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_eb5b91f3_c5b1_459e_b83d_2f3a849386c1(ArrayList<Integer> lst) {
        int sum = 0; 
        for (int i = 0; i < lst.size(); i++) {
            int a = lst.get(i);
            if (i%3 == 0) {
                a *= a;
            }
            else if (i%4 == 0) {
                a *= a*a;
            }
            else {
                sum += a;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_b0d3d27d_9d60_43fd_a4b3_aef7f5330bd9(ArrayList<Integer> lst) {
        if (lst.size() == 0)
            return 0; 
        int sum = 0;
        for (int i : lst)
            if (i % 3 == 0 || i % 4 == 0) {
                sum += i;
            }
        return sum;
    }

    
    public static int sumSquares_Problem_7_07fd84d4_ce27_46f2_a33f_85663ced0b68(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_f77c9afb_51a7_4f90_9fab_e9a871330a36(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_27759461_353e_4520_8148_62118dfbd567(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            int index = lst.get(i);
            if(index % 3 == 0) {
                sum += index * index;
            } else if(index % 4 == 0) {
                sum += index * index;
            } else {
                sum += index;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_4ee1a6f6_9e45_4e48_87a4_700fda0115a4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_4602b924_803d_415a_bdfe_0de0206a7125(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_63a48ad4_634d_43f2_844a_14595f5d6e12(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream()
                .filter(x -> x % 3 == 0 || x % 4 == 0)
                .map(x -> x % 3 == 0 ? x * x : x * x * x)
                .reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_7_df817c12_7227_4f8b_becb_6de9a82a1532(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_21a5057c_9234_44dd_8b3f_78fa8dfa74b3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_2920ec9d_4773_4905_bd37_c1e21eac8991(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x*x).filter(x -> x%3==0 || x%4==0).reduce(0, (x,y) -> x+y);
    }

    
    public static int sumSquares_Problem_0_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int index : lst) {
            if (index % 3 == 0) {
                sum += (index * index);
            } else if (index % 4 == 0) {
                sum += (index * index);
            } else {
                sum += index;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_c2591a9b_4372_46ab_8dd2_56240dea85a8(ArrayList<Integer> lst) {
        // "
        // This function will take a list of integers. For all entries in the list, the function shall square the integer entry if its index is a 
        // multiple of 3 and will cube the integer entry if its index is a multiple of 4 and not a multiple of 3. The function will not 
        // change the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries. 
        // Examples:
        // sumSquares_Problem_10_c2591a9b_4372_46ab_8dd2_56240dea85a8([1,2,3,4,5,6,7,8,9,10]) -> 1 + 4 + 9 + 8 + 27 + 64 + 125 + 216 + 343 + 512 = 1225
        // sumSquares_Problem_10_c2591a9b_4372_46ab_8dd2_56240dea85a8([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]) -> 1 + 4 + 9 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 = 14198
        // "
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_1717731d_366c_4c90_a35a_d95e658d3700(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_680cc2de_892b_4467_a5aa_9c53cc9a848c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i=0; i<lst.size(); i++){
            if(i%3==0 && i%4!=0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i%4==0 && i%3!=0){
                sum += Math.pow(lst.get(i), 3);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_bfc296d2_717f_4989_9757_abfe90b1b147(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_368df924_44d4_4bb5_ba7c_b5611f86d1d0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_86d2b02b_47fc_48de_acbb_cedc9ce17f95(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_c40eeabf_3889_464c_b8ef_d286127a21fe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_55c791ff_43bd_4681_81dd_474414d0907d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_bf9a39d6_42e7_4198_baec_7fb827e74e0a(ArrayList<Integer> lst) {
        int result = 0;
        boolean isMultipleOf3 = lst.get(0) % 3 == 0;
        boolean isMultipleOf4 = lst.get(0) % 4 == 0;
        for (int i = 0; i < lst.size(); i++) {
            if (isMultipleOf3 && i % 3 == 0) {
                result += lst.get(i) * lst.get(i) / 3;
            } else if (isMultipleOf4 && i % 4 == 0) {
                result += lst.get(i) * lst.get(i) / 4;
            } else {
                result += lst.get(i);
            }
        }
        return result;
    }

    
    public static int sumSquares_Problem_10_82addaa1_7852_4709_8e74_080aaab81171(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_b039404a_91d9_4bad_bc40_75ac9efe3f28(ArrayList<Integer> lst) {
        // Your code here
        int sum=0;
        if(lst.size()==0)
            return 0;
        if(lst.get(0) % 3 == 0 && lst.get(0) % 4 == 0){
            sum+=lst.get(0);
        }
        else if(lst.get(0) % 3 == 0){
            sum+=lst.get(0) * lst.get(0);
        }
        else if(lst.get(0) % 4 == 0){
            sum+=lst.get(0) * lst.get(0) * lst.get(0);
        }
        for(int i=1;i<lst.size();i++){
            if(lst.get(i)%3 == 0 && lst.get(i)%4 == 0)
                sum+=lst.get(i);
            else if(lst.get(i)%3 == 0)
                sum+=lst.get(i)*lst.get(i);
            else if(lst.get(i)%4 == 0)
                sum+=lst.get(i)*lst.get(i)*lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_e7b272ce_3940_4637_95ed_86ab1b8715d5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_85255359_79a8_4700_b57f_121c79528ad7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_151e4d09_2f26_45a4_82ef_11a0003a1251(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            }
            else if((i%4)==0) {
                sum += i*i*i;
            }
            else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_d2698ee2_438e_4e72_a50a_afc7dc65ec40(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_2b216a95_867e_456a_9ae0_69716553bccf(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_4ea73afa_216f_43a6_b4a8_5c9e25265273(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_013b1275_5d64_4713_97a2_b220b6c70607(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_a23b636b_1d1d_4429_9afd_59556b3dab46(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_17145441_5706_484e_b008_8555308a3251(ArrayList<Integer> lst) {
        int sum = 0;
        ArrayList<Integer> even = new ArrayList<Integer>();
        ArrayList<Integer> odd = new ArrayList<Integer>();
        for(Integer i : lst) {
            if(i % 3 == 0) {
                even.add(i);
            }
            else {
                odd.add(i);
            }
        }
        for(int i = 0; i < even.size() || i < odd.size(); i++) {
            sum += even.get(i) * even.get(i) * even.get(i);
            sum += odd.get(i) * odd.get(i) * odd.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_5698b24e_d4f8_47ec_a4b9_64feadacf73e(ArrayList<Integer> lst) {
        // Complete the function
        int n =  Math.ceil(Math.sqrt(lst.size()));
        int sum = 0;
        for (int i = 0; i < n; i++) {
            if (lst.get(i) % 3 == 0) 
                sum += lst.get(i);
            else if (lst.get(i) % 4 == 0)
                sum += lst.get(i);
            else {
                int k = lst.get(i);
                int d = k - k * k;
                sum += d;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_8243502d_090e_4278_bb5d_52bd4d64cd7a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int x = lst.get(i);
            if (i % 3 == 0) {
                x = x * x;
            }
            if (i % 4 == 0 && i % 3 != 0) {
                x = x * x * x;
            }
            sum += x;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_eff71699_d825_494a_8458_4fd5e9736e9b(ArrayList<Integer> lst) {
        int sum = 0;
        // We iterate through the list and for each element in the list, we
        // check whether the entry is a multiple of 3 or 4.
        for(int i : lst) {
            if(i % 3 == 0 && i % 4 == 0) {
                // This is a multiple of 3 and a multiple of 4 so square
                sum += i * i;
            } else if(i % 3 == 0) {
                // This is a multiple of 3 so cube
                sum += i * i * i;
            } else if(i % 4 == 0) {
                // This is a multiple of 4 so just add the value
                sum += i;
            } else {
                // This is not multiple of 3 or 4 so we do not change the list at all.
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_1ae2de34_dd11_421a_a919_1be39e9b8fcc(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_2643a559_2018_49ff_adb2_7d8ffdfc8fe8(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_2eec0a26_889f_42c8_ab3a_cf614c33eb02(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_2528cb01_e92c_46f0_abd1_5d87170ff5e4(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_389fcbe8_d09e_4ad0_9fde_d6218400ff60(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_6b31b8bc_2017_4e7e_8f0e_2314d99f9739(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_412ab1dc_173f_4ed5_8b65_aaf27d1b7545(ArrayList<Integer> lst) {
        int sum = 0;
        int square = 0;
        ArrayList<Integer> notAModulo3 = new ArrayList<Integer>();
        ArrayList<Integer> notAModulo4 = new ArrayList<Integer>();
        for (Integer i : lst) {
            if (i % 3 == 0) {
                square += i;
            } else if (i % 4 == 0) {
                square += i;
            } else {
                notAModulo3.add(i);
            }
        }
        for (Integer i : notAModulo3) {
            square *= i;
        }
        for (Integer i : notAModulo4) {
            square *= i;
        }
        sum += square;
        return sum;
    }

    
    public static int sumSquares_Problem_4_17f86cf2_936f_412d_a791_60d6955e061a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_951041ba_c6a0_469c_816c_249e1069ae61(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_8d2a7897_30cd_42b7_af8b_daee576d56f0(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_279cfa77_7685_4004_8c81_40e47b13596b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_0977a6d2_cd62_4541_a58e_9b64c3d5d288(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_774ce1b6_64e1_4a11_995f_96bf2a06121d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_fff880f2_d778_48ad_b7cb_16ce0573e33d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_018e5b2b_20bc_4228_8dd8_2e78c81fda11(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_3c9e4243_900b_41a9_be9e_4d90988988fc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_26896a9e_3d98_449f_bfa7_848f165a52f0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_0898b423_5922_4c3b_883e_4c6a1f4ea9ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_3b15ec94_2b96_471f_9d92_69a4613bf40e(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i * i;
            } else if(i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e4883c35_6136_4eac_a548_2b882630b4da(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_915e6ba7_730f_4f63_8101_0eb5624dcd98(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_e094467c_7ff1_4762_bc86_194281345421(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_6b31b8bc_2017_4e7e_8f0e_2314d99f9739(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_7fdfcd31_ce73_4fa8_aced_da168c555fc5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_cda23e1c_3a34_4b25_ab7d_0a69ef0f9c00(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_14568d3d_0ba2_4c59_9641_cc5afd69adcc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_67f9ab24_e75d_4003_92cb_b4436a8cd39d(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i * i;
            } else if(i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_defff587_6f79_4a00_9080_64916909dd30(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_d2698ee2_438e_4e72_a50a_afc7dc65ec40(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_2edb5059_523f_437e_b9e2_e7c5738130d5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_451e9b6b_0dc9_4613_99f8_feeeac29c616(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_d4cf3f8d_8cbb_439c_a52a_c475fef26424(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_2fbec46c_02d0_482c_8789_abea2f8471b0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_9d35b958_eff9_4260_bc51_0fdfddfce7e7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_7093b440_805b_4b47_8a22_0d471bfe93e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_c33bf9de_2375_44c8_884b_11c2db60fbf7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_573b929a_4e80_41b9_b8d9_07a65e195c9e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_4e97e821_98be_49ac_9bf8_f77b477ba0be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_2edb5059_523f_437e_b9e2_e7c5738130d5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_783891ee_eb84_464a_abb0_b42451fc07e0(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_c5d86865_e0f2_43bd_a160_35132eb25260(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x*x).filter(x -> x%3==0 || x%4==0).reduce(0, (x,y) -> x+y);
    }

    
    public static int sumSquares_Problem_6_ebb8e0f7_2d8f_4366_8fcf_a0aa66d4a36a(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_eb2bc4bb_4506_4485_b54f_52fdcb8e3cb0(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_0468ffea_52fd_43da_bb74_b7a2a122fb68(ArrayList<Integer> lst) {

        // YOUR CODE HERE
        return 0;
    }

    
    public static int sumSquares_Problem_8_6b30a54a_39f9_4bec_a658_7951eae74aec(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_7a7b052a_19c4_4df1_9680_f5b8f3c08119(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i,  Math.pow(lst.get(i), 2));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i,  Math.pow(lst.get(i), 3));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b039404a_91d9_4bad_bc40_75ac9efe3f28(ArrayList<Integer> lst) {
        // Your code here
        int sum=0;
        if(lst.size()==0)
            return 0;
        if(lst.get(0) % 3 == 0 && lst.get(0) % 4 == 0){
            sum+=lst.get(0);
        }
        else if(lst.get(0) % 3 == 0){
            sum+=lst.get(0) * lst.get(0);
        }
        else if(lst.get(0) % 4 == 0){
            sum+=lst.get(0) * lst.get(0) * lst.get(0);
        }
        for(int i=1;i<lst.size();i++){
            if(lst.get(i)%3 == 0 && lst.get(i)%4 == 0)
                sum+=lst.get(i);
            else if(lst.get(i)%3 == 0)
                sum+=lst.get(i)*lst.get(i);
            else if(lst.get(i)%4 == 0)
                sum+=lst.get(i)*lst.get(i)*lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_1069d0f9_57e7_44c1_9cbb_2c90cd997d4f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_b218c8b4_55fa_4568_ac94_6daab1a38fc0(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i * i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_018e5b2b_20bc_4228_8dd8_2e78c81fda11(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_60de6917_84b6_4306_b327_59c2729ce10f(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_4_d561c209_6270_457d_9a00_01276695dd04(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_fce5d637_400f_4b9e_af63_9a618310755b(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else if((i % 4) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else {
                sum += i;
                sumOfSquares += i * i;
            }
        }
        return sumOfSquares;
    }

    
    public static int sumSquares_Problem_4_a79bce20_ecb6_4d2e_9462_a1c34166658c(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_df8ce354_1273_42f6_bfa8_4ccc2bf1975e(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_ca44122e_b4c0_41e4_b0b1_ba7a40ef1875(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_a79f9971_af1e_4864_b6b4_55c2a8130e58(ArrayList<Integer> lst) {

        // Write your code here
        for(int i=0;i<lst.size();i++){
            if(i%3==0){
                lst.set(i,lst.get(i)*lst.get(i));
            }
            if(i%4==0 && i%3!=0){
                lst.set(i,lst.get(i)*lst.get(i)*lst.get(i));
            }
        }
        int sum=0;
        for(int i=0;i<lst.size();i++){
            sum+=lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_270ad58a_fdc7_45d0_8bc6_3986d18b8029(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_552c0649_9421_4ba1_bb4f_e3cb94528545(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_1ff409df_131f_4221_8e7b_9f0061046357(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_413db871_33f1_439c_959f_715f0931bb1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_12c01e48_df87_4a12_89e1_ad88fa7a8298(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f9d07973_5498_4f52_b32c_3a9cb4b74be5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_bab7bc37_6d48_4c0c_bd41_b960270b2dc4(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_0744667c_ae6d_4968_9675_34345530a46d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0(ArrayList<Integer> lst) {
        // Declare and initialise variables.
        int sum = 0;
        
        // Iterate through the array list entries and perform the required operation.
        for (Integer n : lst) {
            
            // For each entry in the array list calculate the required operation on the value.
            if (n % 3 == 0) {
                sum += n * n;
            } else if (n % 4 == 0) {
                sum += n * n * n;
            } else {
                sum += n;
            }
        }

        // Return the sum.
        return sum;
    }

    
    public static int sumSquares_Problem_4_4f31dbc3_8d16_4644_9032_3e2ef1850573(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_2dc1d790_febe_4c1a_97c3_fa493faa3d85(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_9e9d8312_52cc_40ae_ad0f_fb4068a21951(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i = 0; i < lst.size(); i++) {
            int index = lst.get(i);
            if((index % 3 == 0) && (index % 4 == 0)) {
                sum += index;
                sumOfSquares += index * index;
            } else if((index % 3 == 0)) {
                sum += index;
                sumOfSquares += index * index;
            } else if((index % 4 == 0)) {
                sum += index;
                sumOfSquares += index * index;
            } else {
                sum += index;
                sumOfSquares += index * index;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_f4eedc90_55ae_4fed_991f_a679b28f1df8(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_4f006df3_1986_4ab2_a21f_5eb4eef11551(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(e -> (e * e)).sum();
    }

    
    public static int sumSquares_Problem_9_c9046a74_2019_4003_97a9_72efa7d8d8bc(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_7cfcbc79_7467_47e8_a02c_98ec290ea5e9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum *= i;
            } else if (i % 4 == 0) {
                sum *= i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_692bcc92_5697_49a5_8075_744188d2bf67(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_42e689a1_7047_4755_9a24_f47af1beecc4(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b039404a_91d9_4bad_bc40_75ac9efe3f28(ArrayList<Integer> lst) {
        // Your code here
        int sum=0;
        if(lst.size()==0)
            return 0;
        if(lst.get(0) % 3 == 0 && lst.get(0) % 4 == 0){
            sum+=lst.get(0);
        }
        else if(lst.get(0) % 3 == 0){
            sum+=lst.get(0) * lst.get(0);
        }
        else if(lst.get(0) % 4 == 0){
            sum+=lst.get(0) * lst.get(0) * lst.get(0);
        }
        for(int i=1;i<lst.size();i++){
            if(lst.get(i)%3 == 0 && lst.get(i)%4 == 0)
                sum+=lst.get(i);
            else if(lst.get(i)%3 == 0)
                sum+=lst.get(i)*lst.get(i);
            else if(lst.get(i)%4 == 0)
                sum+=lst.get(i)*lst.get(i)*lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_ac4bcdec_3232_4f2b_9fbe_b10b43e04147(ArrayList<Integer> lst) {
        int lengt = lst.size();
        int sum = 0;
        for (int i = 0; i < lengt; i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            }
            if (i % 4 == 0) {
                entry = entry * entry;
            }
            if (i % 3 != 0) {
                entry = entry * entry;
            }
            if (i % 4 != 0) {
                entry = entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_82e83bbb_2930_474b_ad31_071881442dac(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_8c973c8b_9e5c_4dc0_a72c_b25747f83287(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if ((i % 3 == 0) && (i % 4 == 0)) {
                sum += i;
            } else {
                sum += i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_c1eef9aa_4da3_4719_b679_04537290a3fe(ArrayList<Integer> lst) {
        if (lst.size() == 0) return 0;
        int sum = 0;
        for (int n : lst) sum += n * n * n;
        return sum;
    }

    
    public static int sumSquares_Problem_7_b771b8dd_5bea_429f_b6f7_74218bb8a438(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_4ea1c0fc_f771_44d5_a5f3_71a5386fe686(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_86639ae9_e4c3_4149_b73f_d6829df05c61(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_41d6de77_a044_46d4_b27e_e3ebaafe0cba(ArrayList<Integer> lst) {
        int sum = 0;
        // This while loop ensures we don't go out of bounds, if there is no element in the list lst
        for (int i : lst) {
            if (i % 3 == 0 && i % 4 == 0) {
                sum += i;
            } else if (i % 3 == 0) {
                sum *= i;
            } else if (i % 4 == 0) {
                sum /= i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_661bbd0e_d19e_40f1_99c0_311dd686ba06(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_9f12f3bf_9ca3_4379_abe0_2dea8e2efe64(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_7093b440_805b_4b47_8a22_0d471bfe93e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_bc4af9d9_c08e_42fd_946a_790968ef9503(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_3ac4198e_932f_4069_ad4a_0a1dd00ad27c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_d83ad240_be1a_48d5_8999_d4f77c997ddc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_164a09c6_03a5_45de_b5e8_f2af4e3f660b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_afca1330_ec51_4c39_b92e_72b76b4673ea(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_5_7dee0925_89f9_4fa0_b216_aa4c008c47a3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_86e91777_6292_4b6f_b875_3cd212b44283(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_003ae497_eb2a_407c_bc09_ed4e11f382cc(ArrayList<Integer> lst) {
        // Your code here
        return 0;

    }

    
    public static int sumSquares_Problem_8_bad48590_4d05_41aa_bdd2_608190457f28(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_919f2136_74af_4a64_830c_fa32249b9911(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_e977284a_e651_4a31_815b_6f9a68cf57f5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_f3d6b5ee_d738_4b6b_a41e_efa0bbee040b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_ccb27a94_7e19_4ad0_be16_237b6abb53bc(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_08403272_232e_4f11_9cf5_200a50f6f57f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_ed60d1dd_f669_4e9a_b441_1236ce649679(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_80c503b2_19d6_4ed5_a741_4a2bb07b4bdb(ArrayList<Integer> lst) {
        return 0;
    }

    
    public static int sumSquares_Problem_4_bfcd2dc1_c93f_41eb_82b3_69ef7536a85a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_4_483d837f_2fc2_4eae_9146_3b437f1a8d73(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i*i;
            } else if (i % 4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_1bf5baf4_6518_4146_88f6_fd98f2123cd8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_155ee5e7_8caf_4b20_8edd_33bb6177c06e(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_7313cd55_4357_4156_81b1_5c8176243aeb(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_aa1cfa02_6e79_4c1b_b01a_f174acf206d6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_4f31dbc3_8d16_4644_9032_3e2ef1850573(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_b995b6ab_1e95_4c21_b895_55ec8aeac450(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_412ab1dc_173f_4ed5_8b65_aaf27d1b7545(ArrayList<Integer> lst) {
        int sum = 0;
        int square = 0;
        ArrayList<Integer> notAModulo3 = new ArrayList<Integer>();
        ArrayList<Integer> notAModulo4 = new ArrayList<Integer>();
        for (Integer i : lst) {
            if (i % 3 == 0) {
                square += i;
            } else if (i % 4 == 0) {
                square += i;
            } else {
                notAModulo3.add(i);
            }
        }
        for (Integer i : notAModulo3) {
            square *= i;
        }
        for (Integer i : notAModulo4) {
            square *= i;
        }
        sum += square;
        return sum;
    }

    
    public static int sumSquares_Problem_6_fc81fbe9_6d08_4792_8892_079fe6a21b70(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_0ae0d2d9_c5e6_41ad_99e3_dce92efa88e7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_44aca58b_42df_4fcd_bf03_3f3acddf69c5(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_b7106b93_7013_4bd5_8b7a_d73ef24eb25a(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            } else if(i%4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_164a09c6_03a5_45de_b5e8_f2af4e3f660b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3fe8c593_c911_4281_8ff6_fb8d1469d7db(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_a60fa43f_e399_4865_bf8f_32da8c123c4d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_9d94c549_c5b3_495f_ba67_5dac8956fd1b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f792f7f2_ec71_491f_a233_b42dc798a07c(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x * x).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_6_ee4f33bd_1e83_4be8_9953_701b4b23bc77(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_bcb19784_7424_434a_a9f2_f025dfaf8a59(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_e6144540_b1a9_4c63_a2fe_933e40d4ee96(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_7166fc05_b420_40b5_9adc_67af4588f020(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_541fc626_9c91_421b_a614_ae3d2bf1a968(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_5_20544d7e_2ed6_4150_b886_c820ab4e7991(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_4c23f4b8_34fb_44d2_b2b3_1c54ed9dd3c0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5a040027_077a_4fd7_b6f4_a06b823b02f2(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_628b2219_3c61_491a_b338_374b3f81af59(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_1c63b9e3_d8d3_4531_a74f_785ec0df6a62(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer l : lst) {
            if(l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_1949168b_32de_43a6_b1e8_69dca169b9db(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_420fa16b_35b2_4b1e_9984_b4fd226171ad(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_ba1e2ded_36f1_460d_abbf_35d27e5e5e27(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_07fd84d4_ce27_46f2_a33f_85663ced0b68(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_f6eed8b9_75db_453e_aa58_776776cf6533(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_b636416f_8d4d_424c_8c3c_6143581d8e46(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_0744667c_ae6d_4968_9675_34345530a46d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_3cf4587b_0126_4ec1_ab1d_c5c095a0cca8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5582aa71_cab7_4ceb_a4d0_d97faa536e32(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_3cb646c5_f828_4d73_ac1c_2f1b95367e97(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_28c21861_31d0_48a8_9390_47fae3634c88(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_e6203384_b4af_46d4_be30_cf95270a51b5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_f63d409d_516f_4bdb_8f21_a636a37dc729(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_b0a165d6_b437_4e95_ba93_8437058c85f5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_a1e9e61f_ef90_4e43_9721_cdb6a538b525(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_6fd1b752_2140_4c98_939f_b6d1568a0a27(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_5f950da1_25a3_4028_98c6_556fc489d94e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_be497ed6_5fc8_43f5_91f9_d7e800d39a3d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_d3005b08_ae5c_48ee_a27a_5daf9d966bb7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_0daa4908_ad7e_46e0_8b47_b6ee2cfd028e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_2bdf1354_de76_475e_be15_5275ca07d202(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_ee4fcadc_aada_4e8a_b5aa_71c52ad0d38d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_7437e832_c555_4f9b_aad4_382ba4d01cae(ArrayList<Integer> lst) {
        int sum = 0;
        ArrayList newList = new ArrayList();

        for(int i: lst){
            if(i % 3 == 0 || i % 4 == 0){
                newList.add(i);
            }else{
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_7db3a8c8_5d8f_48e8_8099_00d25758a70a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int e : lst) {
            if (e % 3 == 0 && e % 4 == 0) {
                // e is a multiple of 3 & 4
                sum += e * e;
            } else if (e % 3 == 0) {
                // e is a multiple of 3
                sum += e * e;
            } else if (e % 4 == 0) {
                // e is a multiple of 4
                sum += e * e;
            } else {
                // e is not a multiple of 3 or 4
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_55c791ff_43bd_4681_81dd_474414d0907d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_483d837f_2fc2_4eae_9146_3b437f1a8d73(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f272842c_cc6f_4617_8dfd_026b72411776(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            }
            else if((i%4)==0) {
                sum+=i*i*i;
            }
            else {
                sum+=i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_3_1da8150c_e052_4519_b96b_89c47ffb4e4e(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_81329772_a43b_44ed_84ee_f9fea556dfb7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_9_261fbf1b_360f_4c6d_9ca6_57ac36781f70(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_bc989c77_188f_451c_ae40_a9e75e9fd8ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_9b336553_9a36_4b2a_a124_f263bcb946f4(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_96476ed6_e033_4e23_8251_0bfb2ef28e80(ArrayList<Integer> lst) {
        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            int x = lst.get(i);
            if(x % 3 == 0 && x % 4 != 0){
                x = (x*x) * x;
            }
            else if(x % 4 == 0){
                x = (x*x) * x;
            }
            sum += x;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_158020f2_f440_443f_bdfc_bf4bf66fe502(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_427bc80b_3fab_4486_9da3_033c7d21927c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_11cbe7a9_951b_419b_ad6b_497c9a804849(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_6b115241_d747_4403_875f_c0173683c785(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_fb49aa32_8996_434a_8794_94b2a5ffdf8d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_67529236_e760_43a3_9ea7_51cc91ddbaa6(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_7cfcbc79_7467_47e8_a02c_98ec290ea5e9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum *= i;
            } else if (i % 4 == 0) {
                sum *= i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_4d624990_b328_4f75_b9ad_bafd0dd0f593(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4!= 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 3!= 0 && lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_5412e256_0693_4601_9264_bb98a1655290(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_47349341_ae9d_4c25_9c3a_1b70d8865e30(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_6dedb913_4d05_4b8c_9499_254d2408ad58(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_d3005b08_ae5c_48ee_a27a_5daf9d966bb7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_15091014_7235_4798_83e4_3a32431ef765(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_9f8dca92_1c17_4f0b_869f_d0102f7601e7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278(ArrayList<Integer> lst) {
        int sum = 0;
        if (lst.size() > 0) {
            // If size greater than zero then iterate over each element.
            for (int i = 0; i < lst.size(); i++) {
                // If index is divisible by 3 then square
                if (lst.get(i) % 3 == 0) {
                    sum = sum + lst.get(i);
                } else {
                    // If index is divisible by 4 then cube
                    if (lst.get(i) % 4 == 0) {
                        sum = sum + lst.get(i) * lst.get(i);
                    } else {
                        // If index is not divisible by 3 or 4 then return -1
                        return -1;
                    }
                }
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_331182a0_5c89_43d5_b594_925b82c37a8e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_0abf1df0_df0d_4688_8bbc_795abef54331(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_412ab1dc_173f_4ed5_8b65_aaf27d1b7545(ArrayList<Integer> lst) {
        int sum = 0;
        int square = 0;
        ArrayList<Integer> notAModulo3 = new ArrayList<Integer>();
        ArrayList<Integer> notAModulo4 = new ArrayList<Integer>();
        for (Integer i : lst) {
            if (i % 3 == 0) {
                square += i;
            } else if (i % 4 == 0) {
                square += i;
            } else {
                notAModulo3.add(i);
            }
        }
        for (Integer i : notAModulo3) {
            square *= i;
        }
        for (Integer i : notAModulo4) {
            square *= i;
        }
        sum += square;
        return sum;
    }

    
    public static int sumSquares_Problem_2_7e9b888a_6161_4f8f_857c_bc589aeda3ba(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_c5275a4c_542a_4ea9_a02e_07e2c2c013f1(ArrayList<Integer> lst) {

        // TODO: Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_0_a90687c8_3c55_4822_9987_5affc74c1b2b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_5da6fd0b_3667_418c_a7f2_2c5dad2038d8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_10a54894_d120_4410_8bfa_f60de69384af(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_420fa16b_35b2_4b1e_9984_b4fd226171ad(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_04057992_1595_487f_94b3_bae9f4d499b9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_93189ff4_374d_4093_85d7_772b1c1021b5(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_c28b0d67_bb5c_492e_837f_94a10bb30214(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_ee303cc0_a006_48c5_9eec_6cbceec6d33f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_49fcd812_3a47_4e35_9964_59008040728f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_0e5f0601_e963_438f_a684_4a6694bdfcc9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e64c14f1_5d1b_4fa8_b931_5c2889db16d7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_9f8dca92_1c17_4f0b_869f_d0102f7601e7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_843605a1_5f73_4543_b747_2a4697a28709(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_7409e963_a8ae_4eff_a318_b4401187cb66(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_8_097d8a17_ddde_43d0_8135_437ccc992462(ArrayList<Integer> lst) {
        if (lst.size() < 3) {
            return 0;
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); ++i) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_95f77aad_a410_44b3_9395_50adf4c2205e(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_97e19cb9_969d_46b2_895d_9effded63d5b(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_f5de8e00_7231_443e_8592_9b42c1a980a9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_60e60c12_1e85_4b73_ae04_0e181b73b2b5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b6a4801e_a839_42a1_b60d_8db996c72a18(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_070dfb2a_8fac_41ba_bee4_5fea91a7f5e5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_5f043fda_6338_4fc7_845b_6b91bc601040(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_c7470eaf_055b_4e0c_a404_b2a55a1e8178(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_07fd84d4_ce27_46f2_a33f_85663ced0b68(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_a194825b_6cfc_4259_bdcf_8e9c020265b7(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            }
            else if((i%4)==0) {
                sum+=i*i*i;
            }
            else {
                sum+=i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f6e4baa3_4a43_4ecb_b479_ad9ee1a593bb(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_5366314e_bffb_40b3_aee5_5449e3d04850(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_20544d7e_2ed6_4150_b886_c820ab4e7991(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_04447889_0e0d_4932_8122_7062b0b97fb6(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i: lst) {
            sum += i%3 != 0 ? i * i : i%4 != 0 ? i * i * i : i * i * i * i;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a(ArrayList<Integer> lst) {
        int sum = 0;
        int count = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                sum = sum + i;
                count++;
            }
        }
        sum = (sum * sum) / count;
        return sum;
    }

    
    public static int sumSquares_Problem_7_932345d5_7fa8_4538_bc14_186f5ba046f1(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_00318802_621a_45c9_847c_0d4fd3104ea3(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_1069d0f9_57e7_44c1_9cbb_2c90cd997d4f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_45b385b7_5362_410a_ae36_d7f8b115eb27(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_31ed5b8c_4003_456b_803e_7b8f9d2689a1(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_1eb4ba9c_af67_4edb_99ce_fd07756186d5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_736b8ee1_4b06_480b_a72a_ca2f7b8945db(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_981a6d8c_c269_4ec6_9a15_de48f8f1b05d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_df8ce354_1273_42f6_bfa8_4ccc2bf1975e(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) // if index is multiple of 3
                sum += lst.get(i) * lst.get(i); // add square
            else if (i % 4 == 0) // if index is multiple of 4
                sum += lst.get(i) * lst.get(i) * lst.get(i); // multiply by 4
            else // if not multiple of 3 or 4
                sum += lst.get(i); // add original
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_71633854_5a00_4af3_8f20_050aa6f02a47(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_3cf4587b_0126_4ec1_ab1d_c5c095a0cca8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_55c791ff_43bd_4681_81dd_474414d0907d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_727c1f17_1d45_433c_b239_78e6b9f3b708(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_727c1f17_1d45_433c_b239_78e6b9f3b708(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_8b5c8756_c601_4a93_8e97_399236f57d4f(ArrayList<Integer> lst) {

        // your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_fff880f2_d778_48ad_b7cb_16ce0573e33d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_a38baa72_7c6c_40cb_90d6_467814669ba1(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_f7877ff9_0fa2_49c9_86fe_ded60d744f4c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01(ArrayList<Integer> lst) {

        // TODO: Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_c40eeabf_3889_464c_b8ef_d286127a21fe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_608d59bd_162c_40c5_a2d7_dc6ad044d23d(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_257bddba_f191_44bc_951f_827a818fd563(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_97d8e748_5be4_4f92_800c_45f557f0d960(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_51da9846_b0eb_44c7_9601_b63fef168983(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_4_c8a6bff4_bf18_4d14_9fb7_fbb0d69bd57c(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_6493f40a_ad90_4e32_9d59_429b77d0acef(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e1a8c7c4_11ec_483c_8a39_c384bf07bffc(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((lst.size() % 3) == 0) {
                sum += lst.get(i);
            } else if((lst.size() % 4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_3cf4587b_0126_4ec1_ab1d_c5c095a0cca8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_11b130b4_9e9b_4daa_b940_1bb9f0071084(ArrayList<Integer> lst) {
        ArrayList<Integer> ret = new ArrayList<Integer>(lst.size());
        for (int num : lst) {
            if ((num % 3) == 0) {
                num = num * num;
            }
            else if (num % 4 == 0) {
                num = num * num;
            }
            else if (num % 3 == 0) {
                num = num * num;
            }
            else if (num % 4 == 0) {
                num = num * num;
            }
            ret.add(num);
        }
        return ret.stream().mapToInteger(x -> x).sum();
    }

    
    public static int sumSquares_Problem_10_5fcbf3db_a994_4263_b99d_4f3608c69312(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_47349341_ae9d_4c25_9c3a_1b70d8865e30(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b11f820b_abf0_4ad2_86ec_7fde7a9030be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_7424c47c_b8bc_4e5d_8ddc_a064512d4281(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_cffe725b_8073_4217_8418_fce2e01e0da1(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for(Integer i : lst){
            if((i%3)==0 && i%4!=0){
                sum = sum + i*i;
            }else if((i%3)!=0 && i%4==0){
                sum = sum + i*i*i;
            }else{
                sum = sum + i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_ad461f13_726d_4c5d_9c86_df85fe03b77c(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else if((i % 4) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else {
                sum += i;
            }
        }
        return sumOfSquares;
    }

    
    public static int sumSquares_Problem_10_919f2136_74af_4a64_830c_fa32249b9911(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_0898b423_5922_4c3b_883e_4c6a1f4ea9ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_0206d57c_ccee_451f_ba0c_5c46aa9bb4dd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_83da11d5_813f_4428_999f_10662e24efed(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_dbad242a_9fd3_421c_ba9a_5cc765181b33(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_3cf4587b_0126_4ec1_ab1d_c5c095a0cca8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_005ba5bc_4a1b_4ba6_bdcf_6847c9334151(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5642795f_9628_46f1_976c_44262f3bda16(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x * x).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_9_a0695789_7e86_436d_ae93_6e212b003010(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_4c265e4e_8008_43c4_8ba8_7671d8b00b49(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_e6144540_b1a9_4c63_a2fe_933e40d4ee96(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_5be0a2de_b5f5_4f86_8eb4_734dc89c2e89(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            } else if((i%4)==0) {
                sum+=i*i*i;
            } else {
                sum+=i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_d4680eba_651b_45f8_8afb_3426f05e6ff8(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_15091014_7235_4798_83e4_3a32431ef765(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_f4eb5af5_3708_4de5_b2a1_9c686fe347f9(ArrayList<Integer> lst) {

        // Your code goes here
        return 0;
    }

    
    public static int sumSquares_Problem_6_7e9b888a_6161_4f8f_857c_bc589aeda3ba(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_d0deb0ed_620e_4015_b3b0_b6c930503198(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_87db7987_a454_4ab0_81a7_ba7097ecc2c0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_3dd80269_1724_42c9_beed_d9ee99f84ab9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_87dabe2f_e527_4420_a278_aeaf1b587005(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_8243502d_090e_4278_bb5d_52bd4d64cd7a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int x = lst.get(i);
            if (i % 3 == 0) {
                x = x * x;
            }
            if (i % 4 == 0 && i % 3 != 0) {
                x = x * x * x;
            }
            sum += x;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_0104c9df_377d_4aa3_b6cf_39905d261c4a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_2c4d4ba7_e4a2_487d_a75c_f839b4813bab(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_98f30288_aad9_467d_b208_6b27d0cf85c0(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_2c67e434_cc17_41ae_bd5d_f08bf50aa2cb(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_55c791ff_43bd_4681_81dd_474414d0907d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_ba6d21fc_8021_4a22_b214_83ace49fea9f(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_21c5ab9d_1a4b_49fd_bc45_f93e08c14318(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_50adf360_8a8e_4e4f_81a9_5b0f6c46395b(ArrayList<Integer> lst) {
        int sum = 0; 
        for (int l : lst) {
            sum += l; 
            if (l % 3 == 0) { 
                sum += l; 
            } else if (l % 4 == 0) {
                sum += l;
            } 
        }
        return sum; 
    }

    
    public static int sumSquares_Problem_3_8243502d_090e_4278_bb5d_52bd4d64cd7a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int x = lst.get(i);
            if (i % 3 == 0) {
                x = x * x;
            }
            if (i % 4 == 0 && i % 3 != 0) {
                x = x * x * x;
            }
            sum += x;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_c607120f_5ef8_4f46_b0ab_de2dd693d9ad(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_51084fd7_6d8d_4296_b056_679d340ee03b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_c7259bf8_3cb5_4b5f_833f_136d950dbf5d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_d228a53b_72e9_4a0d_88c4_33197bb2e01a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e6144540_b1a9_4c63_a2fe_933e40d4ee96(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_a8a129a8_fac5_44a8_826b_4d803ab2e186(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i,  Math.pow(lst.get(i), 2));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i,  Math.pow(lst.get(i), 3));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_cb180842_91b5_448c_aa55_30be8163ffe1(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_cf345aa0_2da6_487b_88f0_83696210313e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_92955d82_f118_4e74_b2ae_ae97b339b330(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_676f8461_bb7b_4e5d_9dc3_814714aa7bc9(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_cb63dc2a_8d0f_45b2_8727_06a4a76404e7(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b3534ed7_8c64_47e7_9cf1_36cfbb23857d(ArrayList<Integer> lst) {

        // your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_bc75a77c_3ea9_40e4_be99_4cf286267683(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_a38baa72_7c6c_40cb_90d6_467814669ba1(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_164ca8ff_b029_4224_afd4_88fbae9924e2(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_d4cf3f8d_8cbb_439c_a52a_c475fef26424(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_621477ba_4954_4cd3_9812_cbd314708938(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_14dfeaec_5c04_4390_9167_156341020e66(ArrayList<Integer> lst) {
        // "
        List<Integer> lst2 = new ArrayList<Integer>(lst.size());
        for (int i : lst) {
            if (i % 3 == 0 && i % 4 == 0 && i != 0)
                lst2.add(i * i);
            else if (i % 3 == 0 && i % 4 == 0)
                lst2.add(i * i * i);
            else if (i % 3 == 0)
                lst2.add(i * i * i * i);
            else if (i % 4 == 0)
                lst2.add(i * i * i * i * i);
        }
        int sum = 0;
        for (int i : lst2)
            sum += i;
        return sum;
    }

    
    public static int sumSquares_Problem_8_f950064d_26cf_4c97_b52e_40f2438f246d(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        int count = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i);
            }
            if (lst.get(i) % 4 == 0) {
                sum *= lst.get(i);
            }
            count += 1;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_abda6443_f84a_4b2d_91ba_c4e347812c03(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_558e2004_f9c3_415a_8c13_5dee91265aaa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_89e1a78d_bd2b_444c_ad40_f3b0d4937900(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_bce02fa9_879f_49c1_88cc_f0fa38607796(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_eacec2c1_23cb_4dc9_a7d9_175dfc405289(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_8a8b7c66_78c8_458a_b168_ccf07efc7639(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_9572fbd3_c8ab_415b_b7c5_7e41dd755765(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            sum += Math.pow(i, 2);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_60e60c12_1e85_4b73_ae04_0e181b73b2b5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_ce574732_f08d_4383_a68d_2094ab2a7f0e(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_0104c9df_377d_4aa3_b6cf_39905d261c4a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_3f1d5f9f_8005_4be1_be6a_af01edd12315(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_bc4af9d9_c08e_42fd_946a_790968ef9503(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_85255359_79a8_4700_b57f_121c79528ad7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_60ccdf3e_0f1b_4cf8_81ba_5489ee6566e3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_353ad608_082d_4437_b5d9_b4968a0c4668(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_7b816e28_ac1c_4dff_a6fb_30999b93dc30(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_654670c5_371b_409e_82dc_510307733a0e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_14568d3d_0ba2_4c59_9641_cc5afd69adcc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_399e1ee8_b536_4b4f_acb5_606a07826bfa(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_7_0f7ada62_460a_4eb5_be82_f9797b2d7376(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_7d1be315_9a18_46aa_94ef_7b3fff43e696(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_b9991f95_0b61_46e5_becf_ffe18aca9898(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_277e4053_cab8_42ec_8a25_5f240f9c7f2d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_3dd80269_1724_42c9_beed_d9ee99f84ab9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_16a19495_7462_4362_b04f_fc9bde746fb6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_50c7ebde_3ffd_42f1_8f64_9328f09d581b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_d12051b2_67f6_423e_a823_7025285193da(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_261fbf1b_360f_4c6d_9ca6_57ac36781f70(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_f125b4e2_9d79_4d41_a57b_babd368bb827(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x*x).sum();
    }

    
    public static int sumSquares_Problem_2_0f001c54_194f_425a_86c7_ef2db7c3f888(ArrayList<Integer> lst) {

        // Your code goes here
        return 0;
    }

    
    public static int sumSquares_Problem_10_17eed356_a98a_4144_81cc_a130dc8d71dd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_420fa16b_35b2_4b1e_9984_b4fd226171ad(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_b7f7ff44_30ff_47c0_92b7_c4033dcbe7c7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream()
                .filter(i -> i % 3 == 0 || i % 4 == 0)
                .map(i -> i % 3 == 0 ? i * i : i * i * i)
                .reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_6_0b7ec334_db3b_4334_8b0d_d24e84d326c1(ArrayList<Integer> lst) {
        // Write your code here
        return 0;

    }

    
    public static int sumSquares_Problem_5_4bff4850_44c8_42e5_8ec9_950fe47a6335(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_8bcd165a_e538_4331_b411_4202d67498ef(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_3c9e4243_900b_41a9_be9e_4d90988988fc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_01a60896_de98_47e2_a199_4761c8f22a1c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_45ce79e4_eea0_43ee_b7a3_da200711a3a0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_59e2c46d_45e3_4daa_a07a_a7034bed8bce(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_83da11d5_813f_4428_999f_10662e24efed(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_76ccea4f_882a_45ce_aae1_52e9bb680b20(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_6d0d17c8_2d83_49ed_932b_7008176e9c5c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_b995b6ab_1e95_4c21_b895_55ec8aeac450(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_40098bd2_f647_470f_9066_7d0d19b3de30(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_2bdf1354_de76_475e_be15_5275ca07d202(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f29d3acb_ce7b_445d_abf3_831b7ff67317(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_fff56753_44ab_4b28_a42d_8118a4d83846(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_6e92f2be_3435_47e2_824d_e569b5da23be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_71d4b5fd_75fc_429e_be2e_846e2234baee(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            } else if(i%4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_3cf4587b_0126_4ec1_ab1d_c5c095a0cca8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_b039404a_91d9_4bad_bc40_75ac9efe3f28(ArrayList<Integer> lst) {
        // Your code here
        int sum=0;
        if(lst.size()==0)
            return 0;
        if(lst.get(0) % 3 == 0 && lst.get(0) % 4 == 0){
            sum+=lst.get(0);
        }
        else if(lst.get(0) % 3 == 0){
            sum+=lst.get(0) * lst.get(0);
        }
        else if(lst.get(0) % 4 == 0){
            sum+=lst.get(0) * lst.get(0) * lst.get(0);
        }
        for(int i=1;i<lst.size();i++){
            if(lst.get(i)%3 == 0 && lst.get(i)%4 == 0)
                sum+=lst.get(i);
            else if(lst.get(i)%3 == 0)
                sum+=lst.get(i)*lst.get(i);
            else if(lst.get(i)%4 == 0)
                sum+=lst.get(i)*lst.get(i)*lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_a60fa43f_e399_4865_bf8f_32da8c123c4d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_400598da_0427_493a_8434_2feca7a51edd(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_b5be22fc_ef31_456a_8ec7_345b377d2c88(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_4e5c17c1_9061_4772_a0ff_9dfd2340a4b3(ArrayList<Integer> lst) {

        // TODO: Implement this function
        return 0;
    }

    
    public static int sumSquares_Problem_8_fac98083_6af2_499d_9f6b_8daf3b8e54a1(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_badd6070_be44_4de5_ab8b_3963c15fcc4c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_4fd17288_b9f0_4cb7_8211_5c57e96bb7d9(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_59e2c46d_45e3_4daa_a07a_a7034bed8bce(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_81fcc6af_3413_41ad_9ea6_8fee9da8831d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_51c1eca3_76e6_4443_941b_6468ac7631ff(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i%3 == 0 && i%4 == 0) {
                sum += i;
            }
            else if (i%3 == 0) {
                sum += i * i;
            }
            else if (i%4 == 0) {
                sum += i * i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_e9b26a14_c1d4_496c_8733_be4555e77294(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_d35a4a83_3387_4691_a6be_46cacdbf95eb(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_ed60d1dd_f669_4e9a_b441_1236ce649679(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_503b5302_d7ee_43ce_9694_269db5994231(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_a00924fd_5f4e_45a4_930f_427c4b139cbe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b5ed76a1_3879_4722_be90_5c6e1add5f66(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_60b55890_5333_4845_8b63_abc51c86ae13(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            } else if((i%4)==0) {
                sum+=i*i*i;
            } else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_621477ba_4954_4cd3_9812_cbd314708938(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_2c2fd39c_2181_4ab6_8920_01c78482536c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_0206d57c_ccee_451f_ba0c_5c46aa9bb4dd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_ffecad93_71ef_4e5c_b0b7_de1bb933ff35(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i * i;
            } else if(i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_50863ff2_4de1_434e_8a8e_bcfcaa1a992c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_40098bd2_f647_470f_9066_7d0d19b3de30(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_b7710134_108d_41f6_b1f4_21fcee28bdc8(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_89b25cbf_115c_4ac3_80de_94fb5b08dc53(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f411a10c_406f_4eeb_a9e3_7f577505ef46(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0L, Integer::sum);
    }

    
    public static int sumSquares_Problem_8_cc6cab06_0e3b_4cc3_a8e5_15e653db899f(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_4d624990_b328_4f75_b9ad_bafd0dd0f593(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4!= 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 3!= 0 && lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_981a6d8c_c269_4ec6_9a15_de48f8f1b05d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_78b3576a_5b4c_424d_a1c7_75304b4af075(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_97429d4e_ec6e_4424_a5cd_f315b47b29a5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b27372b2_3346_499c_a15a_b9fbdbc102e7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_5_bac8f173_743f_482c_8f2c_0d6fdf4842cd(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e7b272ce_3940_4637_95ed_86ab1b8715d5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_17f86cf2_936f_412d_a791_60d6955e061a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_3c211e1c_9f4d_44d1_830a_10d3e5cc1eac(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_40a5d7b1_40f4_43bd_9cc7_0027aee3aac1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_f010d523_3884_4ac0_8c2a_204bd90592e5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_25eb5313_b1e9_4baf_9eee_e8945720153a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_72049a7d_821b_4dca_9b1a_3cf104a4b67c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_80f0936d_48b2_411f_ae79_bc356865c8d1(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_827f9241_f4bb_41d3_9d9c_32fb70fd2a44(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_b66578ee_7aad_4e2a_9686_f895890ee894(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i%3)==0) {
                sum += lst.get(i);
            }
            if((i%4)==0) {
                sum += lst.get(i);
            }
            if((i%3)==0 && (i%4)==0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_852e4bfe_cdf8_4131_8287_e37177bed8c4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_324a5a63_6c87_487e_978f_81b9267d09e7(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_d4928801_8e3e_451c_b631_1e6b56ecff84(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_98fd3816_e58c_4911_ab82_6325e9f72e87(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_a7e16e1a_7114_4ac9_ad29_01d525a1683d(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x * x).sum();
    }

    
    public static int sumSquares_Problem_10_a67ce80b_f225_4ba8_84b4_97d3f35951cd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_ed60d1dd_f669_4e9a_b441_1236ce649679(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_5_c40eeabf_3889_464c_b8ef_d286127a21fe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_2876aace_3ca2_4c67_bfe6_886951842b3f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (lst.get(i) % 4 == 0 && lst.get(i) % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (lst.get(i) % 3 != 0 && lst.get(i) % 4 != 0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_9066d55a_744a_4db9_ac03_785508cabbee(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_0de202f6_b562_40ef_a9a8_f10033434d71(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> {
            if (lst.indexOf(x) % 3 == 0) {
                return x * x;
            } else if (lst.indexOf(x) % 4 == 0 && lst.indexOf(x) % 3 != 0) {
                return x * x * x;
            } else {
                return x;
            }
        }).sum();

    }

    
    public static int sumSquares_Problem_8_a33c7c91_6bac_41ba_80c0_78e68954cca1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b48cc552_37b6_47cf_9a83_9567c00d1000(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_50ec7e93_5f22_4e4e_922a_4d14806d7bfe(ArrayList<Integer> lst) {
        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_c51ab5b1_da97_47e1_ade2_4bc490e1b54c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_fde9be33_a06d_468b_9df4_a1cfc42c52f7(ArrayList<Integer> lst) {
        // TODO: Implement this function
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_278a642e_33aa_440c_8296_ac1e61fbf8dd(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e1cb8491_9376_4d9a_b29b_01611ac79aa4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_47d94e33_2f45_4c27_aa30_595aa47d4b9c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_7bf1e2f0_cc6f_432a_8bdc_6d6233a27462(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_2f93f89b_8bb0_4c9d_a870_a96795be767b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_164a09c6_03a5_45de_b5e8_f2af4e3f660b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_085fa809_643d_4caa_ab60_3b75ee538fc4(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_1717731d_366c_4c90_a35a_d95e658d3700(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_dd45b251_83c2_4399_ad11_81a5f364dcee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_04cde6b9_470e_4bf6_b5cd_e82209fb5638(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_546f4587_6038_421a_89fe_ac680d01a098(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_af76e576_7bb4_4a6b_ad7e_d01b150d1790(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_47bba2dc_56b7_448a_b7c0_31f1fd040fdb(ArrayList<Integer> lst) {
        int sum = 0;
        int sumSquare = 0;
        for (int idx : lst) {
            if (idx % 3 == 0 && idx % 4 == 0) {
                sumSquare = (idx * idx);
            } else if (idx % 3 == 0) {
                sumSquare = (idx * idx);
            } else if (idx % 4 == 0) {
                sumSquare = (idx * idx);
            } else {
                sum = (idx + sum);
            }
        }
        sum =  (sum + sumSquare);
        return sum;
    }

    
    public static int sumSquares_Problem_2_ec144dd1_cfae_4f12_afb2_dd2da190c4ba(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_e19a6ac2_e71a_44cd_9b96_821df5f77c32(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_1bcdc25b_b0d2_4875_8c67_69940deb7de0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_f5ebc825_17c5_4595_a54d_18324bcf89bc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_f2adf25c_0434_4dad_b3fe_39d707390c8e(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        return lst.stream().mapToInteger(Integer::intValue).sum();
    }

    
    public static int sumSquares_Problem_10_d4928801_8e3e_451c_b631_1e6b56ecff84(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_f933ae39_299b_4f3f_889a_f8edebc1e22b(ArrayList<Integer> lst) {
        if (lst.size() == 0) {
            return 0;
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_8cb10834_ef6f_44fe_8eaa_1da1b8418425(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_356b9e68_7ca1_45b7_9b9f_11ce1a10e9c9(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_60471638_ec4b_45fd_bd12_ee962379697a(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_99bdb7ed_f3e2_403b_ad72_8220b74a5ab1(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            }
            else if((i % 4) == 0) {
                sum += lst.get(i);
            }
            else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_a8702893_3e36_4675_aa6e_2b1b66fc3350(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_61321da4_eb0b_469d_8106_750e27b5ec47(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_2920ec9d_4773_4905_bd37_c1e21eac8991(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x*x).filter(x -> x%3==0 || x%4==0).reduce(0, (x,y) -> x+y);
    }

    
    public static int sumSquares_Problem_4_af76e576_7bb4_4a6b_ad7e_d01b150d1790(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_9386621c_f170_4700_9b7b_35cab9f89fce(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_4fb33927_f462_48fb_8c1e_694a9bf111cf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_20544d7e_2ed6_4150_b886_c820ab4e7991(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_6fbb6b94_f4a3_47c9_9d13_fc6b4dcf7957(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_290defd6_0556_42fc_b4bf_6cc8f54298c9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_b4c991b7_aecc_49ba_b04d_f8a9ef108a73(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_86e91777_6292_4b6f_b875_3cd212b44283(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_b7f7ff44_30ff_47c0_92b7_c4033dcbe7c7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream()
                .filter(i -> i % 3 == 0 || i % 4 == 0)
                .map(i -> i % 3 == 0 ? i * i : i * i * i)
                .reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_0_940dd7be_839d_45aa_8dcc_318783954501(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_fdbb0dcd_8810_48cd_ba9f_19e6339e6eb9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_97d8e748_5be4_4f92_800c_45f557f0d960(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_1e4c644e_784b_4db2_ad77_87d61772a907(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_ee18edb1_8f9e_444b_bcdd_932a7ed4677f(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_966e529a_30e9_457d_8abf_901a6bfab7fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_08a9d4d8_4b89_426f_8205_cc5b6fd6673d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_661bbd0e_d19e_40f1_99c0_311dd686ba06(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17(ArrayList<Integer> lst) {
        return 0;

    }

    
    public static int sumSquares_Problem_0_67529236_e760_43a3_9ea7_51cc91ddbaa6(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_a2056fb1_8110_4af7_b642_4a9294e5b7d0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int num : lst) {
            if (num % 3 == 0 && num % 4 != 0) {
                num *= num;
            } 
            if (num % 4 == 0) {
                num *= num;
            }
            if (num % 3 == 0) {
                sum+=num;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_df1e5fec_d6cd_45ba_bd76_5f288e498018(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_4fb33927_f462_48fb_8c1e_694a9bf111cf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_78b2111c_2271_4389_991a_c8c38e277a3b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_defff587_6f79_4a00_9080_64916909dd30(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_4200ac65_3f46_4b6c_9119_6f9e79aefb84(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_3b6bc1fb_16bb_4383_b1f3_692949e66542(ArrayList<Integer> lst) {
        // TODO: Fill this in.
        int sum = 0;
        for(Integer x: lst) {
            if((x%3)==0) {
                sum += x*x;
            }
            else if((x%4)==0) {
                sum += x*x*x;
            }
            else {
                sum += x*x*x*x;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_5bd0b6e3_ff80_4177_aba3_68c7ab538204(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b16e8807_e5bc_4be9_9655_875c051cc49c(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_4f006df3_1986_4ab2_a21f_5eb4eef11551(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(e -> (e * e)).sum();
    }

    
    public static int sumSquares_Problem_0_29f75f89_21e3_433c_9490_a8bb6314e6db(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e0d8a05f_36d1_4de0_8df2_49c4211732b7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_8a9c7947_0eed_497b_a853_cf81c4423a92(ArrayList<Integer> lst) {
        // Your code here
        if (lst.size() > 0) {
            int sum = 0;
            int n = lst.size();
            for (int i = 0; i < n; i++) {
                if (i % 3 == 0) {
                    sum += lst.get(i);
                }
                else if (i % 4 == 0) {
                    sum += lst.get(i) * lst.get(i);
                }
            }
            return sum;
        }
        else {
            return -1;
        }
    }

    
    public static int sumSquares_Problem_10_1bcdc25b_b0d2_4875_8c67_69940deb7de0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_3aebd520_5fc1_4ad2_8303_4187aafa1e7e(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if(i % 3 == 0) {
                entry = entry * entry;
            }
            if(i % 4 == 0) {
                entry = entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_49c31d70_6a48_4bd7_bea0_a2db62384353(ArrayList<Integer> lst) {
        // "
        // Your code goes here...
        int sum=0;
        int total=0;
        for(int i=0; i<lst.size(); i++){
            if((i%3)==0)
                sum+=lst.get(i);
            else if((i%4)==0)
                sum+=lst.get(i)*(lst.get(i)*(lst.get(i)))/3;
            else
                sum+=lst.get(i)*(lst.get(i)*lst.get(i))/4;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_1f332146_8463_43f5_b956_af7cd3ab3039(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_a986814f_f7c8_40e8_ad7b_7acec2277f87(ArrayList<Integer> lst) {

        // Write your code here.
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_9f7c04cd_81aa_4753_ac47_8786a0898509(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_86e91777_6292_4b6f_b875_3cd212b44283(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_49fcd812_3a47_4e35_9964_59008040728f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_8c802b15_3a22_4c9e_bebc_c943fad46b67(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_5_ee18edb1_8f9e_444b_bcdd_932a7ed4677f(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_ac7e00fa_7433_46cd_8225_2d34ddad062e(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_dbc7a47e_f2b5_47e1_8825_ceb3667786ca(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f792f7f2_ec71_491f_a233_b42dc798a07c(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x * x).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_8_676f8461_bb7b_4e5d_9dc3_814714aa7bc9(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e1a8c7c4_11ec_483c_8a39_c384bf07bffc(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((lst.size() % 3) == 0) {
                sum += lst.get(i);
            } else if((lst.size() % 4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_78cfffea_8010_4a4f_8569_be841b0d99e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_0acc6cc9_5875_44d3_bd48_b24bb91caf4e(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).sum();
    }

    
    public static int sumSquares_Problem_2_e3180e54_d0ae_48d3_8f64_ce593d8e6d04(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_cadebaa4_a4aa_468f_8910_d9304a70cf59(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_954b0240_cece_4cbc_9464_e5264a34b939(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_451e9b6b_0dc9_4613_99f8_feeeac29c616(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_863762fb_716a_4b99_a863_0c6db1c74006(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_dbc7a47e_f2b5_47e1_8825_ceb3667786ca(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_413db871_33f1_439c_959f_715f0931bb1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_92308e72_1eea_4e5c_aa00_259ffcfb2146(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_1882af5e_fa1b_45c5_a8f1_1e74ed023662(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_21c5ab9d_1a4b_49fd_bc45_f93e08c14318(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_49fcd812_3a47_4e35_9964_59008040728f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_f9401dc2_92a9_4bb5_a251_038cabd741fd(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i%3 == 0 && i%4 == 0 && i%5 == 0) {
                sum += i;
            } else if (i%3 == 0) {
                sum += i*i;
            } else if (i%4 == 0) {
                sum += i*i*i;
            } else if (i%5 == 0) {
                sum += i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_11cbe7a9_951b_419b_ad6b_497c9a804849(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_43a66a05_c2f4_42c4_933a_c01047ae123e(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_e9511eeb_c1d1_435c_9572_6d57456515ff(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_e0287535_4e79_4471_a3e4_619378507449(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_96dad072_31e1_4dd3_bb35_2054edf3d340(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_5d399c82_a4a8_4b15_8ee6_77f8f4f16723(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_acad1ec2_69e2_4b92_a327_0aa4b5380223(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_ce7d4062_3c8a_4fbc_8d98_421aa50239ac(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_f6bf1569_d71f_4683_be4f_249506249619(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> {
            int index = lst.indexOf(x);
            if (index % 3 == 0) {
                return x * x;
            } else if (index % 4 == 0 && index % 3 != 0) {
                return x * x * x;
            } else {
                return x;
            }
        }).sum();

    }

    
    public static int sumSquares_Problem_4_1b1e7143_37ec_485a_ada9_a04f9bccd945(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_6d9ab90b_57e2_491b_9074_b8eca8ffaf4a(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_17c68e06_ad0e_437e_9fae_ebfae3252026(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_74c8aaf2_4f1e_4b03_a880_d3c366ce625f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_a8766ee5_c769_458a_9299_741370924d22(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_558e2004_f9c3_415a_8c13_5dee91265aaa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f327f89e_14b2_486a_94f5_3eb83d3c7e9c(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_1b93f48d_0188_43e3_b617_43dd54da8b2a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_ba9dc1b3_e7d2_4775_95e8_15c69c04bb20(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_1d24e5ef_01f1_4908_aeba_28f53e311e7b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_d4cf3f8d_8cbb_439c_a52a_c475fef26424(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_a0024786_a30d_42da_ac10_9c6b2f529316(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_621477ba_4954_4cd3_9812_cbd314708938(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_6dedb913_4d05_4b8c_9499_254d2408ad58(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_5582aa71_cab7_4ceb_a4d0_d97faa536e32(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_f272842c_cc6f_4617_8dfd_026b72411776(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            }
            else if((i%4)==0) {
                sum+=i*i*i;
            }
            else {
                sum+=i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_6e0f7005_6730_462b_b1e0_225906676a16(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 3 != 0 && i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_f38ff064_3025_4052_ba7d_2ba58cb28051(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_98f30288_aad9_467d_b208_6b27d0cf85c0(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_b972d821_f689_4826_ba6f_3bd0f37e9e2b(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_75a3b961_8055_46ea_b387_80acf446743b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_663f7217_e75d_417a_bfab_c204eccd235e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_d0f37d70_1bab_4ae3_87f4_6606978d1fc7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_04057992_1595_487f_94b3_bae9f4d499b9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_fd366014_efe8_48d3_b15f_409e0c96b529(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_124eb85f_27a2_4e9e_8c80_73229a2a2e12(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_1a102af6_15b5_417b_ace9_e13ae41f87b9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_b7d06076_57c3_458d_b1be_c1e863d7df3a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_0_774ce1b6_64e1_4a11_995f_96bf2a06121d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_cba70562_7e9e_4e60_84c3_dfe6c3c6a91b(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_db47b70c_c2f3_4ce6_a98c_5309009653cc(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
            if (lst.get(i) % 3 == 0)
                sum *= lst.get(i);
            else if (lst.get(i) % 4 == 0)
                sum *= lst.get(i);
            else
                sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_2ad17ca3_d8ad_453b_abad_b50430af3faf(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum += i*i;
            } else if(i%4==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_555aa5d9_d93d_4313_a133_76a92cbfcc18(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_9ac2876c_7ec6_463b_a5e4_1fb4536c2dda(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_15091014_7235_4798_83e4_3a32431ef765(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_fdbb0dcd_8810_48cd_ba9f_19e6339e6eb9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_555da9d4_9a5c_49dd_af49_1f24d38d8d9e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 || lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_a79bce20_ecb6_4d2e_9462_a1c34166658c(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_a53fb06e_1590_476c_8308_8c6cce902be9(ArrayList<Integer> lst) {
        int count = 1;
        int sum = 0;
        int numMultiple = 0;
        for (int num : lst) {
            if (num%4==0) {
                sum+=num;
                numMultiple++;
            }
            if (num%4==3) {
                count++;
            }
            if (num%4==1) {
                sum-=num;
                numMultiple++;
            }
        }
        if (numMultiple==3) {
            sum+=count;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_71d4b5fd_75fc_429e_be2e_846e2234baee(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            } else if(i%4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_99822d1c_cfb2_44db_b4d4_b6d6f8f1bccd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_27269b74_508a_4b37_91d0_bb83930df2f9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_87fb2c6a_34ca_4714_9c71_5f4dae18e887(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
                sumOfSquares += lst.get(i) * lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
                sumOfSquares += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sumOfSquares;
    }

    
    public static int sumSquares_Problem_8_00120f57_0796_4276_ae6c_c0ee5d320c1e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_399e1ee8_b536_4b4f_acb5_606a07826bfa(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_8_65877ab1_60af_4436_8d56_2c2798f00f9e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_57b1198e_ec69_480c_b310_37fa18c72408(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_852e4bfe_cdf8_4131_8287_e37177bed8c4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_cd413b1c_906e_41d8_9f9d_94d0d8bc2618(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_277e4053_cab8_42ec_8a25_5f240f9c7f2d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_8e8f136c_369a_4118_842e_e4d3b80556d4(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_a341db76_605e_4def_a222_aa05520763c9(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_bc989c77_188f_451c_ae40_a9e75e9fd8ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_40098bd2_f647_470f_9066_7d0d19b3de30(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_353ad608_082d_4437_b5d9_b4968a0c4668(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_1a892c90_9a35_498b_830a_87fe35ae87e9(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_4a2972db_bebc_4521_9806_9d21dcdce885(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_306274af_f49e_4935_b341_7cdbe6b30501(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ec63832f_4d1b_439b_a6d2_7c23682e3dd2(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b3f971b8_65a0_4d75_bd42_4b1cf18e65ab(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_d4928801_8e3e_451c_b631_1e6b56ecff84(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_a79f9971_af1e_4864_b6b4_55c2a8130e58(ArrayList<Integer> lst) {

        // Write your code here
        for(int i=0;i<lst.size();i++){
            if(i%3==0){
                lst.set(i,lst.get(i)*lst.get(i));
            }
            if(i%4==0 && i%3!=0){
                lst.set(i,lst.get(i)*lst.get(i)*lst.get(i));
            }
        }
        int sum=0;
        for(int i=0;i<lst.size();i++){
            sum+=lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_353ad608_082d_4437_b5d9_b4968a0c4668(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_9572fbd3_c8ab_415b_b7c5_7e41dd755765(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            sum += Math.pow(i, 2);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_1e000d9a_3cce_4b07_b10c_adf10112a714(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_c4bce134_f013_47e9_b149_831eda6ca5f6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_ef7f55ed_19a5_41dc_9ed6_5c8b1a0f6649(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_04447889_0e0d_4932_8122_7062b0b97fb6(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i: lst) {
            sum += i%3 != 0 ? i * i : i%4 != 0 ? i * i * i : i * i * i * i;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_2ad17ca3_d8ad_453b_abad_b50430af3faf(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum += i*i;
            } else if(i%4==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_9d6501eb_e15c_414f_8f65_e6bb6970a691(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else if((i % 3) != 0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_7782f7f4_14e3_4725_ad6a_b21a7ffe21ef(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i;
                sumOfSquares += i * i;
            }
            else if((i % 4) == 0) {
                sum += i;
                sumOfSquares += i * i;
            }
            else {
                sum += i;
                sumOfSquares += i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_fb49aa32_8996_434a_8794_94b2a5ffdf8d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b636416f_8d4d_424c_8c3c_6143581d8e46(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_3c9e4243_900b_41a9_be9e_4d90988988fc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_c7470eaf_055b_4e0c_a404_b2a55a1e8178(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_0f2a33b5_4a67_4e06_98d8_f6227a59d314(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i*i;
            } else if (i % 4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_9f8dca92_1c17_4f0b_869f_d0102f7601e7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_e3cfd081_d6c1_4244_82d1_4b2a6a9d64e7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_f309460b_7607_4043_8bcd_d1752a581989(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_7_f792f7f2_ec71_491f_a233_b42dc798a07c(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x * x).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_2_6493f40a_ad90_4e32_9d59_429b77d0acef(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_23374d74_cdaa_496e_9ffd_39d08646a4d8(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_bfcd2dc1_c93f_41eb_82b3_69ef7536a85a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_1_03aeeb60_dc3f_4e3f_b828_294150ae0ae2(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_9c682a1a_c0ef_4342_9fc5_03e06bb990e3(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_eecaf400_46b7_4b66_8eac_c85a08e14055(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_f5ebc825_17c5_4595_a54d_18324bcf89bc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_2b216a95_867e_456a_9ae0_69716553bccf(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_3e38d70c_3556_42d4_9c5b_dbb6fee5e3ee(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum+=i*i;
            } else if(i%4==0) {
                sum+=i*i*i;
            } else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_932345d5_7fa8_4538_bc14_186f5ba046f1(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_0073880d_8ba7_4073_a270_2d661741bb8b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_cbff100a_c02d_4cf7_b2aa_9c2e54ad90f4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_d61df349_2d9b_4f8b_924a_601a2f249c13(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_42f9dd35_d6ee_4a26_9267_98b9c433cbed(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            } else if((i%4)==0) {
                sum+=i*i*i;
            } else {
                sum+=i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_d61df349_2d9b_4f8b_924a_601a2f249c13(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_204702ea_441f_45ac_a1e6_d6921a5fb857(ArrayList<Integer> lst) {
        int ret = 0;
        // Loop through the array list
        for (Integer l : lst) {
            int index =  (Math.ceil(l));
            // If the index is a multiple of 3 add square of index to ret
            if (index % 3 == 0) {
                ret += index * index;
            }
            // If the index is a multiple of 4 add cube of index to ret
            if (index % 4 == 0) {
                ret += (index * index * index);
            }
        }
        return ret;
    }

    
    public static int sumSquares_Problem_10_eb5b91f3_c5b1_459e_b83d_2f3a849386c1(ArrayList<Integer> lst) {
        int sum = 0; 
        for (int i = 0; i < lst.size(); i++) {
            int a = lst.get(i);
            if (i%3 == 0) {
                a *= a;
            }
            else if (i%4 == 0) {
                a *= a*a;
            }
            else {
                sum += a;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_a8766ee5_c769_458a_9299_741370924d22(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_cfb8839c_da9e_476b_9044_49c52bb9c257(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_005ba5bc_4a1b_4ba6_bdcf_6847c9334151(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_4c33d300_cdbd_4962_9916_7b755758f1e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_6ac7e455_3d85_47a7_8a2b_dd6d7eb43c03(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_c40eeabf_3889_464c_b8ef_d286127a21fe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_49727e83_e170_4d2f_8744_3e33880947d4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_645fa6ae_e93a_4881_ab20_7b8d357927f2(ArrayList<Integer> lst) {

        // your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_23f06aed_d217_4e87_8284_af2f744379b2(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i * i;
            } else if(i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_7db3a8c8_5d8f_48e8_8099_00d25758a70a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int e : lst) {
            if (e % 3 == 0 && e % 4 == 0) {
                // e is a multiple of 3 & 4
                sum += e * e;
            } else if (e % 3 == 0) {
                // e is a multiple of 3
                sum += e * e;
            } else if (e % 4 == 0) {
                // e is a multiple of 4
                sum += e * e;
            } else {
                // e is not a multiple of 3 or 4
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_92800c20_5b1f_4532_828b_351d9373199f(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x).sum();
    }

    
    public static int sumSquares_Problem_10_4ea381ec_770c_42ef_aadb_073a94700262(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_56ef7302_840b_4807_b843_db9ebb8f3fab(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_930a195a_4207_4fde_8c9d_8d4222642842(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if(i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_76a6a596_1b2d_4b0c_bc15_3755d28ff399(ArrayList<Integer> lst) {
        int sum = 0;
        for (int n : lst) {
            if (n % 3 == 0 && n % 4 != 0) {
                sum += n * n;
            } else if (n % 3 != 0 && n % 4 != 0) {
                sum += n * n * n;
            } else if (n % 3 == 0) {
                sum += n * n;
            } else {
                sum += n * n * n;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_576e8549_d8b5_4452_b241_080adcf4f5c7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry *= entry;
                sum += entry;
            } else if (i % 4 == 0) {
                entry *= entry;
                sum += entry;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_0a7ed7dc_bf78_4f2b_be97_1e11b9b0c1e5(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer e : lst) {
            int n = e % 3 == 0 ? e * e : e * e * e;
            sum += n;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_e0287535_4e79_4471_a3e4_619378507449(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_728c0ddc_e707_47c6_88d5_b365905fc13e(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_0fc68624_43f4_4eab_86b7_7e19edc5dc66(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_5fcbf3db_a994_4263_b99d_4f3608c69312(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_1cb94c77_097f_4a19_8fc5_cfabc98ab74a(ArrayList<Integer> lst) {
        // Your Code Here
        int sum = 0;
        int count = 0;
        for(int i=0; i<lst.size(); i++) {
            count++;
            if(lst.get(i) instanceof Integer) {
                if((count%3)==0) {
                    sum += (lst.get(i) * lst.get(i));
                } else if((count%4)==0) {
                    sum += (lst.get(i) * lst.get(i) * lst.get(i));
                } else {
                    sum += lst.get(i);
                }
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_519cff50_af10_4f86_8bb1_b677665dc667(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b7140928_9635_4c5d_bb8f_19ff0fba1a72(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_ba21e9bd_459e_4afc_af0d_8651e8612e5a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_10_2c4d4ba7_e4a2_487d_a75c_f839b4813bab(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_3b45a8f2_8de3_4522_aabd_80e838f1d55b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_97265762_bdb1_4448_ba9a_3cafe4287c6f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_815b3a53_3155_46fe_a340_0a14e26e5ac6(ArrayList<Integer> lst) {
        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_fed2da56_1657_427e_83fe_de1f9dc12d64(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_204702ea_441f_45ac_a1e6_d6921a5fb857(ArrayList<Integer> lst) {
        int ret = 0;
        // Loop through the array list
        for (Integer l : lst) {
            int index =  (Math.ceil(l));
            // If the index is a multiple of 3 add square of index to ret
            if (index % 3 == 0) {
                ret += index * index;
            }
            // If the index is a multiple of 4 add cube of index to ret
            if (index % 4 == 0) {
                ret += (index * index * index);
            }
        }
        return ret;
    }

    
    public static int sumSquares_Problem_4_124eb85f_27a2_4e9e_8c80_73229a2a2e12(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_8cb68017_3b96_47fa_aaeb_11b221165ec5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_546f4587_6038_421a_89fe_ac680d01a098(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_2dc1d790_febe_4c1a_97c3_fa493faa3d85(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_46e5ea52_313f_475e_8fee_8f68c8eab1fd(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum+=i*i;
            }
            else if(i%4==0) {
                sum+=i*i*i;
            }
            else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_eb7186e4_15d3_4a4f_a478_25cf79fc46f5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_8a7a00ed_a59e_44c4_960f_a62af0d425aa(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_b2e5b779_cd09_4690_b83d_2c9f677ed669(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e3180e54_d0ae_48d3_8f64_ce593d8e6d04(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_a4b743ba_4455_4182_99aa_858c301d8948(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_0477e1e5_846a_4359_a04a_0c6d050adc54(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_25b818fe_66a7_4acf_9ef1_d14ad1b279e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_2528cb01_e92c_46f0_abd1_5d87170ff5e4(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_0_0212eb76_4185_4ac4_9731_64927d394056(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_10_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_f40ec618_6619_4657_bf10_8eaf23f4ad9b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_259a0bc3_b417_4143_b4ae_db5ec8b63c78(ArrayList<Integer> lst) {
        if (lst == null) {
            return 0;
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_71295821_17f5_467c_8310_b96eabca3a03(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            }
            else if(i%4 == 0) {
                sum += i*i*i;
            }
            else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_67529236_e760_43a3_9ea7_51cc91ddbaa6(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_3434766c_069e_4c8b_aaa0_a87707738ebf(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_3_8515769a_e00a_4d94_aaa5_c20c676943fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_027eb184_88c3_425c_9969_daf4f5643667(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_638f0eac_bade_4319_ac99_0897319a1eca(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_2f93f89b_8bb0_4c9d_a870_a96795be767b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_26880261_382b_4e86_abb1_697440f0b69d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_3b6bc1fb_16bb_4383_b1f3_692949e66542(ArrayList<Integer> lst) {
        // TODO: Fill this in.
        int sum = 0;
        for(Integer x: lst) {
            if((x%3)==0) {
                sum += x*x;
            }
            else if((x%4)==0) {
                sum += x*x*x;
            }
            else {
                sum += x*x*x*x;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ab47fa26_c4c0_4730_8c15_82015cd0c8b9(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_e4b8e08d_2235_493b_96ac_a446acc188fe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_66dee2c7_a7df_4f36_ad1a_9d435159be3f(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0){
                sum+=Math.pow(i,2);
            }
            else if((i % 4) == 0){
                sum+=Math.pow(i,3);
            }
            else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_c0736600_8931_48f7_a56a_bbdf0335f849(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if(lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b039404a_91d9_4bad_bc40_75ac9efe3f28(ArrayList<Integer> lst) {
        // Your code here
        int sum=0;
        if(lst.size()==0)
            return 0;
        if(lst.get(0) % 3 == 0 && lst.get(0) % 4 == 0){
            sum+=lst.get(0);
        }
        else if(lst.get(0) % 3 == 0){
            sum+=lst.get(0) * lst.get(0);
        }
        else if(lst.get(0) % 4 == 0){
            sum+=lst.get(0) * lst.get(0) * lst.get(0);
        }
        for(int i=1;i<lst.size();i++){
            if(lst.get(i)%3 == 0 && lst.get(i)%4 == 0)
                sum+=lst.get(i);
            else if(lst.get(i)%3 == 0)
                sum+=lst.get(i)*lst.get(i);
            else if(lst.get(i)%4 == 0)
                sum+=lst.get(i)*lst.get(i)*lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f125b4e2_9d79_4d41_a57b_babd368bb827(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_da869c77_032d_47dc_94f2_8939e2ef1405(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_ea0422ab_0dfe_44d5_9fd1_81c1d4f5feb1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_55e1b437_6b3a_4781_86be_680fffbfdb2d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_5ef0e396_9a0d_4f3a_8819_0d06c10dc97a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_161c99e1_b1c0_43cb_945c_46d7b952cc42(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_5_013b1275_5d64_4713_97a2_b220b6c70607(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_04e1e251_0795_465a_960a_c44904285cde(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_5_cf98326e_c7bf_4975_9986_4ccbd1ed2c14(ArrayList<Integer> lst) {

        // Write your code here
        for(int i=0;i<lst.size();i++){
            if(i%3==0){
                lst.set(i,lst.get(i)*lst.get(i));
            }
            if(i%4==0 && i%3!=0){
                lst.set(i,lst.get(i)*lst.get(i)*lst.get(i));
            }
        }
        int sum=0;
        for(int i=0;i<lst.size();i++){
            sum+=lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_f29d3acb_ce7b_445d_abf3_831b7ff67317(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_1a892c90_9a35_498b_830a_87fe35ae87e9(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_a67ce80b_f225_4ba8_84b4_97d3f35951cd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_4396c4bb_5888_4a90_81d2_1fce69002bc2(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_19bfe466_79c5_46e2_ac1b_cbceb8afa556(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_881d0442_0a4a_436a_af3d_fa6321028b8d(ArrayList<Integer> lst) {

        // Write your code here
        int i = 0;
        int sum = 0;
        while (i < lst.size()) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (lst.get(i) % 3 != 0 && lst.get(i) % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
            i++;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_53a319a2_ba42_42b6_9f45_0d669b536029(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (lst.get(i) % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            } else {
                lst.set(i, lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_186a1daa_9e83_4f26_a234_a21838a91959(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) // if index is multiple of 3
                sum += lst.get(i) * lst.get(i); // add square
            else if (i % 4 == 0) // if index is multiple of 4
                sum += lst.get(i) * lst.get(i) * lst.get(i); // multiply by 4
            else // if not multiple of 3 or 4
                sum += lst.get(i); // add original
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_fb92b579_7b8b_4ddf_8799_65006b5f3fd3(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_1521b40a_dfeb_447b_8658_35e2b725ec25(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_139dde5d_e1ef_4e9b_a336_a3550f786b1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_a33c7c91_6bac_41ba_80c0_78e68954cca1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_97265762_bdb1_4448_ba9a_3cafe4287c6f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_0e3b4fd2_526f_4779_b23f_626d4575453d(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_9_4e5c17c1_9061_4772_a0ff_9dfd2340a4b3(ArrayList<Integer> lst) {

        // TODO: Implement this function
        return 0;
    }

    
    public static int sumSquares_Problem_9_fce5d637_400f_4b9e_af63_9a618310755b(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else if((i % 4) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else {
                sum += i;
                sumOfSquares += i * i;
            }
        }
        return sumOfSquares;
    }

    
    public static int sumSquares_Problem_2_097d8a17_ddde_43d0_8135_437ccc992462(ArrayList<Integer> lst) {
        if (lst.size() < 3) {
            return 0;
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); ++i) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_f411a10c_406f_4eeb_a9e3_7f577505ef46(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0L, Integer::sum);
    }

    
    public static int sumSquares_Problem_5_ad5b03cd_df53_40e0_a401_35a92898c0b4(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_97e19cb9_969d_46b2_895d_9effded63d5b(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_e977284a_e651_4a31_815b_6f9a68cf57f5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_87db7987_a454_4ab0_81a7_ba7097ecc2c0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_3b7d1298_03e5_421a_af93_9d8b4061771c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_ba60ba6b_d971_40c7_8cab_0aadda4ef64d(ArrayList<Integer> lst) {
        int total = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                total += i;
            } else if (i % 4 == 0) {
                total += i;
            } else {
                total += i * i;
            }
        }
        return total;
    }

    
    public static int sumSquares_Problem_8_7a2068fd_8f11_42be_9d17_0a15768bdd94(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_671c31d8_34a4_4751_9136_eb2f50b720c7(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i * i;
            } else if(i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_59d212a1_07d3_4c4b_9dd9_2ab6494178b1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_f25a10f5_3535_406f_9508_cf11fdbc55be(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_e333f185_ca35_49b6_8654_cc7c3b559f71(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_d1c12611_54b9_41ec_a78c_a8e6fa9377d3(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_d8fe484b_7325_4bec_9d32_a31ed6afe790(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_3_afd798b0_4de5_476c_83f7_a9a1de7848d9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_7528433a_9df1_42f4_8893_1468b88288c6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_5da6fd0b_3667_418c_a7f2_2c5dad2038d8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_cdaf9f8f_b99c_4fe0_b922_4a98c95a5f01(ArrayList<Integer> lst) {

        // TODO: Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_c7259bf8_3cb5_4b5f_833f_136d950dbf5d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_4a4b2ec2_c3ee_4f83_b245_b4d5f25226d3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) // if index is multiple of 3
                sum += lst.get(i) * lst.get(i); // add square
            else if (i % 4 == 0) // if index is multiple of 4
                sum += lst.get(i) * lst.get(i) * lst.get(i); // multiply by 4
            else // if not multiple of 3 or 4
                sum += lst.get(i); // add original
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_bc4af9d9_c08e_42fd_946a_790968ef9503(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_04d4b96b_8e5f_499a_ad13_de4ce9d415a2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0 && i % 4 == 0) {
                sum = sum + i;
            } else if (i % 3 == 0) {
                sum = sum + i * i;
            } else if (i % 4 == 0) {
                sum = sum + i * i * i;
            } else {
                sum = sum + i * i * i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_6ada4b9b_6e33_4abe_89f9_bef027c33132(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_4_e7d6cb89_ed0d_44f8_8c58_a8b245b4b8e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_17145441_5706_484e_b008_8555308a3251(ArrayList<Integer> lst) {
        int sum = 0;
        ArrayList<Integer> even = new ArrayList<Integer>();
        ArrayList<Integer> odd = new ArrayList<Integer>();
        for(Integer i : lst) {
            if(i % 3 == 0) {
                even.add(i);
            }
            else {
                odd.add(i);
            }
        }
        for(int i = 0; i < even.size() || i < odd.size(); i++) {
            sum += even.get(i) * even.get(i) * even.get(i);
            sum += odd.get(i) * odd.get(i) * odd.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_60547a3b_f2f3_4291_8091_6a9d7c98ed6f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_ac7e00fa_7433_46cd_8225_2d34ddad062e(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_1195d254_b5f5_419c_98ff_db5de9e913db(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_0f547776_b8e7_40f2_bc55_c9d07a4df926(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            int index = lst.get(i);
            if(index % 3 == 0) {
                sum += index * index;
            } else if(index % 4 == 0) {
                sum += index * index;
            } else {
                sum += index;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_20169979_2b21_4e5c_b8c3_3133ead293df(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i);
            }
            if (i % 4 == 0 && i % 3!= 0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_03b5f423_4cf6_450e_a781_6ab7bbe7696d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_9e47782f_caec_429d_b68e_779a455d21d6(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_9ab9fa73_3a46_4c3a_bd8b_a05015015ab6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_4ab528fa_06ca_419e_8b90_84adb32dddce(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_60a00373_ac7f_4b69_85bf_fbecdd854ccd(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_21a5057c_9234_44dd_8b3f_78fa8dfa74b3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_fa32a556_d25e_4099_b243_0a9012356f0b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_19699d69_1a83_4ce3_9e20_1c215626e212(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 || (lst.get(i) % 4 == 0 && !(lst.get(i) % 3 == 0))) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_9c9360f5_b3e5_4d39_a7a6_2ae5f646513c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_7_ae61ce86_1cab_4b97_9c5b_6ba47097fbf5(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_ba78cfac_8fbd_46e3_ae43_c1a44e8d565e(ArrayList<Integer> lst) {
        int sum = 0;
        boolean isMultiThree = False;
        boolean isMultiFour = False;
        
        for(Integer x : lst) {
            if(x % 3 == 0) {
                isMultiThree = True;
            }
            if(x % 4 == 0) {
                isMultiFour = True;
            }
            
            if(x == 0 || x == -1 || x == -2) {
                sum = 0;
            } else if(x == -3) {
                sum = -sum;
            } else if(isMultiThree && isMultiFour) {
                sum *= 3;
                sum *= 4;
                sum *= 4;
                sum *= 3;
                sum *= 3;
                sum *= 4;
                sum *= 3;
                sum *= 4;
                sum *= 3;
                sum *= 4;
                sum *= 3;
                sum *= 4;
            } else if(isMultiThree) {
                sum *= 3;
            } else if(isMultiFour) {
                sum *= 4;
            } else {
                sum *= x;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_b344a864_912f_4051_b071_e543fb9a9fba(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_9e9bee03_0375_466b_9de7_d19455ebb25b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ac7e00fa_7433_46cd_8225_2d34ddad062e(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_e1cb8491_9376_4d9a_b29b_01611ac79aa4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_4e97e821_98be_49ac_9bf8_f77b477ba0be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_2c66fa3c_4f6b_41ff_b081_873217edc19d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_a6e725ce_ca26_4679_ad23_576c3b636e04(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_5a040027_077a_4fd7_b6f4_a06b823b02f2(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_ae06fab5_109b_482b_a8e0_eff021f10215(ArrayList<Integer> lst) {

        // Write your code here.
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_0_9e6f6fb9_f620_4fd8_9520_9b8d38ded28a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_1d00a0fc_0eef_492a_8e95_5d194a6a72bc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) %  3 == 0) {
                sum += lst.get(i);
            } else if (lst.get(i) %  4 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_5c6334cb_6778_46bb_a001_12f68613d405(ArrayList<Integer> lst) {
        int sum=0;
        for(int i=0; i<lst.size(); i++) {
            int a=lst.get(i);
            if(lst.get(i)%4==0){
                lst.set(i, a*a*a);
                sum+=a*a*a;
            }
            if(lst.get(i)%3==0){
                lst.set(i, a*a*a*a);
                sum+=a*a*a*a;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_1b93f48d_0188_43e3_b617_43dd54da8b2a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_7_70618fc4_d378_4ae9_9f19_174fe0274b4b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_84035bbc_badd_4646_a850_a1310fc3ce67(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_cffb825a_fb1c_4337_b57a_726dc5e72074(ArrayList<Integer> lst) {

        // Write your code here.
        return lst.stream().mapToInteger(x -> x*x).sum();
    }

    
    public static int sumSquares_Problem_9_2c7aedf6_a3aa_4e4c_9b41_719f84bec09a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_5289057e_22cf_4e96_a0c9_bbd4a45dcf47(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_0f2a33b5_4a67_4e06_98d8_f6227a59d314(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_030f0292_f20d_4b2f_819b_d0c3fee3606e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_8e8f136c_369a_4118_842e_e4d3b80556d4(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_ead059d0_99dc_4faf_9242_6f74c5d61492(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_9fd34cd0_2474_4ab9_99b1_3c1a5c2d1d76(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3!= 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_64424203_1bf6_4c1e_9f98_ee960b4902ec(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_6d63eafb_1bec_4e09_93fb_4d215f7146a9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_8df0a8fb_76a6_4d47_b27f_9ab44cf86e3c(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_80f0936d_48b2_411f_ae79_bc356865c8d1(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_ad57f780_a32d_4c84_95c9_3b5fafb7206b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_a60435d2_fccd_48cc_9ec9_91c71091024c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_164a09c6_03a5_45de_b5e8_f2af4e3f660b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_dbc7a47e_f2b5_47e1_8825_ceb3667786ca(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_8a9c7947_0eed_497b_a853_cf81c4423a92(ArrayList<Integer> lst) {
        // Your code here
        if (lst.size() > 0) {
            int sum = 0;
            int n = lst.size();
            for (int i = 0; i < n; i++) {
                if (i % 3 == 0) {
                    sum += lst.get(i);
                }
                else if (i % 4 == 0) {
                    sum += lst.get(i) * lst.get(i);
                }
            }
            return sum;
        }
        else {
            return -1;
        }
    }

    
    public static int sumSquares_Problem_10_ac77f7d8_2959_4839_939e_0ed05c8f2c6d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_881d0442_0a4a_436a_af3d_fa6321028b8d(ArrayList<Integer> lst) {

        // Write your code here
        int i = 0;
        int sum = 0;
        while (i < lst.size()) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (lst.get(i) % 3 != 0 && lst.get(i) % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
            i++;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_e1a8c7c4_11ec_483c_8a39_c384bf07bffc(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((lst.size() % 3) == 0) {
                sum += lst.get(i);
            } else if((lst.size() % 4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_44bdbff6_189d_432b_91ef_bb4f5ca1504c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_e455eea1_ac2d_40e1_aa80_032750dd9f04(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_2c7aedf6_a3aa_4e4c_9b41_719f84bec09a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_fb92b579_7b8b_4ddf_8799_65006b5f3fd3(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_14dfeaec_5c04_4390_9167_156341020e66(ArrayList<Integer> lst) {
        // "
        List<Integer> lst2 = new ArrayList<Integer>(lst.size());
        for (int i : lst) {
            if (i % 3 == 0 && i % 4 == 0 && i != 0)
                lst2.add(i * i);
            else if (i % 3 == 0 && i % 4 == 0)
                lst2.add(i * i * i);
            else if (i % 3 == 0)
                lst2.add(i * i * i * i);
            else if (i % 4 == 0)
                lst2.add(i * i * i * i * i);
        }
        int sum = 0;
        for (int i : lst2)
            sum += i;
        return sum;
    }

    
    public static int sumSquares_Problem_9_6debecaf_8cad_4e8f_8575_b58bfcdc766b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_0acc6cc9_5875_44d3_bd48_b24bb91caf4e(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).sum();
    }

    
    public static int sumSquares_Problem_3_699e1ae9_3bb2_49ee_b625_80863052b62e(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_ba9dc1b3_e7d2_4775_95e8_15c69c04bb20(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_299e5046_040f_4267_ae4b_92a2bfca6433(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_df836a52_8e5e_4964_99af_6da837d35e47(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_d2036a03_55ef_4b55_8ac6_1a51b94fa7c8(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_b4a11b64_b478_473c_9cd0_1c0fd27fd9fd(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_5289057e_22cf_4e96_a0c9_bbd4a45dcf47(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_96a790d7_26ac_4f81_9509_09131c31dec2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_d8fe484b_7325_4bec_9d32_a31ed6afe790(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_4_eb0dac5c_43d8_4b0d_8b4f_bfce37ea4f4a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_1de5ab3a_ba03_49ce_8937_f4994d3eee58(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b771b8dd_5bea_429f_b6f7_74218bb8a438(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_362b3e90_20f7_46ef_a9fc_78ad143e39b6(ArrayList<Integer> lst) {
        int sum = 0;
        int squaredSum = 0;

        for (int i = 0; i < lst.size(); i++) {
            int index = lst.indexOf(i);

            if (i % 3 == 0) {
                squaredSum += lst.get(i);
                sum += lst.get(index) * lst.get(index);
            } else if (i % 4 == 0) {
                squaredSum += lst.get(index);
                sum += lst.get(index) * lst.get(index);
            } else {
                squaredSum += lst.get(i);
            }
        }

        return sum + squaredSum;
    }

    
    public static int sumSquares_Problem_2_7ae95730_9a7d_4602_8935_e82dd1ec515b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_ea685832_8829_471a_9e62_83d698a8e182(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_7a18cc13_30db_4934_89db_a4492802861f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4!= 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 3!= 0 && lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_0b4e69f9_afbf_45d8_a6d7_22f7b3de37f0(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_11b130b4_9e9b_4daa_b940_1bb9f0071084(ArrayList<Integer> lst) {
        ArrayList<Integer> ret = new ArrayList<Integer>(lst.size());
        for (int num : lst) {
            if ((num % 3) == 0) {
                num = num * num;
            }
            else if (num % 4 == 0) {
                num = num * num;
            }
            else if (num % 3 == 0) {
                num = num * num;
            }
            else if (num % 4 == 0) {
                num = num * num;
            }
            ret.add(num);
        }
        return ret.stream().mapToInteger(x -> x).sum();
    }

    
    public static int sumSquares_Problem_8_7d490632_672c_4d17_83ee_3afebccb3f0b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_55dbb2e0_c6c3_48e0_971b_bb03d2af98e3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int index : lst) {
            if (index % 3 == 0) {
                sum += (index * index);
            } else if (index % 4 == 0) {
                sum += (index * index);
            } else {
                sum += index;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_5a7fe767_bff0_4d2f_9aca_38e6996f45bb(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b7f7ff44_30ff_47c0_92b7_c4033dcbe7c7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream()
                .filter(i -> i % 3 == 0 || i % 4 == 0)
                .map(i -> i % 3 == 0 ? i * i : i * i * i)
                .reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_10_2819958d_69ad_455b_8b15_ea4a699b3a11(ArrayList<Integer> lst) {
        if (lst == null) {
            return 0;
        }
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else {
                sum += l * l * l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_aa5fd41b_b674_4468_a415_881fbb7ff7a1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_82930748_98e2_467d_95d2_ae50556d9bd8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_cffb825a_fb1c_4337_b57a_726dc5e72074(ArrayList<Integer> lst) {

        // Write your code here.
        return lst.stream().mapToInteger(x -> x*x).sum();
    }

    
    public static int sumSquares_Problem_4_e57af75d_fd21_4cdc_8300_97458ecd57e4(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_2f93f89b_8bb0_4c9d_a870_a96795be767b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_d580d599_d96f_43c3_92f6_c330de837be5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_b11f820b_abf0_4ad2_86ec_7fde7a9030be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_5289057e_22cf_4e96_a0c9_bbd4a45dcf47(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_608d59bd_162c_40c5_a2d7_dc6ad044d23d(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_d51c0a63_737c_4800_a726_68aa5de67e5b(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ee303cc0_a006_48c5_9eec_6cbceec6d33f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_c4789124_1508_4309_9063_d357d7055b79(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_42f6e2db_de87_4062_9e89_6389d3799210(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_6_5a040027_077a_4fd7_b6f4_a06b823b02f2(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_55450cb0_fac1_4adf_bc31_0c932cb91f73(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_eecaf400_46b7_4b66_8eac_c85a08e14055(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_25b818fe_66a7_4acf_9ef1_d14ad1b279e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_9efcd933_3abc_44cb_8683_6b5e5cc719f1(ArrayList<Integer> lst) {
        int n = lst.size();
        int sum = 0;
        for(int i = 0; i < n; i++) {
            if((i%3 == 0) || (i%4 == 0)) {
                sum += lst.get(i);
            }
            else if((i%3 == 0) || (i%4 == 1)) {
                sum = sum * lst.get(i);
            }
            else if((i%3 == 0) || (i%4 == 0)) {
                sum = Math.pow(lst.get(i), 2);
            }
            else if((i%3 == 0) || (i%4 == 1)) {
                sum = Math.pow(lst.get(i), 3);
            }
            else if((i%3 == 1) || (i%4 == 0)) {
                sum = Math.pow(lst.get(i), 3);
            }
            else if((i%3 == 1) || (i%4 == 1)) {
                sum = Math.pow(lst.get(i), 4);
            }
            else if((i%3 == 2) || (i%4 == 0)) {
                sum = Math.pow(lst.get(i), 4);
            }
            else if((i%3 == 2) || (i%4 == 1)) {
                sum = Math.pow(lst.get(i), 5);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_7528433a_9df1_42f4_8893_1468b88288c6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_df817c12_7227_4f8b_becb_6de9a82a1532(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_f8b40c12_bd4a_4104_9e70_00cd8e5acd45(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_a986814f_f7c8_40e8_ad7b_7acec2277f87(ArrayList<Integer> lst) {

        // Write your code here.
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_01a60896_de98_47e2_a199_4761c8f22a1c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_3fdf955c_dd8e_4d0f_be67_7e57be347d5d(ArrayList<Integer> lst) {
        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_5cf3a1fc_e550_416b_a84c_c3a3fdbbc74f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_27720163_6824_486d_b2bf_5ac849850ec9(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_9_3cfcb7d3_3441_4c5f_8bf4_9ef5d8f77e2f(ArrayList<Integer> lst) {
        // your code goes here
        int sum = 0;
        for(int i = 0; i< lst.size(); i++){
            if(lst.get(i) % 3 == 0){
                sum += lst.get(i);
            }
            if(lst.get(i) % 4 == 0){
                sum += lst.get(i);
            }
            if(lst.get(i) % 3 == 0 && lst.get(i) % 4 == 0){
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_ead059d0_99dc_4faf_9242_6f74c5d61492(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_3c5909a6_788f_4966_a93c_6c0f7cff4000(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_c59b2414_8753_4565_aea9_7c9b4b8f0fdf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_dd406227_2dfe_4a1e_9f73_e4d5121050c9(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_f47c8fe1_de17_4b2b_a484_4559dc07b4f3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_ee7069dc_a2a1_4943_b4e7_a48a666684cd(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0L, Integer::sum);
    }

    
    public static int sumSquares_Problem_10_0468ffea_52fd_43da_bb74_b7a2a122fb68(ArrayList<Integer> lst) {

        // YOUR CODE HERE
        return 0;
    }

    
    public static int sumSquares_Problem_0_69fe4a14_81d3_4f15_96a4_3839a40d9d46(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_3b52639f_08b1_40d9_92ff_35a4dbbecd56(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_b0b584fc_3829_4045_a1d7_e946ee10271b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_fa9cc615_0099_435f_8123_e92d33aff570(ArrayList<Integer> lst) {

        // Your code goes here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_f8e90eac_60d2_403d_8ab2_8c7c70a01de7(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_ad5b03cd_df53_40e0_a401_35a92898c0b4(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_1d9bb977_d963_4390_b109_5d8005970905(ArrayList<Integer> lst) {
        if (lst == null || lst.size() == 0) {
            return 0L;
        }
        int sum = 0L;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            }
            else if (i % 4 == 0) {
                sum += i * i * i;
            }
            else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_2643a559_2018_49ff_adb2_7d8ffdfc8fe8(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_c59b2414_8753_4565_aea9_7c9b4b8f0fdf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_7b5ab684_000e_4905_972a_f90accdc1f10(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_29dcbe16_95c0_40ec_a0e5_a5bb0dc87382(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_16a19495_7462_4362_b04f_fc9bde746fb6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_61d095f9_958e_4d24_8332_6ae9b0ea9c18(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_4ee1a6f6_9e45_4e48_87a4_700fda0115a4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_61e5e3ef_c45c_42ae_b86f_27e47bf08072(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_87fb2c6a_34ca_4714_9c71_5f4dae18e887(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
                sumOfSquares += lst.get(i) * lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
                sumOfSquares += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sumOfSquares;
    }

    
    public static int sumSquares_Problem_10_a90687c8_3c55_4822_9987_5affc74c1b2b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_bf097a19_5c35_4acb_ba3c_14fbd827dfc6(ArrayList<Integer> lst) {
        int sum = 0;
        for (int entry : lst) {
            if (entry % 3 == 0) {
                entry = entry * entry;
            } else if (entry % 4 == 0) {
                entry = entry * entry;
            } else {
                entry = entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_3ed59702_3753_451e_84b5_8ead8d462b47(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_139dde5d_e1ef_4e9b_a336_a3550f786b1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_3fca4073_e4c8_4cc9_ab71_ff9444468009(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_91037e1d_7744_45b3_aa4b_94e1c157c70f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_6f5d57ef_7c88_4972_8f36_33f1992e9d5b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278(ArrayList<Integer> lst) {
        int sum = 0;
        if (lst.size() > 0) {
            // If size greater than zero then iterate over each element.
            for (int i = 0; i < lst.size(); i++) {
                // If index is divisible by 3 then square
                if (lst.get(i) % 3 == 0) {
                    sum = sum + lst.get(i);
                } else {
                    // If index is divisible by 4 then cube
                    if (lst.get(i) % 4 == 0) {
                        sum = sum + lst.get(i) * lst.get(i);
                    } else {
                        // If index is not divisible by 3 or 4 then return -1
                        return -1;
                    }
                }
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_3c4de698_31c8_4d76_8edd_eaebd6accce3(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_4a926a5f_f7d5_4621_906e_867aae273f64(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_c51ab5b1_da97_47e1_ade2_4bc490e1b54c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_1e78b721_6a4f_4d56_b619_d2b4480761d0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_d80dec03_f703_48d2_94da_77b95f3c32d2(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_40098bd2_f647_470f_9066_7d0d19b3de30(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_4e97e821_98be_49ac_9bf8_f77b477ba0be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_fb92b579_7b8b_4ddf_8799_65006b5f3fd3(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_6a4af19b_6f3d_4921_9383_ac3de526d1e5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_4d8871a1_c82a_4784_b65f_1b806147aaca(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_8e45db8f_6fa6_452c_86b7_c36bafd0b208(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_49fcd812_3a47_4e35_9964_59008040728f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_8cb10834_ef6f_44fe_8eaa_1da1b8418425(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_187fe97e_fa5e_4288_a0bc_c23248e92289(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_c3f67663_fb29_4ec8_b56a_41848dd5d6cc(ArrayList<Integer> lst) {

        // Write your code here
        int i = 0;
        int sum = 0;
        while (i < lst.size()) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 3 != 0 && lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            i++;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_139dde5d_e1ef_4e9b_a336_a3550f786b1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_99bdb7ed_f3e2_403b_ad72_8220b74a5ab1(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            }
            else if((i % 4) == 0) {
                sum += lst.get(i);
            }
            else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_0bfd3531_dfbe_45c0_bae5_e5496dc1299a(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_777ff717_b5eb_4cf6_ae88_689c7f0b1b12(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_4ea1c0fc_f771_44d5_a5f3_71a5386fe686(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_0f7ada62_460a_4eb5_be82_f9797b2d7376(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_b960507f_68a7_413b_bef9_5c783deba68d(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_7_2c7aedf6_a3aa_4e4c_9b41_719f84bec09a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3f1d5f9f_8005_4be1_be6a_af01edd12315(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_598ef488_3a88_492b_9102_b1bf3fc608f3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_5cfcdd9f_d24e_41ad_9ec8_f09c572073db(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_92dc4688_f22a_422a_befd_1cf76c2bd886(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_235f35a0_4b33_4687_bc2f_f5662c2e7fb8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_8bff2687_84d3_48cb_aec2_30b206d0a606(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_427bc80b_3fab_4486_9da3_033c7d21927c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_8a9c7947_0eed_497b_a853_cf81c4423a92(ArrayList<Integer> lst) {
        // Your code here
        if (lst.size() > 0) {
            int sum = 0;
            int n = lst.size();
            for (int i = 0; i < n; i++) {
                if (i % 3 == 0) {
                    sum += lst.get(i);
                }
                else if (i % 4 == 0) {
                    sum += lst.get(i) * lst.get(i);
                }
            }
            return sum;
        }
        else {
            return -1;
        }
    }

    
    public static int sumSquares_Problem_1_78cfffea_8010_4a4f_8569_be841b0d99e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_f2adf25c_0434_4dad_b3fe_39d707390c8e(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        return lst.stream().mapToInteger(Integer::intValue).sum();
    }

    
    public static int sumSquares_Problem_10_8625f07d_a017_4d1e_bdf0_ed1d2c1811dd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_4708ab0a_abb5_42c2_b7d8_c38ceb2b05a1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_f309460b_7607_4043_8bcd_d1752a581989(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_0_b9eced47_9e7f_4bf2_abf1_a2d4ccc60629(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum+=i*i;
            }
            if(i%4==0) {
                sum+=i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_6c93a622_5a40_41c7_98c1_b6154ffaefd5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_fb8487a0_53ef_489d_ba29_fa94cd3244cc(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_44553a22_d899_4606_ab8d_36f649952245(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_ee4f33bd_1e83_4be8_9953_701b4b23bc77(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_b4a11b64_b478_473c_9cd0_1c0fd27fd9fd(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_5584df20_af27_4021_8ee2_d2c102ea98d0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_ceaab59d_a5f8_4258_ae6d_b0af01c55466(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i=0; i < lst.size(); i++) {
            int current = lst.get(i);
            if (i % 3 == 0) {
                current *= current;
            } else if (i % 4 == 0) {
                current *= current;
            } else {
                sum += current;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_1882af5e_fa1b_45c5_a8f1_1e74ed023662(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); ++i) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i);
            } else { // else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) / 4; 
            }
        }
        return sum;
    }
    public static void main(String[] args) {
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(1, 2, 3)))) == (6));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(1, 4, 9)))) == (14));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList()))) == (0));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(1, 1, 1, 1, 1, 1, 1, 1, 1)))) == (9));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, -1, -1, -1, -1, -1, -1, -1, -1)))) == (-3));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(0)))) == (0));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, -5, 2, -1, -5)))) == (-126));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-56, -99, 1, 0, -2)))) == (3030));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, 0, 0, 0, 0, 0, 0, 0, -1)))) == (0));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37)))) == (-14196));
    assert(sumSquares_Problem_8_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10)))) == (-1448));
    }

}

    
    public static int sumSquares_Problem_5_e259049d_672d_4d23_b3f2_5f9030585626(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_781834f1_addb_486b_a2b9_693fcf597709(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int square = lst.get(i);
            if (i % 3 == 0 || i % 4 == 0) {
                sum += square;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_8bcd165a_e538_4331_b411_4202d67498ef(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_c2862117_dc27_49e2_9c53_b01a6e7900f9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_ea0b32ea_a8a9_4fcc_bcab_592b49c4f75e(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_d40371a5_ae8c_4b86_95e1_411e3012ef06(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_2f1ee420_a2c7_4a8c_ac57_b86e5e8e9d0a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_1_37a63172_50f4_4184_8ed8_ff34563b25c1(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum+=i*i;
            } else if(i%4==0) {
                sum+=i*i*i;
            } else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_c3c00751_2da2_4697_9d8d_9d698fba60d1(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_7a7b052a_19c4_4df1_9680_f5b8f3c08119(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i,  Math.pow(lst.get(i), 2));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i,  Math.pow(lst.get(i), 3));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_191611d2_1730_471d_bcc5_794c0aa7c004(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_0f7ada62_460a_4eb5_be82_f9797b2d7376(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_6e2aef7b_99c4_4873_ba12_e7944aaeb612(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i * i;
            } else if(i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_1eeea871_05b0_4234_a4d6_0959ddefd7bc(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_c3725312_38cd_4315_a71d_35bd42447119(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_eacec2c1_23cb_4dc9_a7d9_175dfc405289(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_a33c7c91_6bac_41ba_80c0_78e68954cca1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_996568fb_f007_4480_9379_49604355b0fb(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_51084fd7_6d8d_4296_b056_679d340ee03b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_3af1e785_7a03_4f12_bae2_809d3ec2d9b7(ArrayList<Integer> lst) {
        return lst.stream().filter(e -> e%3 != 0).map(e -> e*e).filter(e -> e%4 != 0).map(e -> e*e).collect(Collectors.toList()).stream().reduce((a,b) -> a+b).get();
    }

    
    public static int sumSquares_Problem_10_5f70af44_0e70_455d_bc3d_23637613b7a9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_57b1198e_ec69_480c_b310_37fa18c72408(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_ba1524c4_be82_4cd8_bb50_92607f69bd01(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_5fcbf3db_a994_4263_b99d_4f3608c69312(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_1d9bb977_d963_4390_b109_5d8005970905(ArrayList<Integer> lst) {
        if (lst == null || lst.size() == 0) {
            return 0L;
        }
        int sum = 0L;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            }
            else if (i % 4 == 0) {
                sum += i * i * i;
            }
            else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_2c1f1b7a_5885_49a0_b36d_43d74b596afb(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum += i*i;
            } else if(i%4==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_e1cb8491_9376_4d9a_b29b_01611ac79aa4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_5f950da1_25a3_4028_98c6_556fc489d94e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_0958a14c_c1d3_4281_95dc_f28b249d791c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_f63d409d_516f_4bdb_8f21_a636a37dc729(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_50c7ebde_3ffd_42f1_8f64_9328f09d581b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_be5d77d0_9bbc_4530_9e7b_febb459f9d94(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_1f332146_8463_43f5_b956_af7cd3ab3039(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_bc4af9d9_c08e_42fd_946a_790968ef9503(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_a9085423_ebe6_45bb_bfeb_c6e319da3c5f(ArrayList<Integer> lst) {
        // Write your code here.
        int ret = 0;
        for(int i=0;i<lst.size();i++) {
            if(lst.get(i) % 3 == 0)
                ret += lst.get(i);
            else if(lst.get(i) % 4 == 0)
                ret += lst.get(i);
            else {
                if(lst.get(i) % 3 == 1)
                    ret += lst.get(i)*lst.get(i)*lst.get(i);
                else if(lst.get(i) % 4 == 1)
                    ret += lst.get(i)*lst.get(i)*lst.get(i);
                else
                    ret += lst.get(i)*lst.get(i);
            }
        }
        return ret;
    }

    
    public static int sumSquares_Problem_8_5593b07f_ae14_4af8_8ed2_5dae074dde21(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_93346df9_e05d_4f3a_9ac7_1aec210b84ba(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_85023817_0622_4a96_b8da_bc30a3df6e65(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_c637337c_4c3d_4d95_87a3_4a9e070a3dff(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_2e3d3d54_ad6b_415a_8efa_ee36e9b0fc16(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_951041ba_c6a0_469c_816c_249e1069ae61(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_a3c582af_2028_4dbd_ad69_ea59aeada35f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_c28c830c_9b19_4290_bc64_79b90c8f8ad4(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_55ab3dea_2a5f_443a_8f45_07295411d2db(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_37a1b3f8_4104_4078_91f8_a24830cbf364(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04(ArrayList<Integer> lst) {
        ArrayList<Integer> evenLst = new ArrayList<Integer>();
        ArrayList<Integer> unevenLst = new ArrayList<Integer>();
        for (int i : lst) {
            if (i % 3 == 0) {
                evenLst.add(i);
            } else {
                unevenLst.add(i);
            }
        }
        return evenLst.stream().mapToInteger(l -> l * l).sum();
    }

    
    public static int sumSquares_Problem_10_81fcc6af_3413_41ad_9ea6_8fee9da8831d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_301e8709_b555_4aee_88aa_6a813c150809(ArrayList<Integer> lst) {
        int sum = 0; // sum will hold our sum
        int sq = 0;   // sq will hold the squared sum
        int i;             // will hold our index

        // loop through every element in the array list lst
        for (i=0; i<lst.size(); i++) {
            // if index i is a multiple of 3, square the element and add it to sum
            if (lst.get(i)%3 == 0 || lst.get(i)%4 == 0) {
                sq = sq * lst.get(i);
                sum = sum + sq;
            }
            // else if index i is a multiple of 4, cube the element and add it to sum
            else if (lst.get(i)%4 == 0 || lst.get(i)%3 == 0) {
                sq = sq * lst.get(i);
                sum = sum + sq;
            }
        }

        // return the sum
        return sum;
    }

    
    public static int sumSquares_Problem_8_ee7069dc_a2a1_4943_b4e7_a48a666684cd(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0L, Integer::sum);
    }

    
    public static int sumSquares_Problem_0_d61a91b6_afa2_4fe5_b3ec_eb98944f6c5e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_e49c191c_b79b_4e44_a019_326fd28deedd(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0) {
                sum += lst.get(i);
            }
            else if(lst.get(i) % 4 == 0 && lst.get(i) % 3 != 0) {
                sum += lst.get(i);
            }
            else if(lst.get(i) % 3 == 0) {
                sum += lst.get(i);
            }
            else if(lst.get(i) % 4 == 0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_7a2068fd_8f11_42be_9d17_0a15768bdd94(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_f794eca0_f942_45ff_85f1_ece75e562a0d(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_1_5c6334cb_6778_46bb_a001_12f68613d405(ArrayList<Integer> lst) {
        int sum=0;
        for(int i=0; i<lst.size(); i++) {
            int a=lst.get(i);
            if(lst.get(i)%4==0){
                lst.set(i, a*a*a);
                sum+=a*a*a;
            }
            if(lst.get(i)%3==0){
                lst.set(i, a*a*a*a);
                sum+=a*a*a*a;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_680cc2de_892b_4467_a5aa_9c53cc9a848c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i=0; i<lst.size(); i++){
            if(i%3==0 && i%4!=0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i%4==0 && i%3!=0){
                sum += Math.pow(lst.get(i), 3);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3ac4198e_932f_4069_ad4a_0a1dd00ad27c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_ca3a6223_79f0_473a_824d_c698c7b7d8b4(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_d8428c38_91b5_49cf_80bb_a2bb6e492b56(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 || lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_5ed4914f_3464_4db7_8482_44d8ee91e819(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_2c66fa3c_4f6b_41ff_b081_873217edc19d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_c505ec90_aea4_4998_9da7_6c831cac205a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_29dcbe16_95c0_40ec_a0e5_a5bb0dc87382(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b253afe7_3c5f_4b20_98b8_1d72c0fb5c3b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_7528433a_9df1_42f4_8893_1468b88288c6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_84e35fcd_3beb_4251_a888_7e8564610c69(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_0fb4cbf5_16e0_464c_baa7_937302925562(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_6abea681_fb66_4df6_870e_4a2646907ca7(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_3c5909a6_788f_4966_a93c_6c0f7cff4000(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_c4789124_1508_4309_9063_d357d7055b79(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_367cdeb8_7b39_4b44_aa51_e5f4c5732b7f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_bcd9aae5_e3f9_4475_954c_7379a20e9f00(ArrayList<Integer> lst) {
        int sum = 0;
        for(int l : lst) {
            if(l % 3 == 0) {
                sum += l * l;
            } else if(l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_f411a10c_406f_4eeb_a9e3_7f577505ef46(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0L, Integer::sum);
    }

    
    public static int sumSquares_Problem_2_4e2e29ea_127f_4e95_818a_cb281a3c2c33(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_9_9e47782f_caec_429d_b68e_779a455d21d6(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_cc5ce28b_38ac_4e69_b4aa_0a8276f69160(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_a051f500_a175_4709_8158_f96fef8d2c57(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_87968a4b_7337_4e36_8cf5_ca3bfb6e6e17(ArrayList<Integer> lst) {
        return 0;

    }

    
    public static int sumSquares_Problem_9_7ea156d3_fef0_47ce_a86e_cf5856d56622(ArrayList<Integer> lst) {

        // your code goes here
        return 0;
    }

    
    public static int sumSquares_Problem_7_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_60ccdf3e_0f1b_4cf8_81ba_5489ee6566e3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_6abea681_fb66_4df6_870e_4a2646907ca7(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_46e5ea52_313f_475e_8fee_8f68c8eab1fd(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum+=i*i;
            }
            else if(i%4==0) {
                sum+=i*i*i;
            }
            else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_21a5057c_9234_44dd_8b3f_78fa8dfa74b3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_08403272_232e_4f11_9cf5_200a50f6f57f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_fb38f507_380e_4b7a_b060_9c31719ff9bd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_9eb72a54_23d5_4627_bd0b_f99de6b26e43(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_3cb646c5_f828_4d73_ac1c_2f1b95367e97(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_ead059d0_99dc_4faf_9242_6f74c5d61492(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_1e4c644e_784b_4db2_ad77_87d61772a907(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_552c0649_9421_4ba1_bb4f_e3cb94528545(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_e2211059_43d1_4b9f_b4f1_30f15463c1dc(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer num : lst) {
            if(num % 3 == 0)
                num = num * num;
            else if(num % 4 == 0)
                num = num * num * num;
            else
                sum = sum + num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_a459df7a_998b_406d_a371_60197f631e9b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_3062f8d1_8bc7_4062_af96_2608782dfdcd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_81329772_a43b_44ed_84ee_f9fea556dfb7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_10_c56b7d95_0ea9_4cdc_ad03_5623b1b49e34(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_b0b584fc_3829_4045_a1d7_e946ee10271b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_67c3628d_7bcd_420b_9fe4_5aa509f2dd95(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_ffc45ebe_28de_4abf_a5e1_2d1c351fdfd5(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_a5ab250d_4cc8_4b94_bff6_f59e97b811f0(ArrayList<Integer> lst) {
        // Your code here
        return 0;

    }

    
    public static int sumSquares_Problem_4_15dc3143_4476_405c_b934_727b11559acb(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x * x).sum();
    }

    
    public static int sumSquares_Problem_7_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_1_9d8fdebe_0ece_476e_aa90_2ce8240de597(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_0a2c317a_54aa_4680_ac29_b26739bbb890(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_f5e127b9_699a_4b22_9a96_2bf79fabc5aa(ArrayList<Integer> lst) {
        ArrayList<Integer> copy = new ArrayList<>(lst);
        int sum = 0;
        for (Integer i : copy)
            if (i % 3 == 0 && i % 4 == 0)
                sum += i * i;
            else if (i % 3 == 0)
                sum += i * i;
            else if (i % 4 == 0)
                sum += i * i;
            else
                sum += i;
        return sum;
    }

    
    public static int sumSquares_Problem_8_d30bb3ef_1754_459c_b260_c11986986123(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_7a07f165_5a82_4f62_a545_c22243d40c5c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_49727e83_e170_4d2f_8744_3e33880947d4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_a00924fd_5f4e_45a4_930f_427c4b139cbe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_c5275a4c_542a_4ea9_a02e_07e2c2c013f1(ArrayList<Integer> lst) {

        // TODO: Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_4f31dbc3_8d16_4644_9032_3e2ef1850573(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_3649695c_e926_455f_89e1_5910b0213e2a(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            }
            else if((i%4)==0) {
                sum+=i*i*i;
            }
            else {
                sum+=i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b4520e2a_9f61_4e86_85ee_d2c56d5f32ba(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3fca4073_e4c8_4cc9_ab71_ff9444468009(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_4997ccc9_80de_4610_940c_a67d26fb88ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_33b18ea9_74c6_4ebe_86f5_e9b259338f67(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_c33bf9de_2375_44c8_884b_11c2db60fbf7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_79ff93d6_16c3_4b7d_a70b_021602f83f97(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_cadebaa4_a4aa_468f_8910_d9304a70cf59(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_769a1510_a81c_4c2a_bcfb_eb199b87dcec(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_59e84e77_e49c_4108_bf2d_5d418ba54d97(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_8_e1425a7c_9e20_48c1_89ff_3fc43fcd6cba(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_aaaa89ba_0356_47d8_8d9c_db9a401dfac5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_28c21861_31d0_48a8_9390_47fae3634c88(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_919df132_73e8_4e46_993d_f8fc7e1f6206(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_badd6070_be44_4de5_ab8b_3963c15fcc4c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_5f70af44_0e70_455d_bc3d_23637613b7a9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_1d658de9_31c8_4f00_8862_d4297229d3cf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_04db44c2_7aa4_4326_b101_9ee9cf9636f3(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_a0695789_7e86_436d_ae93_6e212b003010(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_42f6e2db_de87_4062_9e89_6389d3799210(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_10_b7106b93_7013_4bd5_8b7a_d73ef24eb25a(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            } else if(i%4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_9a93c12c_ce95_41c7_9ce4_3b2e68333114(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_30d135c3_f023_4fb1_9c3d_95305aadc243(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_ca2be47a_b862_465c_84da_6f0c73906405(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_5a7fe767_bff0_4d2f_9aca_38e6996f45bb(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_662dece2_0e82_4710_97e0_367432a81188(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_261fbf1b_360f_4c6d_9ca6_57ac36781f70(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3e8ea4c6_2a8a_43bd_882d_9bbab13c2b3b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum+=i*i;
            } else if(i%4==0) {
                sum+=i*i*i;
            } else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_2a4aa73b_31ad_4698_b480_a31d1d0a9b60(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_3079c506_7085_4775_91e9_458cf7b77f3b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_67124927_a2c8_4621_be29_814ea6e30d7a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_f331e4ff_1df3_407b_b957_226d753f47fe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_e0d8a05f_36d1_4de0_8df2_49c4211732b7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_8b5c8756_c601_4a93_8e97_399236f57d4f(ArrayList<Integer> lst) {

        // your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_9e9bee03_0375_466b_9de7_d19455ebb25b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b61a11bd_6b44_41db_a7bc_75ba8f1fa108(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_fe1a9eb4_6d2a_43c3_a420_b3b3536bf575(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_1e41e079_b922_4cd7_9ef4_c86085f2f40a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_6c93a622_5a40_41c7_98c1_b6154ffaefd5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_297bee23_5210_4704_a237_2d9dff097aad(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_fdad6029_76e6_4611_a7da_8ee43bc2e92d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_21d70dee_0972_46d8_a754_4b41223f4e46(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_699e1ae9_3bb2_49ee_b625_80863052b62e(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_5453c301_dfb3_404a_8d5b_0fa41044ca8b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_a7e16e1a_7114_4ac9_ad29_01d525a1683d(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x * x).sum();
    }

    
    public static int sumSquares_Problem_10_a26c4082_781d_4d49_becb_d101065b27b7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_151e4d09_2f26_45a4_82ef_11a0003a1251(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            }
            else if((i%4)==0) {
                sum += i*i*i;
            }
            else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_fed2da56_1657_427e_83fe_de1f9dc12d64(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_694ef5e8_412c_474e_ad6c_4bc652810f1e(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_af76e576_7bb4_4a6b_ad7e_d01b150d1790(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_c8db7701_a480_430f_a0bf_434a1680aaba(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_2bc28d8a_c8a9_40d3_81fa_9944bfa8b67f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_49727e83_e170_4d2f_8744_3e33880947d4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_cf04e23e_33cb_457a_a7f3_5f397206e8a4(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_d8cd6731_e63f_4745_81e6_a19d52a5432a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f6eed8b9_75db_453e_aa58_776776cf6533(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_253a383d_ee88_415a_9fc8_94156f28b54a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_0_ad57f780_a32d_4c84_95c9_3b5fafb7206b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_2fc8099c_429a_4682_ada0_ccc17ca42855(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_41d6de77_a044_46d4_b27e_e3ebaafe0cba(ArrayList<Integer> lst) {
        int sum = 0;
        // This while loop ensures we don't go out of bounds, if there is no element in the list lst
        for (int i : lst) {
            if (i % 3 == 0 && i % 4 == 0) {
                sum += i;
            } else if (i % 3 == 0) {
                sum *= i;
            } else if (i % 4 == 0) {
                sum /= i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b4778156_87b8_410b_bb94_44b20e737808(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_c28c830c_9b19_4290_bc64_79b90c8f8ad4(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_889889c2_397f_44b4_9dee_8f645a638895(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_8c973c8b_9e5c_4dc0_a72c_b25747f83287(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if ((i % 3 == 0) && (i % 4 == 0)) {
                sum += i;
            } else {
                sum += i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_ad461f13_726d_4c5d_9c86_df85fe03b77c(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else if((i % 4) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else {
                sum += i;
            }
        }
        return sumOfSquares;
    }

    
    public static int sumSquares_Problem_1_5a2951ef_4128_4961_982f_84ceb56920a3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_815b3a53_3155_46fe_a340_0a14e26e5ac6(ArrayList<Integer> lst) {
        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_a794a467_b08d_40c6_aea0_05c71aa8f7e7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_81fcc6af_3413_41ad_9ea6_8fee9da8831d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_ab386b80_099c_41b3_89c9_abff850c78d2(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_51084fd7_6d8d_4296_b056_679d340ee03b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_03bb829b_7af8_499a_b92c_7b89f3fef48b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_80b48c69_c8f5_4c20_a104_7076970c0ba8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_cd695e31_c50c_40c9_ab0b_6673c1025c69(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_1c351398_b153_4708_86a8_d67ca98edd5f(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_5_1de5ab3a_ba03_49ce_8937_f4994d3eee58(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b7710134_108d_41f6_b1f4_21fcee28bdc8(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_df8ce354_1273_42f6_bfa8_4ccc2bf1975e(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_7b5ab684_000e_4905_972a_f90accdc1f10(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b972d821_f689_4826_ba6f_3bd0f37e9e2b(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5551a862_0586_447e_8ad2_93a7f70ad572(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_a796700b_3101_41df_97c6_7637a9f3b3be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_38f37fd7_be21_4ef2_92f3_c7f49f84f786(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_8f7cfef4_689f_4dc3_a938_09457e58b00d(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_7fdfcd31_ce73_4fa8_aced_da168c555fc5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_3079c506_7085_4775_91e9_458cf7b77f3b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_cd695e31_c50c_40c9_ab0b_6673c1025c69(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_af76e576_7bb4_4a6b_ad7e_d01b150d1790(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_899fb681_838a_4fee_aaeb_8104224668f9(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> {
            if (lst.indexOf(x) % 3 == 0) {
                return x * x;
            } else if (lst.indexOf(x) % 4 == 0 && lst.indexOf(x) % 3 != 0) {
                return x * x * x;
            } else {
                return x;
            }
        }).sum();
    }

    
    public static int sumSquares_Problem_5_3b7d1298_03e5_421a_af93_9d8b4061771c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_4a4fc6e7_1fde_4395_8f7b_a5ecf7dd2060(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_3_d9c8ab28_a340_4269_b355_9e9668d286c6(ArrayList<Integer> lst) {

        // Write your code here
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_c5d86865_e0f2_43bd_a160_35132eb25260(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x*x).filter(x -> x%3==0 || x%4==0).reduce(0, (x,y) -> x+y);
    }

    
    public static int sumSquares_Problem_8_47855f1d_5dea_4a3b_a158_50a18a59fdff(ArrayList<Integer> lst) {
        int sum = 0;
        for(int e : lst) {
            if(e % 3 == 0 && e % 4 == 0) {
                // do nothing
            } else if(e % 3 == 0) {
                e = e * e;
            } else if(e % 4 == 0) {
                e = e * e * e;
            } else {
                e = e * e * e * e;
            }
            sum += e;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_21d1e7f2_b38b_4e75_abed_292e8342e81f(ArrayList<Integer> lst) {
        return 0;

    }

    
    public static int sumSquares_Problem_10_30d135c3_f023_4fb1_9c3d_95305aadc243(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_2dde2622_5408_4f85_9f98_a0970e7fd180(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_8c3d092a_052a_4249_a125_0350f0a6d06f(ArrayList<Integer> lst) {

        // Write your code here
        for(int i=0;i<lst.size();i++){
            if(i%3==0){
                lst.set(i,lst.get(i)*lst.get(i));
            }
            if(i%4==0 && i%3!=0){
                lst.set(i,lst.get(i)*lst.get(i)*lst.get(i));
            }
        }
        int sum=0;
        for(int i=0;i<lst.size();i++){
            sum+=lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_df836a52_8e5e_4964_99af_6da837d35e47(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_f5cebb32_ac49_4ef6_85f6_d9cb06969d5c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_a60fa43f_e399_4865_bf8f_32da8c123c4d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_555da9d4_9a5c_49dd_af49_1f24d38d8d9e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 || lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_e09d2a5f_b6e0_4daa_abf6_ac98ac5010ef(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_50ec7e93_5f22_4e4e_922a_4d14806d7bfe(ArrayList<Integer> lst) {
        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f47c8fe1_de17_4b2b_a484_4559dc07b4f3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_26811973_7a9d_4ec5_a92c_18e4f9f6ee8a(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_badd6070_be44_4de5_ab8b_3963c15fcc4c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_bf097a19_5c35_4acb_ba3c_14fbd827dfc6(ArrayList<Integer> lst) {
        int sum = 0;
        for (int entry : lst) {
            if (entry % 3 == 0) {
                entry = entry * entry;
            } else if (entry % 4 == 0) {
                entry = entry * entry;
            } else {
                entry = entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_7313cd55_4357_4156_81b1_5c8176243aeb(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_2ad17ca3_d8ad_453b_abad_b50430af3faf(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum += i*i;
            } else if(i%4==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3ae92d56_5e6f_4a9c_94e2_25968df57210(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_3fe26bee_0a8e_452f_aa28_cd9c3f62216b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_96f003d0_010e_4ea2_9d6b_66a87e24300e(ArrayList<Integer> lst) {
        ArrayList<Integer> list = new ArrayList<Integer>(lst);
        int result = 0;
        for(int index = 0; index < list.size(); index++)
        {
            if(list.get(index) % 3 == 0)
            {
                list.set(index, list.get(index) * list.get(index));
            }
            else if(list.get(index) % 4 == 0)
            {
                list.set(index, list.get(index) * list.get(index) * list.get(index));
            }
            else
            {
                list.set(index, list.get(index));
            }
        }
        for(int num : list)
        {
            result += num;
        }
        return result;
    }

    
    public static int sumSquares_Problem_9_ff94ae0a_1031_4b3e_b2c4_3329f89f1c13(ArrayList<Integer> lst) {

        // YOUR CODE GOES HERE
        // BEGIN SOLUTION
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
        // END SOLUTION
    }

    
    public static int sumSquares_Problem_7_3b7d1298_03e5_421a_af93_9d8b4061771c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b7106b93_7013_4bd5_8b7a_d73ef24eb25a(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            } else if(i%4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_e5c8172b_5f08_4447_aff1_2173019b0038(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_c6f1e231_c89b_4c69_acde_4a94de5a4b10(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_8515769a_e00a_4d94_aaa5_c20c676943fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_42707417_ca89_4e2c_9872_e50ab68adfca(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_eecaf400_46b7_4b66_8eac_c85a08e14055(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_262dc9f6_c5df_44b8_a45b_c6675522c6e8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b0a165d6_b437_4e95_ba93_8437058c85f5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3e514e14_b387_48ab_b579_9fc427f2a0c4(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_f3b2b915_8737_4534_9b36_303c9e97da3c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_71d4b5fd_75fc_429e_be2e_846e2234baee(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            } else if(i%4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_a6fe331e_c151_440b_9af1_269c5772617a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_25eb5313_b1e9_4baf_9eee_e8945720153a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_10_bd0cc2e6_e6ea_4cfd_9bed_646c12635946(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_c6e2936a_016b_43e5_bbe1_a3f8b827c3b3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_3206730c_2696_45d5_b3b7_1157a01d385f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_0f956146_e376_40e9_8b33_bc916940fa38(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_c10616a8_2663_451b_96d5_92d0ff3969b2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_48488bf1_5c99_46e8_93b4_51055ab037d8(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_279cfa77_7685_4004_8c81_40e47b13596b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_c9046a74_2019_4003_97a9_72efa7d8d8bc(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_413db871_33f1_439c_959f_715f0931bb1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_4038df60_3524_480e_84fd_08af3e15ad46(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x*x).filter(x -> x%3==0 || x%4==0).reduce(0, (x,y) -> x+y);
    }

    
    public static int sumSquares_Problem_4_6e9b267e_ae76_4480_b70d_18fbcd219893(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_ebac03bf_376f_4573_aa85_16bce3e518be(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_c82327d4_10dc_419a_9656_325333257766(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_1c11aea5_2426_4d5e_918f_911502043c4d(ArrayList<Integer> lst) {
        int count = 0;
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i;
                count++;
            }
            if(i % 4 == 0) {
                sum += i;
                count++;
            }
            if(!(i%3 == 0 && i % 4 == 0)) {
                sum += i;
                count++;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_e9b26a14_c1d4_496c_8733_be4555e77294(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_45ce79e4_eea0_43ee_b7a3_da200711a3a0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_692bcc92_5697_49a5_8075_744188d2bf67(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_fde9be33_a06d_468b_9df4_a1cfc42c52f7(ArrayList<Integer> lst) {
        // TODO: Implement this function
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_d1985ffc_cc19_4be4_a49b_169fb46a8b68(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        return lst.stream().mapToInteger(Integer::intValue).sum();
    }

    
    public static int sumSquares_Problem_8_616150a3_e822_4f6a_b2c2_3cf56f1a8fc8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_010b613c_829d_4e69_89ea_f916837e475a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_d73bb6c3_9e68_4f42_824e_f08b9af850dd(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_aeebc90b_a551_451d_a618_8573b132f31f(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_97ee90af_137f_4d90_9d00_d63fcd4d9191(ArrayList<Integer> lst) {
        int sum = 0;
        for (int e : lst) {
            if (e % 3 == 0 || e % 4 == 0) {
                sum += e;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_4997ccc9_80de_4610_940c_a67d26fb88ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_555da9d4_9a5c_49dd_af49_1f24d38d8d9e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 || lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_400598da_0427_493a_8434_2feca7a51edd(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_d4cf3f8d_8cbb_439c_a52a_c475fef26424(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_2577ac2b_98c0_4184_9b42_04a5bab91228(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_d812e5e1_b8fd_4eb2_8734_f923d475fc0f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_5a2951ef_4128_4961_982f_84ceb56920a3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_013b1275_5d64_4713_97a2_b220b6c70607(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_a00924fd_5f4e_45a4_930f_427c4b139cbe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_0f7ada62_460a_4eb5_be82_f9797b2d7376(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ffc45ebe_28de_4abf_a5e1_2d1c351fdfd5(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_b024984c_0eef_4caa_8a11_ec361a6790ab(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_f5544eb4_d9d4_4dbe_8c11_be85afc6211f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_c0736600_8931_48f7_a56a_bbdf0335f849(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if(lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_1eeea871_05b0_4234_a4d6_0959ddefd7bc(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_048d4c6b_be1f_4dd8_a337_54c59be17f51(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(i -> i * i).filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_6_368df924_44d4_4bb5_ba7c_b5611f86d1d0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_301e8709_b555_4aee_88aa_6a813c150809(ArrayList<Integer> lst) {
        int sum = 0; // sum will hold our sum
        int sq = 0;   // sq will hold the squared sum
        int i;             // will hold our index

        // loop through every element in the array list lst
        for (i=0; i<lst.size(); i++) {
            // if index i is a multiple of 3, square the element and add it to sum
            if (lst.get(i)%3 == 0 || lst.get(i)%4 == 0) {
                sq = sq * lst.get(i);
                sum = sum + sq;
            }
            // else if index i is a multiple of 4, cube the element and add it to sum
            else if (lst.get(i)%4 == 0 || lst.get(i)%3 == 0) {
                sq = sq * lst.get(i);
                sum = sum + sq;
            }
        }

        // return the sum
        return sum;
    }

    
    public static int sumSquares_Problem_5_d1985ffc_cc19_4be4_a49b_169fb46a8b68(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        return lst.stream().mapToInteger(Integer::intValue).sum();
    }

    
    public static int sumSquares_Problem_5_c8dc5352_237f_4fc9_b826_171110282aa4(ArrayList<Integer> lst) {
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                int val = lst.get(i);
                lst.set(i, val * val);
            } else if (i % 4 == 0) {
                int val = lst.get(i);
                lst.set(i, val * val * val);
            }
        }
        int ans = 0;
        for (int l : lst) {
            ans += l;
        }
        return ans;
    }

    
    public static int sumSquares_Problem_10_82f96036_86c4_4e3e_b9a8_67829ba56eea(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_f67c3a8c_9e62_4590_90e9_0317c7d836fe(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_bcb19784_7424_434a_a9f2_f025dfaf8a59(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_9730a340_8a88_4a90_abff_b2ab764783de(ArrayList<Integer> lst) {
        int count = 0;
        int sum = 0;
        
        for (Integer e : lst) {
            if (count % 3 == 0) {
                sum += e * e;
                count++;
            } else if (count % 4 == 0) {
                sum += e * e;
                count++;
            } else {
                count++;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_7aa3e9c6_7f2f_455c_811d_b6b3419af771(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_3423fb22_6979_4d07_bb4a_600fcfaf10e7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 || lst.get(i) % 4 == 0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_306274af_f49e_4935_b341_7cdbe6b30501(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_ac3467e6_6d9c_4012_8914_2cfdcdece568(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_0ae0d2d9_c5e6_41ad_99e3_dce92efa88e7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_6ee61dce_1d15_4406_9815_6e566f344f33(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f4d866ec_ac2b_42f9_9960_211653bcb9ae(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_4bff4850_44c8_42e5_8ec9_950fe47a6335(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_727c1f17_1d45_433c_b239_78e6b9f3b708(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5130c146_5a1d_4d94_a1b6_96e6df3df78a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_5a2951ef_4128_4961_982f_84ceb56920a3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_3c9e4243_900b_41a9_be9e_4d90988988fc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_65877ab1_60af_4436_8d56_2c2798f00f9e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_027eb184_88c3_425c_9969_daf4f5643667(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_78cfffea_8010_4a4f_8569_be841b0d99e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_35db6182_f047_4f6f_b78d_46de0a404791(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_d88695fd_495d_4d5c_93c9_7d88aca8a8fc(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_81c807b0_d9b1_4576_8198_7daa6be373cf(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_0e6d3cfa_8018_4d9c_8a40_fb8a579d9710(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_75c50ee2_89a7_42e2_aca9_4beee43bfdeb(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_f3d6b5ee_d738_4b6b_a41e_efa0bbee040b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_d8cd6731_e63f_4745_81e6_a19d52a5432a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_97bd7ee3_e95f_4ff8_8fbd_954015ddd0bd(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_b61a11bd_6b44_41db_a7bc_75ba8f1fa108(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_3f1d5f9f_8005_4be1_be6a_af01edd12315(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_b5788d38_b233_4160_ac90_02872ee1cf55(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_e2a17464_4d1f_4d53_b063_48277b95fbea(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_dc8d1acf_34d1_4302_9e19_9bb7bc6a36fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_69d1b1c7_d7a5_4375_9b43_5b1158a30692(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_5_738dafe9_680f_4f63_89d2_62d53efa31ec(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_b7140928_9635_4c5d_bb8f_19ff0fba1a72(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_60ccdf3e_0f1b_4cf8_81ba_5489ee6566e3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_414072ab_8397_4ba0_8cdb_aeb69aa566a7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_81819f90_c0c5_4a48_8ab7_d619b88eb495(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i * i;
            } else if(i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_a341db76_605e_4def_a222_aa05520763c9(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_9e9bee03_0375_466b_9de7_d19455ebb25b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_92308e72_1eea_4e5c_aa00_259ffcfb2146(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_c4bce134_f013_47e9_b149_831eda6ca5f6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_bf3995bb_7132_4003_b1d1_b7a93df5a712(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_e040b5d8_edfd_48af_a03e_feabb1003e8d(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_e0d8a05f_36d1_4de0_8df2_49c4211732b7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_6b30a54a_39f9_4bec_a658_7951eae74aec(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_80b48c69_c8f5_4c20_a104_7076970c0ba8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_c3a09283_7c6c_45d8_812e_65bb089e22d0(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x*x).filter(x -> x%3==0 || x%4==0).reduce(0, (x,y) -> x+y);
    }

    
    public static int sumSquares_Problem_7_014d9f07_b6d9_4eb9_a50f_214c2489e706(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_01dfd34f_7baa_47fc_9575_c214c655b010(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_206e870d_7dea_4043_9886_b1e0a285a0b7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_ba1524c4_be82_4cd8_bb50_92607f69bd01(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_23fd6998_ae8e_47d5_b6c4_7e8a6255c5c2(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_c3cfd871_2e0e_4ac0_817f_63da42a54513(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_2fc8099c_429a_4682_ada0_ccc17ca42855(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_15091014_7235_4798_83e4_3a32431ef765(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_4c265e4e_8008_43c4_8ba8_7671d8b00b49(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_f3b2b915_8737_4534_9b36_303c9e97da3c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_f8d94d46_23a3_4bf3_959d_831a76bf7232(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_9c9a80dc_4321_41f0_9537_ecbe89fe192d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_02aed84a_4d87_4a53_8668_8a7ee1d03b41(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_a5656e86_f78e_4284_9bfa_e018135ed6f1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b57787ee_d9f7_4b85_8734_3fb62f2615df(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_7791e6dd_472f_4fe0_898e_a383a97d883d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b7106b93_7013_4bd5_8b7a_d73ef24eb25a(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            } else if(i%4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_ad34c6e2_5355_4d46_9cf8_c5b47f3499e3(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_96f003d0_010e_4ea2_9d6b_66a87e24300e(ArrayList<Integer> lst) {
        ArrayList<Integer> list = new ArrayList<Integer>(lst);
        int result = 0;
        for(int index = 0; index < list.size(); index++)
        {
            if(list.get(index) % 3 == 0)
            {
                list.set(index, list.get(index) * list.get(index));
            }
            else if(list.get(index) % 4 == 0)
            {
                list.set(index, list.get(index) * list.get(index) * list.get(index));
            }
            else
            {
                list.set(index, list.get(index));
            }
        }
        for(int num : list)
        {
            result += num;
        }
        return result;
    }

    
    public static int sumSquares_Problem_8_bcb19784_7424_434a_a9f2_f025dfaf8a59(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_5f70af44_0e70_455d_bc3d_23637613b7a9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_9730a340_8a88_4a90_abff_b2ab764783de(ArrayList<Integer> lst) {
        int count = 0;
        int sum = 0;
        
        for (Integer e : lst) {
            if (count % 3 == 0) {
                sum += e * e;
                count++;
            } else if (count % 4 == 0) {
                sum += e * e;
                count++;
            } else {
                count++;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_bac8f173_743f_482c_8f2c_0d6fdf4842cd(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b61a11bd_6b44_41db_a7bc_75ba8f1fa108(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_47349341_ae9d_4c25_9c3a_1b70d8865e30(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_d21ca633_7161_4933_aa17_22a99fd03daf(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_c41dcad2_cd26_4f9b_9f92_414ca01e217f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_6dedb913_4d05_4b8c_9499_254d2408ad58(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0(ArrayList<Integer> lst) {
        // Declare and initialise variables.
        int sum = 0;
        
        // Iterate through the array list entries and perform the required operation.
        for (Integer n : lst) {
            
            // For each entry in the array list calculate the required operation on the value.
            if (n % 3 == 0) {
                sum += n * n;
            } else if (n % 4 == 0) {
                sum += n * n * n;
            } else {
                sum += n;
            }
        }

        // Return the sum.
        return sum;
    }

    
    public static int sumSquares_Problem_1_aa6594ee_007d_4d3c_84d1_09ab0865ce9e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_6ca1758e_936a_485b_87ae_78bc0063b86c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_66f5c450_89ff_4a76_ad2e_851bb3c53389(ArrayList<Integer> lst) {
        int res = 0;
        for (int i = 0; i < lst.size(); i++) {
            int v = lst.get(i);
            if (i % 3 == 0) {
                v = v * v;
            } else if (i % 4 == 0) {
                v = v * v * v;
            }
            res += v;
        }
        return res;
    }

    
    public static int sumSquares_Problem_6_0f7ada62_460a_4eb5_be82_f9797b2d7376(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_78289ac7_dce7_493e_8cad_f265924ce7ba(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_e49c191c_b79b_4e44_a019_326fd28deedd(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0) {
                sum += lst.get(i);
            }
            else if(lst.get(i) % 4 == 0 && lst.get(i) % 3 != 0) {
                sum += lst.get(i);
            }
            else if(lst.get(i) % 3 == 0) {
                sum += lst.get(i);
            }
            else if(lst.get(i) % 4 == 0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_2bfffdc9_606b_4614_bfd1_a279932040b4(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_187fe97e_fa5e_4288_a0bc_c23248e92289(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_362b3e90_20f7_46ef_a9fc_78ad143e39b6(ArrayList<Integer> lst) {
        int sum = 0;
        int squaredSum = 0;

        for (int i = 0; i < lst.size(); i++) {
            int index = lst.indexOf(i);

            if (i % 3 == 0) {
                squaredSum += lst.get(i);
                sum += lst.get(index) * lst.get(index);
            } else if (i % 4 == 0) {
                squaredSum += lst.get(index);
                sum += lst.get(index) * lst.get(index);
            } else {
                squaredSum += lst.get(i);
            }
        }

        return sum + squaredSum;
    }

    
    public static int sumSquares_Problem_6_1bcdc25b_b0d2_4875_8c67_69940deb7de0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_aa045fa2_71bf_4a24_80e2_9b11d545a5d1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_a3f92616_88fe_459a_9939_6a4970de9921(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_a60435d2_fccd_48cc_9ec9_91c71091024c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_ac7e00fa_7433_46cd_8225_2d34ddad062e(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_541fc626_9c91_421b_a614_ae3d2bf1a968(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_2_61d095f9_958e_4d24_8332_6ae9b0ea9c18(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e57af75d_fd21_4cdc_8300_97458ecd57e4(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_175d45ce_21ff_4519_b555_ed3de8e83a15(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_fb8487a0_53ef_489d_ba29_fa94cd3244cc(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_270ad58a_fdc7_45d0_8bc6_3986d18b8029(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_c3437fea_5eb6_4150_b021_6ff4da0e248c(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_fcd612be_b516_4eef_9491_f4768463217f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_6a42c9e2_521e_4267_be4e_4e9ed61a5e3e(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_73d29f43_2147_4d43_83cd_76f89352c931(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_aa20765f_2e2b_4649_8305_eb15d364cc8a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_ea46944d_6e45_47f4_b822_3a386b9c12ff(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_76c1d943_1d4e_4b83_8dee_5c422214af08(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_eda60543_6198_4f22_a387_048d53f1d2f0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_fc90cecc_03d1_468d_816b_2687e4e4040e(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_81c807b0_d9b1_4576_8198_7daa6be373cf(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_966e03bf_1342_4b27_9c3b_6e0df5a94e94(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_c3c00751_2da2_4697_9d8d_9d698fba60d1(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_50adf360_8a8e_4e4f_81a9_5b0f6c46395b(ArrayList<Integer> lst) {
        int sum = 0; 
        for (int l : lst) {
            sum += l; 
            if (l % 3 == 0) { 
                sum += l; 
            } else if (l % 4 == 0) {
                sum += l;
            } 
        }
        return sum; 
    }

    
    public static int sumSquares_Problem_8_0a2c317a_54aa_4680_ac29_b26739bbb890(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_124eb85f_27a2_4e9e_8c80_73229a2a2e12(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_ea685832_8829_471a_9e62_83d698a8e182(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_c1d99363_7ad1_4dee_bef6_efa13bb5eebb(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_b0d3d27d_9d60_43fd_a4b3_aef7f5330bd9(ArrayList<Integer> lst) {
        if (lst.size() == 0)
            return 0; 
        int sum = 0;
        for (int i : lst)
            if (i % 3 == 0 || i % 4 == 0) {
                sum += i;
            }
        return sum;
    }

    
    public static int sumSquares_Problem_2_29a67c4d_d7c0_4c93_9c57_3055255160fc(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_0_6d283a53_81d1_4c98_aa4c_d69ccc4b323a(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_00474971_4a61_4a2a_901a_08b3049b63b8(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_24f76568_6132_4f85_8f6e_4c9170e3d4b5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_781834f1_addb_486b_a2b9_693fcf597709(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int square = lst.get(i);
            if (i % 3 == 0 || i % 4 == 0) {
                sum += square;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_e8f1eada_8b15_4b74_8aa8_f3644aec4c08(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_4a334c54_ffc2_4210_9386_f4ab73b2ebdf(ArrayList<Integer> lst) {
        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_1f332146_8463_43f5_b956_af7cd3ab3039(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e6203384_b4af_46d4_be30_cf95270a51b5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_bfcd2dc1_c93f_41eb_82b3_69ef7536a85a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_10_99bdc146_ce24_4f1e_8986_04633a843a52(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_881d0442_0a4a_436a_af3d_fa6321028b8d(ArrayList<Integer> lst) {

        // Write your code here
        int i = 0;
        int sum = 0;
        while (i < lst.size()) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (lst.get(i) % 3 != 0 && lst.get(i) % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
            i++;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_c6cdde9c_b2a9_4ec5_b713_2ad6ff9fe01d(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            }
            else if((i % 4) == 0) {
                sum += lst.get(i);
            }
            else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_9d8fdebe_0ece_476e_aa90_2ce8240de597(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_10_67c3628d_7bcd_420b_9fe4_5aa509f2dd95(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f2101ffd_0a33_480a_b3bf_5dc19c6a1b1e(ArrayList<Integer> lst) {

        // Write your code here
        for(int i=0;i<lst.size();i++){
            if(i%3==0){
                lst.set(i,lst.get(i)*lst.get(i));
            }
            else if(i%4==0 && i%3!=0){
                lst.set(i,lst.get(i)*lst.get(i)*lst.get(i));
            }
        }
        int sum=0;
        for(int i=0;i<lst.size();i++){
            sum+=lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_2eec0a26_889f_42c8_ab3a_cf614c33eb02(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b489b129_6206_4ee3_9946_4947bb94edcf(ArrayList<Integer> lst) {

        // Write your code here.
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_6_a4b743ba_4455_4182_99aa_858c301d8948(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_f097e0ff_2a8b_4d7b_bae2_a9ce2395e4da(ArrayList<Integer> lst) {
        int total = 0;
        for (int i = 0; i < lst.size(); i++) {
            int elem = lst.get(i);
            if (elem % 3 == 0) {
                total = total + elem * elem;
            } else if (elem % 4 == 0) {
                total = total + elem * elem;
            } else {
                total = total + elem;
            }
        }
        return total;
    }

    
    public static int sumSquares_Problem_7_e13669a3_9eec_4192_8a62_cf46fba4d24f(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_3_6e9ed56a_6232_4e38_9ea2_d001c01ac30a(ArrayList<Integer> lst) {
        int size = lst.size();
        int sum = 0;
        for (int i = 0; i <= size ; i++) {
            if (lst.get(i) % (4 * 3) != 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * (lst.get(i) / 4);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b9fdd2ae_64cd_4d3b_9376_c008a0497d1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_8c8bbcb0_8a25_4c4b_8a34_b3d66c57b814(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_884d1a62_c544_45ba_bd51_dbbedb71eeba(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_1d24e5ef_01f1_4908_aeba_28f53e311e7b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_7a07f165_5a82_4f62_a545_c22243d40c5c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_1a892c90_9a35_498b_830a_87fe35ae87e9(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_014d9f07_b6d9_4eb9_a50f_214c2489e706(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_7_d0e4caff_a013_4272_841e_97c3f7a58e74(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_529f7d15_687b_4434_beab_b97d9962ab89(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_4a370110_9a71_48c3_baa4_db1a048dd0a3(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_4708ab0a_abb5_42c2_b7d8_c38ceb2b05a1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_ea369d9e_a673_403c_b2dc_94b9766b10b8(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i%3)==0) {
                sum = sum + lst.get(i);
            } else if((i%4)==0) {
                sum = sum + lst.get(i) * lst.get(i);
            } else if((i%4)==1 && (i%3)==0) {
                sum = sum + lst.get(i) * lst.get(i) * lst.get(i);
            } else if((i%4)==1 && (i%3)==1) {
                sum = sum + lst.get(i) * lst.get(i) * lst.get(i) * lst.get(i);
            } else if((i%4)==0 && (i%3)==0) {
                sum = sum + lst.get(i) * lst.get(i) * lst.get(i) * lst.get(i) * lst.get(i);
            } else if((i%4)==0 && (i%3)==1) {
                sum = sum + lst.get(i) * lst.get(i) * lst.get(i) * lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_28c7ebdf_3efa_437d_a7fe_ab4bcbbd9109(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_451e9b6b_0dc9_4613_99f8_feeeac29c616(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_b00a68f3_3b66_4be3_ace8_321eef154320(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_663f7217_e75d_417a_bfab_c204eccd235e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_cb180842_91b5_448c_aa55_30be8163ffe1(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f8d94d46_23a3_4bf3_959d_831a76bf7232(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_4c33d300_cdbd_4962_9916_7b755758f1e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_c5892d1d_6f6d_4a74_865c_537e06cc44a8(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_26896a9e_3d98_449f_bfa7_848f165a52f0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_478addb9_1928_479a_9391_e707350c9f84(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_3fca4073_e4c8_4cc9_ab71_ff9444468009(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_97c1da57_64a0_442b_82db_f57d5728b064(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_beda2c5c_bbe8_4917_9274_7d2ea50e9131(ArrayList<Integer> lst) {

        // TODO: Implement this function
        return 0;
    }

    
    public static int sumSquares_Problem_9_190af677_cafd_4465_9120_aac6a0707bc2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_fa32a556_d25e_4099_b243_0a9012356f0b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_451e9b6b_0dc9_4613_99f8_feeeac29c616(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_f63d409d_516f_4bdb_8f21_a636a37dc729(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_3fe26bee_0a8e_452f_aa28_cd9c3f62216b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_b9fdd2ae_64cd_4d3b_9376_c008a0497d1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_104360bd_8769_4322_ae39_88256d438e1d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_0_99bdc146_ce24_4f1e_8986_04633a843a52(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_151e4d09_2f26_45a4_82ef_11a0003a1251(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            }
            else if((i%4)==0) {
                sum += i*i*i;
            }
            else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_78b2111c_2271_4389_991a_c8c38e277a3b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_ba6d21fc_8021_4a22_b214_83ace49fea9f(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_4602b924_803d_415a_bdfe_0de0206a7125(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_161c99e1_b1c0_43cb_945c_46d7b952cc42(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_0_966e529a_30e9_457d_8abf_901a6bfab7fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b11f820b_abf0_4ad2_86ec_7fde7a9030be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_60547a3b_f2f3_4291_8091_6a9d7c98ed6f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_ae6bbb87_9d4a_4634_9a64_2409e998ff9e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_7_8be54682_410f_4ff7_a000_0cd61635b763(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_558e2004_f9c3_415a_8c13_5dee91265aaa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_161c99e1_b1c0_43cb_945c_46d7b952cc42(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_10_31ed5b8c_4003_456b_803e_7b8f9d2689a1(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_30bfe9d7_d93c_475e_af85_27629e4aed01(ArrayList<Integer> lst) {
        int sum = 0;
        for (int num : lst) {
            sum += (num & 3L) * num * num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_c3cfd871_2e0e_4ac0_817f_63da42a54513(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_5fcbf3db_a994_4263_b99d_4f3608c69312(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_96b0b1e5_accf_4f55_a0de_1b2a0f25c28f(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        int sumOfCubes = 0;
        int sumOfCubesNotMultipleOf3 = 0;
        int sumOfCubesNotMultipleOf4 = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sumOfSquares += i;
            }
            else if((i%4)==0) {
                sumOfCubes += i;
            }
            else {
                sumOfCubesNotMultipleOf3 += i;
            }
            if((i%4)!=0 && (i%3)!=0) {
                sumOfCubesNotMultipleOf4 += i;
            }
        }
        sumOfSquares = sumOfSquares * sumOfSquares;
        sumOfCubes = sumOfCubes * sumOfCubes;
        sumOfCubesNotMultipleOf3 = sumOfCubesNotMultipleOf3 * sumOfCubesNotMultipleOf3;
        sumOfCubesNotMultipleOf4 = sumOfCubesNotMultipleOf4 * sumOfCubesNotMultipleOf4;
        sum = sumOfSquares + sumOfCubes + sumOfCubesNotMultipleOf3 + sumOfCubesNotMultipleOf4;
        return sum;
    }

    
    public static int sumSquares_Problem_3_28c21861_31d0_48a8_9390_47fae3634c88(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_63c96812_fbc7_4e68_89b0_1251deb07b60(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_86d2b02b_47fc_48de_acbb_cedc9ce17f95(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_3_29a67c4d_d7c0_4c93_9c57_3055255160fc(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_10_b7846d10_0900_4f57_91e4_3572dc6b151b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_3e514e14_b387_48ab_b579_9fc427f2a0c4(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_86e78aac_1b6c_4ba0_8581_ac52366e881c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_738dafe9_680f_4f63_89d2_62d53efa31ec(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_15577870_b90f_4811_8690_5bd1e99c2fb6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_78999670_5319_4069_af03_490b0f65da1f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_47855f1d_5dea_4a3b_a158_50a18a59fdff(ArrayList<Integer> lst) {
        int sum = 0;
        for(int e : lst) {
            if(e % 3 == 0 && e % 4 == 0) {
                // do nothing
            } else if(e % 3 == 0) {
                e = e * e;
            } else if(e % 4 == 0) {
                e = e * e * e;
            } else {
                e = e * e * e * e;
            }
            sum += e;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_c2591a9b_4372_46ab_8dd2_56240dea85a8(ArrayList<Integer> lst) {
        // "
        // This function will take a list of integers. For all entries in the list, the function shall square the integer entry if its index is a 
        // multiple of 3 and will cube the integer entry if its index is a multiple of 4 and not a multiple of 3. The function will not 
        // change the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries. 
        // Examples:
        // sumSquares_Problem_9_c2591a9b_4372_46ab_8dd2_56240dea85a8([1,2,3,4,5,6,7,8,9,10]) -> 1 + 4 + 9 + 8 + 27 + 64 + 125 + 216 + 343 + 512 = 1225
        // sumSquares_Problem_9_c2591a9b_4372_46ab_8dd2_56240dea85a8([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]) -> 1 + 4 + 9 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 = 14198
        // "
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_d9c8ab28_a340_4269_b355_9e9668d286c6(ArrayList<Integer> lst) {

        // Write your code here
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_07fd84d4_ce27_46f2_a33f_85663ced0b68(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_ba21e9bd_459e_4afc_af0d_8651e8612e5a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_240b8c2c_348c_4acc_abb0_2b2910658e5f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int curr = lst.get(i);
            if (i % 3 == 0) {
                curr = curr * curr;
            } else if (i % 4 == 0) {
                curr = curr * curr * curr;
            }
            sum += curr;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_244c1f52_8007_41a5_af85_4d99e55da7ed(ArrayList<Integer> lst) {
        int sum = 0;
        for(int e : lst) {
            if(e % 3 == 0 || e % 4 == 0 ) {
                sum += e;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_15091014_7235_4798_83e4_3a32431ef765(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_fc90f597_eba6_4e12_bc7c_2db88939ecea(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_d30bb3ef_1754_459c_b260_c11986986123(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_51da9846_b0eb_44c7_9601_b63fef168983(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_10_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_ab47fa26_c4c0_4730_8c15_82015cd0c8b9(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_881d0442_0a4a_436a_af3d_fa6321028b8d(ArrayList<Integer> lst) {

        // Write your code here
        int i = 0;
        int sum = 0;
        while (i < lst.size()) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (lst.get(i) % 3 != 0 && lst.get(i) % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
            i++;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_45c7e558_4b95_40d3_858f_387d866f7db9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_a5efc2a5_963f_41c6_ae52_96bdbfce83b5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_7437e832_c555_4f9b_aad4_382ba4d01cae(ArrayList<Integer> lst) {
        int sum = 0;
        ArrayList newList = new ArrayList();

        for(int i: lst){
            if(i % 3 == 0 || i % 4 == 0){
                newList.add(i);
            }else{
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_eff771cc_98b5_4441_a042_a6737f65bad4(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_35db6182_f047_4f6f_b78d_46de0a404791(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_fed2da56_1657_427e_83fe_de1f9dc12d64(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_86e78aac_1b6c_4ba0_8581_ac52366e881c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_6dedb913_4d05_4b8c_9499_254d2408ad58(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_e9b7fe5b_bc26_4fbe_89c8_603c3c2469ac(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_552c0649_9421_4ba1_bb4f_e3cb94528545(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_05d75069_daad_43f2_a579_ad7054a6ec8e(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_6c5e5ebe_2f50_4c1c_969a_3ffcd2614646(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_5be0a2de_b5f5_4f86_8eb4_734dc89c2e89(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            } else if((i%4)==0) {
                sum+=i*i*i;
            } else {
                sum+=i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_977a3553_4a3b_4fe8_8f9a_5103c5cdcf74(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_bcfd23e9_283a_4782_87f9_93e6de85202e(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_dbc7a47e_f2b5_47e1_8825_ceb3667786ca(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_16a19495_7462_4362_b04f_fc9bde746fb6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_5f326109_68b6_437f_a0f1_6f39dc122590(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_4e2e29ea_127f_4e95_818a_cb281a3c2c33(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_0_a26937c3_969d_4e43_91f0_c5d268ab24fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_4afbdf3c_60d0_4b4e_a21a_8bd23d4dd8e5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_eb5b91f3_c5b1_459e_b83d_2f3a849386c1(ArrayList<Integer> lst) {
        int sum = 0; 
        for (int i = 0; i < lst.size(); i++) {
            int a = lst.get(i);
            if (i%3 == 0) {
                a *= a;
            }
            else if (i%4 == 0) {
                a *= a*a;
            }
            else {
                sum += a;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_afd798b0_4de5_476c_83f7_a9a1de7848d9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_899fb681_838a_4fee_aaeb_8104224668f9(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> {
            if (lst.indexOf(x) % 3 == 0) {
                return x * x;
            } else if (lst.indexOf(x) % 4 == 0 && lst.indexOf(x) % 3 != 0) {
                return x * x * x;
            } else {
                return x;
            }
        }).sum();
    }

    
    public static int sumSquares_Problem_5_ad1a2fe5_3c2c_44a6_be96_25c59d23d65a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_3206730c_2696_45d5_b3b7_1157a01d385f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_5_04275a43_df19_4ed4_b25c_ad555d7ac2be(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_e5ca1476_7c19_4ad9_a8f3_32c606e83846(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_b0b584fc_3829_4045_a1d7_e946ee10271b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_50863ff2_4de1_434e_8a8e_bcfcaa1a992c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_478addb9_1928_479a_9391_e707350c9f84(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_71f1bd32_20f0_4755_bbee_d231de065521(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_71d4b5fd_75fc_429e_be2e_846e2234baee(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            } else if(i%4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_d0ba9659_5195_4248_8b0c_2e05248b1a20(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_4ec84300_c8b1_4e2d_a87b_f5f06e17343f(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_b61a11bd_6b44_41db_a7bc_75ba8f1fa108(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_5_1521b40a_dfeb_447b_8658_35e2b725ec25(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_576e8549_d8b5_4452_b241_080adcf4f5c7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry *= entry;
                sum += entry;
            } else if (i % 4 == 0) {
                entry *= entry;
                sum += entry;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_12c01e48_df87_4a12_89e1_ad88fa7a8298(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_97ee90af_137f_4d90_9d00_d63fcd4d9191(ArrayList<Integer> lst) {
        int sum = 0;
        for (int e : lst) {
            if (e % 3 == 0 || e % 4 == 0) {
                sum += e;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_c5275a4c_542a_4ea9_a02e_07e2c2c013f1(ArrayList<Integer> lst) {

        // TODO: Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_c3cfd871_2e0e_4ac0_817f_63da42a54513(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_5162c9c1_0baf_4017_9311_b188cf1db26c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_8d27fa1e_f3e9_4056_8724_bf79358dc8a7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_09a33ed1_9ed2_4a80_8c0b_30e643495f12(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_eea54644_d489_47cd_bffa_7827ff58ebf2(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_2330fd49_5d10_4b20_9b18_e3b8d003653d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_ec63832f_4d1b_439b_a6d2_7c23682e3dd2(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_1ff409df_131f_4221_8e7b_9f0061046357(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_c87cb24f_c2fc_4ee7_a118_1748de79114c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_34b88eb4_c2f5_49f9_a289_39d3d65f0dfa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_0f7ada62_460a_4eb5_be82_f9797b2d7376(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_70891e7e_d467_4142_b9bd_b8714d47b85d(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_a6982321_bf28_49c9_a9f0_055808fc416f(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_84035bbc_badd_4646_a850_a1310fc3ce67(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_7b5ab684_000e_4905_972a_f90accdc1f10(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e2211059_43d1_4b9f_b4f1_30f15463c1dc(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer num : lst) {
            if(num % 3 == 0)
                num = num * num;
            else if(num % 4 == 0)
                num = num * num * num;
            else
                sum = sum + num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_60547a3b_f2f3_4291_8091_6a9d7c98ed6f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_0477e1e5_846a_4359_a04a_0c6d050adc54(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_6ca1758e_936a_485b_87ae_78bc0063b86c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_0acc6cc9_5875_44d3_bd48_b24bb91caf4e(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).sum();
    }

    
    public static int sumSquares_Problem_6_b1ca4e97_1d92_4c0d_b173_cdd438e156e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_8d2a7897_30cd_42b7_af8b_daee576d56f0(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_3bca5c0e_a9ac_4337_b861_17bcb8aa9c7c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i*i;
            } else if (i % 4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_87fb2c6a_34ca_4714_9c71_5f4dae18e887(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
                sumOfSquares += lst.get(i) * lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
                sumOfSquares += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sumOfSquares;
    }

    
    public static int sumSquares_Problem_4_161c99e1_b1c0_43cb_945c_46d7b952cc42(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_4_ca21e09e_5f9e_4a91_8d81_0c16e18b0676(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_96476ed6_e033_4e23_8251_0bfb2ef28e80(ArrayList<Integer> lst) {
        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            int x = lst.get(i);
            if(x % 3 == 0 && x % 4 != 0){
                x = (x*x) * x;
            }
            else if(x % 4 == 0){
                x = (x*x) * x;
            }
            sum += x;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_290defd6_0556_42fc_b4bf_6cc8f54298c9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_28c7ebdf_3efa_437d_a7fe_ab4bcbbd9109(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_9d8fdebe_0ece_476e_aa90_2ce8240de597(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_ee3e2014_ab74_42e8_a955_29cb1434bb85(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_21c5ab9d_1a4b_49fd_bc45_f93e08c14318(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_030f0292_f20d_4b2f_819b_d0c3fee3606e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_c26c782b_32df_4573_b335_1a0ea181caf1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_1d24e5ef_01f1_4908_aeba_28f53e311e7b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_16a19495_7462_4362_b04f_fc9bde746fb6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_7093b440_805b_4b47_8a22_0d471bfe93e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_bcd9aae5_e3f9_4475_954c_7379a20e9f00(ArrayList<Integer> lst) {
        int sum = 0;
        for(int l : lst) {
            if(l % 3 == 0) {
                sum += l * l;
            } else if(l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_ab386b80_099c_41b3_89c9_abff850c78d2(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_7ea156d3_fef0_47ce_a86e_cf5856d56622(ArrayList<Integer> lst) {

        // your code goes here
        return 0;
    }

    
    public static int sumSquares_Problem_0_0ae0d2d9_c5e6_41ad_99e3_dce92efa88e7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_99913581_d158_4a35_92ec_83b32401e1d8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_60b55890_5333_4845_8b63_abc51c86ae13(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            } else if((i%4)==0) {
                sum+=i*i*i;
            } else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_fbdd484f_6607_4d37_8f9d_c39dc9385934(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_24a0c794_1234_4872_83ab_d206b5062f60(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b6523dd2_c1fc_4c15_aa02_42ad73577a8f(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_59d212a1_07d3_4c4b_9dd9_2ab6494178b1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_e1cb8491_9376_4d9a_b29b_01611ac79aa4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_2ad17ca3_d8ad_453b_abad_b50430af3faf(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum += i*i;
            } else if(i%4==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_17c68e06_ad0e_437e_9fae_ebfae3252026(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ec9f71a2_4f52_4194_9df7_1704f84d7a89(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_10_285d98a4_e9f7_46b2_a58c_6634f468a187(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_aa2d774a_aa1d_4f90_a1f6_68cedc3f91c2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_49dc78df_0d0a_4c6d_9561_dbfa2725af81(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream()
                .filter(x -> x % 3 == 0 || x % 4 == 0)
                .map(x -> x % 3 == 0 ? x * x : x * x * x)
                .reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_7_845924e6_35e8_4c17_a933_7c35690dd756(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_783891ee_eb84_464a_abb0_b42451fc07e0(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_8f7cfef4_689f_4dc3_a938_09457e58b00d(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_240b8c2c_348c_4acc_abb0_2b2910658e5f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int curr = lst.get(i);
            if (i % 3 == 0) {
                curr = curr * curr;
            } else if (i % 4 == 0) {
                curr = curr * curr * curr;
            }
            sum += curr;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_d8754c85_70a2_4e79_8131_be27c5e3d315(ArrayList<Integer> lst) {
        int sum = 0;
        int n = lst.size();
        int total = 0;
        for(int i=0; i<n; i++) {
            int square = lst.get(i);
            if((i+1) % 3 == 0) {
                square *= square;
                sum += square;
            } else if((i+1) % 4 == 0) {
                square *= square;
                sum += square;
            } else {
                total += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ae62a90b_2200_4c4d_8b4f_6903952cb1ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_1c543438_11a6_48ef_a66d_e41cb6cf305e(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_5366a2bb_e1a7_44a1_a96e_8ed13a7e4f04(ArrayList<Integer> lst) {
        ArrayList<Integer> evenLst = new ArrayList<Integer>();
        ArrayList<Integer> unevenLst = new ArrayList<Integer>();
        for (int i : lst) {
            if (i % 3 == 0) {
                evenLst.add(i);
            } else {
                unevenLst.add(i);
            }
        }
        return evenLst.stream().mapToInteger(l -> l * l).sum();
    }

    
    public static int sumSquares_Problem_2_57c49baa_5c8d_46cf_9b0b_0b397c934e2a(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_19f18ba3_ce3d_4c1f_bbfd_d3c9511e5dfa(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_e97a9956_ce99_4157_a710_421a85defc7e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_78b3576a_5b4c_424d_a1c7_75304b4af075(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f77c9afb_51a7_4f90_9fab_e9a871330a36(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_01dfd34f_7baa_47fc_9575_c214c655b010(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_cc333fe9_1d7a_4367_a6b6_b30fdd224ccd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_420fa16b_35b2_4b1e_9984_b4fd226171ad(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_235f35a0_4b33_4687_bc2f_f5662c2e7fb8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_ac0a4bf0_05d1_421d_a9fa_34788c642591(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_24f76568_6132_4f85_8f6e_4c9170e3d4b5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_51c1eca3_76e6_4443_941b_6468ac7631ff(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i%3 == 0 && i%4 == 0) {
                sum += i;
            }
            else if (i%3 == 0) {
                sum += i * i;
            }
            else if (i%4 == 0) {
                sum += i * i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_7e862c19_9e29_4a33_9f3a_168bb9d7c384(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_7528433a_9df1_42f4_8893_1468b88288c6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_a6fe331e_c151_440b_9af1_269c5772617a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_fce8010d_6643_41e7_95d0_7a4ed6f8209d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_79efaffe_8a10_4af3_91d7_857873508885(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_72049a7d_821b_4dca_9b1a_3cf104a4b67c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_c4bce134_f013_47e9_b149_831eda6ca5f6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_fa9cc615_0099_435f_8123_e92d33aff570(ArrayList<Integer> lst) {

        // Your code goes here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_86e78aac_1b6c_4ba0_8581_ac52366e881c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_2eec0a26_889f_42c8_ab3a_cf614c33eb02(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b66578ee_7aad_4e2a_9686_f895890ee894(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i%3)==0) {
                sum += lst.get(i);
            }
            if((i%4)==0) {
                sum += lst.get(i);
            }
            if((i%3)==0 && (i%4)==0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_7aa3e9c6_7f2f_455c_811d_b6b3419af771(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b024984c_0eef_4caa_8a11_ec361a6790ab(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); ++i) {
            if (lst.get(i) % 3 == 0) {
                sum += lst.get(i);
            } else { // else if (lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) / 4; 
            }
        }
        return sum;
    }
    public static void main(String[] args) {
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(1, 2, 3)))) == (6));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(1, 4, 9)))) == (14));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList()))) == (0));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(1, 1, 1, 1, 1, 1, 1, 1, 1)))) == (9));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, -1, -1, -1, -1, -1, -1, -1, -1)))) == (-3));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(0)))) == (0));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, -5, 2, -1, -5)))) == (-126));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-56, -99, 1, 0, -2)))) == (3030));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, 0, 0, 0, 0, 0, 0, 0, -1)))) == (0));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37)))) == (-14196));
    assert(sumSquares_Problem_9_1d69d576_60fa_4171_bbf8_3755c9778878((new ArrayList<Integer>(Arrays.asList(-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10)))) == (-1448));
    }

}

    
    public static int sumSquares_Problem_5_f411a10c_406f_4eeb_a9e3_7f577505ef46(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0L, Integer::sum);
    }

    
    public static int sumSquares_Problem_3_9a8d10db_1024_43a2_979b_e19e33bd5056(ArrayList<Integer> lst) {
        int sum = 0;
        int sq;
        int index = 0;
        int lastElement = lst.get(lst.size() - 1);
        // iterate over list
        for (int i = 0; i < lst.size(); i++) {
            sq = lst.get(i);
            if (i % 3 == 0) {
                sq *= sq;
                sum += sq;
            }
            if (i % 4 == 0) {
                sq *= sq;
                sum += sq;
            }
            else {
                sum += sq;
            }
        }
        System.out.println(sum);
        return sum;
    }

    
    public static int sumSquares_Problem_4_f933ae39_299b_4f3f_889a_f8edebc1e22b(ArrayList<Integer> lst) {
        if (lst.size() == 0) {
            return 0;
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_3fe26bee_0a8e_452f_aa28_cd9c3f62216b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_f3b2b915_8737_4534_9b36_303c9e97da3c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_1508a6cd_67ca_443c_b823_341b6cfe0d9f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_ea0422ab_0dfe_44d5_9fd1_81c1d4f5feb1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_aada740f_7e3a_4788_b0bb_191aedd8bb7d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_b04aa9d1_4e58_4e66_bf8f_cf3a8a1521d6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f097e0ff_2a8b_4d7b_bae2_a9ce2395e4da(ArrayList<Integer> lst) {
        int total = 0;
        for (int i = 0; i < lst.size(); i++) {
            int elem = lst.get(i);
            if (elem % 3 == 0) {
                total = total + elem * elem;
            } else if (elem % 4 == 0) {
                total = total + elem * elem;
            } else {
                total = total + elem;
            }
        }
        return total;
    }

    
    public static int sumSquares_Problem_2_2fc8099c_429a_4682_ada0_ccc17ca42855(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_b9e679b5_65cf_4c7a_9b9b_ef65ff5a1b0f(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_89b25cbf_115c_4ac3_80de_94fb5b08dc53(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b489b129_6206_4ee3_9946_4947bb94edcf(ArrayList<Integer> lst) {

        // Write your code here.
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_3_fd366014_efe8_48d3_b15f_409e0c96b529(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_bcd9aae5_e3f9_4475_954c_7379a20e9f00(ArrayList<Integer> lst) {
        int sum = 0;
        for(int l : lst) {
            if(l % 3 == 0) {
                sum += l * l;
            } else if(l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_04447889_0e0d_4932_8122_7062b0b97fb6(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i: lst) {
            sum += i%3 != 0 ? i * i : i%4 != 0 ? i * i * i : i * i * i * i;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_63c96812_fbc7_4e68_89b0_1251deb07b60(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_59d212a1_07d3_4c4b_9dd9_2ab6494178b1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_2ab5514d_adb5_488c_a3b4_be095b8eeccc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_02aed84a_4d87_4a53_8668_8a7ee1d03b41(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_8e8f136c_369a_4118_842e_e4d3b80556d4(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3c818ff9_63a4_4d1d_8625_b24e5fc79de3(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3fe26bee_0a8e_452f_aa28_cd9c3f62216b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_7b5ab684_000e_4905_972a_f90accdc1f10(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_2c220259_d453_4bba_9c11_0e2827b5e355(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_8e98956d_42df_43b8_867f_e3b0d2cd356c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_df836a52_8e5e_4964_99af_6da837d35e47(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_c0920d13_a2c9_471c_b7ce_6827a5936446(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_7_1ee1c689_cc08_4c35_b46d_12e7f6d7ca19(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_dbc4836f_71de_4ae4_83f0_870a7257f7b6(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_84e35fcd_3beb_4251_a888_7e8564610c69(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_f8e90eac_60d2_403d_8ab2_8c7c70a01de7(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_fc2f9571_79c4_448a_be55_7dac91da8ea8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_e8dcffcb_fd0c_410c_be38_c3eeb1d4cf94(ArrayList<Integer> lst) {
        int sum = 0;
        
        for(int i = 0; i < lst.size(); i++) {
            if(lst.size() % 3 == 0 & lst.size() % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        
        return sum;
    }

    
    public static int sumSquares_Problem_1_96476ed6_e033_4e23_8251_0bfb2ef28e80(ArrayList<Integer> lst) {
        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            int x = lst.get(i);
            if(x % 3 == 0 && x % 4 != 0){
                x = (x*x) * x;
            }
            else if(x % 4 == 0){
                x = (x*x) * x;
            }
            sum += x;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_43ca981d_ec81_413c_8360_980ecb640ed5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_0104c9df_377d_4aa3_b6cf_39905d261c4a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_6ca1758e_936a_485b_87ae_78bc0063b86c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_d8fe484b_7325_4bec_9d32_a31ed6afe790(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_7_2a4aa73b_31ad_4698_b480_a31d1d0a9b60(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_bf9a39d6_42e7_4198_baec_7fb827e74e0a(ArrayList<Integer> lst) {
        int result = 0;
        boolean isMultipleOf3 = lst.get(0) % 3 == 0;
        boolean isMultipleOf4 = lst.get(0) % 4 == 0;
        for (int i = 0; i < lst.size(); i++) {
            if (isMultipleOf3 && i % 3 == 0) {
                result += lst.get(i) * lst.get(i) / 3;
            } else if (isMultipleOf4 && i % 4 == 0) {
                result += lst.get(i) * lst.get(i) / 4;
            } else {
                result += lst.get(i);
            }
        }
        return result;
    }

    
    public static int sumSquares_Problem_3_c8db7701_a480_430f_a0bf_434a1680aaba(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_555aa5d9_d93d_4313_a133_76a92cbfcc18(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_259a0bc3_b417_4143_b4ae_db5ec8b63c78(ArrayList<Integer> lst) {
        if (lst == null) {
            return 0;
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b5788d38_b233_4160_ac90_02872ee1cf55(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_f374d263_8d5a_493a_b263_51e2c41d3b00(ArrayList<Integer> lst) {

        // Write your code here
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_53a319a2_ba42_42b6_9f45_0d669b536029(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (lst.get(i) % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            } else {
                lst.set(i, lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_a9085423_ebe6_45bb_bfeb_c6e319da3c5f(ArrayList<Integer> lst) {
        // Write your code here.
        int ret = 0;
        for(int i=0;i<lst.size();i++) {
            if(lst.get(i) % 3 == 0)
                ret += lst.get(i);
            else if(lst.get(i) % 4 == 0)
                ret += lst.get(i);
            else {
                if(lst.get(i) % 3 == 1)
                    ret += lst.get(i)*lst.get(i)*lst.get(i);
                else if(lst.get(i) % 4 == 1)
                    ret += lst.get(i)*lst.get(i)*lst.get(i);
                else
                    ret += lst.get(i)*lst.get(i);
            }
        }
        return ret;
    }

    
    public static int sumSquares_Problem_9_3fe26bee_0a8e_452f_aa28_cd9c3f62216b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_3a14a817_5141_439c_9b6c_262521835e8d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_be640c64_5f0b_4db3_9088_67f0b274a33f(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        boolean isMultipleOfThree = False;
        boolean isMultipleOfFour = False;

        for(int entry : lst) {
            if (entry % 3 == 0) {
                isMultipleOfThree = True;
            } else if (entry % 4 == 0) {
                isMultipleOfFour = True;
            }
            if (isMultipleOfThree && isMultipleOfFour) {
                sum += (entry * entry);
            } else if (isMultipleOfFour) {
                sum += (entry * entry);
            } else if (isMultipleOfThree) {
                sum += (entry * entry);
            } else {
                sum += entry;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_b00a68f3_3b66_4be3_ace8_321eef154320(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_1_692bcc92_5697_49a5_8075_744188d2bf67(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_8f3ca4b3_c07b_45c1_9be6_56c6e89ac623(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_c5d86865_e0f2_43bd_a160_35132eb25260(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x*x).filter(x -> x%3==0 || x%4==0).reduce(0, (x,y) -> x+y);
    }

    
    public static int sumSquares_Problem_2_9640fc0e_4b5d_44c4_9dcd_40a96864b95b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_fea391b4_5501_45b7_b74e_0e2c0fb85da2(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_8cb68017_3b96_47fa_aaeb_11b221165ec5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_44553a22_d899_4606_ab8d_36f649952245(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_3c11d963_6ea2_48f3_8d82_e4d79b1ac5f5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_b8d3cb81_6565_4714_a091_a0a34908973c(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_6_d9f4dc5b_6b28_42c8_9a86_63718eaaa504(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_9_e9b26a14_c1d4_496c_8733_be4555e77294(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_e1f72e18_68df_459d_841c_7d83def32fcd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_59e2c46d_45e3_4daa_a07a_a7034bed8bce(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_555aa5d9_d93d_4313_a133_76a92cbfcc18(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_41ba4916_8cbb_44fa_9827_3dae8de0baca(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_884d1a62_c544_45ba_bd51_dbbedb71eeba(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_76ccea4f_882a_45ce_aae1_52e9bb680b20(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_bd95ae7a_d3d8_4355_a048_4cc2412bca66(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_2c66fa3c_4f6b_41ff_b081_873217edc19d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_10_10a54894_d120_4410_8bfa_f60de69384af(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_58e2277d_e8c9_452d_bf3f_ca380e23cba6(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_9_78cfffea_8010_4a4f_8569_be841b0d99e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_190af677_cafd_4465_9120_aac6a0707bc2(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_e6144540_b1a9_4c63_a2fe_933e40d4ee96(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_e7a5848f_5257_47ea_aee6_af2e4966f4c0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_8c973c8b_9e5c_4dc0_a72c_b25747f83287(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if ((i % 3 == 0) && (i % 4 == 0)) {
                sum += i;
            } else {
                sum += i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_4f006df3_1986_4ab2_a21f_5eb4eef11551(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(e -> (e * e)).sum();
    }

    
    public static int sumSquares_Problem_6_d2698ee2_438e_4e72_a50a_afc7dc65ec40(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_cc333fe9_1d7a_4367_a6b6_b30fdd224ccd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_5_217d3f55_a499_4a86_b017_255814d2bd6e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_cd695e31_c50c_40c9_ab0b_6673c1025c69(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_acad1ec2_69e2_4b92_a327_0aa4b5380223(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0){
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_240b8c2c_348c_4acc_abb0_2b2910658e5f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int curr = lst.get(i);
            if (i % 3 == 0) {
                curr = curr * curr;
            } else if (i % 4 == 0) {
                curr = curr * curr * curr;
            }
            sum += curr;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_2bd01f7f_0632_4818_aa79_8de61c7b4e0d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_72049a7d_821b_4dca_9b1a_3cf104a4b67c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_04cde6b9_470e_4bf6_b5cd_e82209fb5638(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_e1abff06_6c87_4c65_a3ce_b5206a978eae(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_f40ec618_6619_4657_bf10_8eaf23f4ad9b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_07199e48_ac43_4129_8fc1_6bad39151a44(ArrayList<Integer> lst) {

        // YOUR CODE HERE
        return 0;
    }

    
    public static int sumSquares_Problem_1_f9401dc2_92a9_4bb5_a251_038cabd741fd(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i%3 == 0 && i%4 == 0 && i%5 == 0) {
                sum += i;
            } else if (i%3 == 0) {
                sum += i*i;
            } else if (i%4 == 0) {
                sum += i*i*i;
            } else if (i%5 == 0) {
                sum += i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_4ea73afa_216f_43a6_b4a8_5c9e25265273(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_1d658de9_31c8_4f00_8862_d4297229d3cf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_31d29684_6728_45c2_8383_f046fc7646ab(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_6ac7e455_3d85_47a7_8a2b_dd6d7eb43c03(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_c1eef9aa_4da3_4719_b679_04537290a3fe(ArrayList<Integer> lst) {
        if (lst.size() == 0) return 0;
        int sum = 0;
        for (int n : lst) sum += n * n * n;
        return sum;
    }

    
    public static int sumSquares_Problem_2_ad461f13_726d_4c5d_9c86_df85fe03b77c(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else if((i % 4) == 0) {
                sum += i;
                sumOfSquares += i * i;
            } else {
                sum += i;
            }
        }
        return sumOfSquares;
    }

    
    public static int sumSquares_Problem_10_b6523dd2_c1fc_4c15_aa02_42ad73577a8f(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_98fd3816_e58c_4911_ab82_6325e9f72e87(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_d6b5a5de_fe94_442c_a425_c15a7ca9a25a(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_05d75069_daad_43f2_a579_ad7054a6ec8e(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_67f9ab24_e75d_4003_92cb_b4436a8cd39d(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i * i;
            } else if(i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_7d1be315_9a18_46aa_94ef_7b3fff43e696(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_7_b5788d38_b233_4160_ac90_02872ee1cf55(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_4f31dbc3_8d16_4644_9032_3e2ef1850573(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_beda2c5c_bbe8_4917_9274_7d2ea50e9131(ArrayList<Integer> lst) {

        // TODO: Implement this function
        return 0;
    }

    
    public static int sumSquares_Problem_1_621477ba_4954_4cd3_9812_cbd314708938(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_6d283a53_81d1_4c98_aa4c_d69ccc4b323a(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_bd0cc2e6_e6ea_4cfd_9bed_646c12635946(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e9cda3a9_39c8_4533_8362_eba65aefcf8f(ArrayList<Integer> lst) {

        // TODO: Implement this function
        return 0;
    }

    
    public static int sumSquares_Problem_4_8afa7986_cd04_4df0_a455_273ed556cf5b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_5f4fba9c_f6ea_4b11_85d4_657e7e4f69ce(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_ffeb5c28_74df_4d29_a614_ef237dd73aa0(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_42af3c73_1d6a_4808_aee4_a0025c3deac7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_2c2fd39c_2181_4ab6_8920_01c78482536c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_1d658de9_31c8_4f00_8862_d4297229d3cf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_d35a4a83_3387_4691_a6be_46cacdbf95eb(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_8f6bc875_ca01_4d22_947f_f4b4b12a9a12(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_9066d55a_744a_4db9_ac03_785508cabbee(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_fff880f2_d778_48ad_b7cb_16ce0573e33d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_0ad41aa7_c2a0_4089_9048_500d346fecee(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_82930748_98e2_467d_95d2_ae50556d9bd8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_e1a8c7c4_11ec_483c_8a39_c384bf07bffc(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((lst.size() % 3) == 0) {
                sum += lst.get(i);
            } else if((lst.size() % 4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_8013f572_6b2b_4aa7_89db_fb9d2ef2a052(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0){
                sum += lst.get(i);
            }
            else if(lst.get(i) % 3 == 0){
                sum *= lst.get(i);
            }
            else if(lst.get(i) % 4 != 0){
                sum *= lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_3c9e4243_900b_41a9_be9e_4d90988988fc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_c82fcf6b_2a8f_4d7d_8172_658a199ab5a6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_01b7e467_4c11_4299_a3f3_0cd56795bae9(ArrayList<Integer> lst) {
        return lst.stream().filter((Integer x) -> {
            if (x % 3 == 0) {
                return False;
            }
            if (x % 4 == 0) {
                return False;
            }
            return True;
        }).mapToInteger(Integer::intValue).sum();
    }

    
    public static int sumSquares_Problem_6_08a9d4d8_4b89_426f_8205_cc5b6fd6673d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_0eb91a2e_b34c_467b_bc5c_6f3fcdbf0278(ArrayList<Integer> lst) {
        int sum = 0;
        if (lst.size() > 0) {
            // If size greater than zero then iterate over each element.
            for (int i = 0; i < lst.size(); i++) {
                // If index is divisible by 3 then square
                if (lst.get(i) % 3 == 0) {
                    sum = sum + lst.get(i);
                } else {
                    // If index is divisible by 4 then cube
                    if (lst.get(i) % 4 == 0) {
                        sum = sum + lst.get(i) * lst.get(i);
                    } else {
                        // If index is not divisible by 3 or 4 then return -1
                        return -1;
                    }
                }
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_856e788c_5765_4f5b_9ea7_18fa6327a37f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int e : lst) {
            if (e % 3 == 0) {
                sum += Math.pow(e, 2);
            } else if (e % 4 == 0) {
                sum += Math.pow(e, 3);
            } else {
                sum += e;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_a37873b0_1240_43b0_8c0c_ae0c9babbdf2(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_3cfcb7d3_3441_4c5f_8bf4_9ef5d8f77e2f(ArrayList<Integer> lst) {
        // your code goes here
        int sum = 0;
        for(int i = 0; i< lst.size(); i++){
            if(lst.get(i) % 3 == 0){
                sum += lst.get(i);
            }
            if(lst.get(i) % 4 == 0){
                sum += lst.get(i);
            }
            if(lst.get(i) % 3 == 0 && lst.get(i) % 4 == 0){
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_6c1d9f4a_474a_4f22_a744_f328ed2a91bc(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_0_d9c8ab28_a340_4269_b355_9e9668d286c6(ArrayList<Integer> lst) {

        // Write your code here
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_9f8dca92_1c17_4f0b_869f_d0102f7601e7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b0b584fc_3829_4045_a1d7_e946ee10271b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_afe0535d_13e7_4fc8_913e_4f22ec6a0441(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_6abea681_fb66_4df6_870e_4a2646907ca7(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_b7710134_108d_41f6_b1f4_21fcee28bdc8(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_0ae0d2d9_c5e6_41ad_99e3_dce92efa88e7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_1195d254_b5f5_419c_98ff_db5de9e913db(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_3f6865a8_0557_4b3b_9237_d82f50dc7b74(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_ec144dd1_cfae_4f12_afb2_dd2da190c4ba(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_fc513e13_1c49_4633_918b_3bfb255a5ac4(ArrayList<Integer> lst) {
        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_d4ccbbc2_fac5_4f1a_b61e_0f52d06d5d55(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_eea54644_d489_47cd_bffa_7827ff58ebf2(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_a7b85f89_f5d2_49e8_acf9_66d18f9fc51e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_9d8fdebe_0ece_476e_aa90_2ce8240de597(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_728c0ddc_e707_47c6_88d5_b365905fc13e(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_97bd7ee3_e95f_4ff8_8fbd_954015ddd0bd(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ac0a4bf0_05d1_421d_a9fa_34788c642591(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_7_69c5e920_a2b0_41e9_933a_27e4604e4f5b(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(lst.size()%2==0)
                sum+=lst.get(i);
            else
                sum+=lst.get(i)*lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_f428b77e_7408_47a9_9f2e_2f96b7224c99(ArrayList<Integer> lst) {
        int sum = 0;
        if (lst != null) {
            for (int element : lst) {
                if (element % 3 == 0) {
                    element = element * element;
                }
                else if (element % 4 == 0) {
                    element = element * element;
                }
                else {
                    element = element * element;
                }
                sum = sum + element;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5cfcdd9f_d24e_41ad_9ec8_f09c572073db(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_5f7ec6b5_d975_4196_8a9f_0c1e80676c25(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_8f2e1c12_38f1_47a6_a20b_b0f51fbbfa87(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_8a7a00ed_a59e_44c4_960f_a62af0d425aa(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_d12051b2_67f6_423e_a823_7025285193da(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_3a7f54ae_685b_4b66_a4e2_095fecc1bb22(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_05519e30_c178_40ab_b6c7_9b90f2b34759(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_085fa809_643d_4caa_ab60_3b75ee538fc4(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_cc333fe9_1d7a_4367_a6b6_b30fdd224ccd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_c14e2c85_7eca_4c05_9223_1d18ca9c5e74(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_f25a10f5_3535_406f_9508_cf11fdbc55be(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_eff71699_d825_494a_8458_4fd5e9736e9b(ArrayList<Integer> lst) {
        int sum = 0;
        // We iterate through the list and for each element in the list, we
        // check whether the entry is a multiple of 3 or 4.
        for(int i : lst) {
            if(i % 3 == 0 && i % 4 == 0) {
                // This is a multiple of 3 and a multiple of 4 so square
                sum += i * i;
            } else if(i % 3 == 0) {
                // This is a multiple of 3 so cube
                sum += i * i * i;
            } else if(i % 4 == 0) {
                // This is a multiple of 4 so just add the value
                sum += i;
            } else {
                // This is not multiple of 3 or 4 so we do not change the list at all.
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_ad5b03cd_df53_40e0_a401_35a92898c0b4(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_b1a41bf9_2ae9_462f_8781_3456b04e4176(ArrayList<Integer> lst) {
        if (lst.isEmpty()) return 0L;
        int sum = 0L;
        boolean isPrime;
        int num = lst.get(0);
        int nextNum;
        for (int i = 0; i < lst.size(); i++) {
            isPrime = False;
            nextNum = lst.get(i);
            sum += num * num;
            if (isPrime) {
                while (nextNum % 3 == 0) {
                    sum += num * num;
                    nextNum = nextNum / 3;
                }
                while (nextNum % 4 == 0) {
                    sum += num * num;
                    nextNum = nextNum / 4;
                }
            }
            num = nextNum;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_f5e11a6c_b5b9_4a79_82a9_9b94f6534617(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_266763d0_430f_4ed6_8df4_b38c3c7fd36f(ArrayList<Integer> lst) {
        int res = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                res += i;
            } else if (i % 4 == 0) {
                res += i *  Math.pow(2, 4);
            } else {
                res += i * i * i;
            }
        }
        return res;
    }

    
    public static int sumSquares_Problem_6_4fd17288_b9f0_4cb7_8211_5c57e96bb7d9(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_a4262f14_45ec_4636_96dc_ef43256081ca(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_7_eda17349_d5a7_4217_b2c4_44594b34b921(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_c8db7701_a480_430f_a0bf_434a1680aaba(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b4a11b64_b478_473c_9cd0_1c0fd27fd9fd(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_cffe725b_8073_4217_8418_fce2e01e0da1(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for(Integer i : lst){
            if((i%3)==0 && i%4!=0){
                sum = sum + i*i;
            }else if((i%3)!=0 && i%4==0){
                sum = sum + i*i*i;
            }else{
                sum = sum + i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_2dc1d790_febe_4c1a_97c3_fa493faa3d85(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_0acc6cc9_5875_44d3_bd48_b24bb91caf4e(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).sum();
    }

    
    public static int sumSquares_Problem_5_4fd491c5_6f23_46e3_8b4e_d58cf534711c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_7a07f165_5a82_4f62_a545_c22243d40c5c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_f8d94d46_23a3_4bf3_959d_831a76bf7232(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_bda8fc5d_1221_4e16_8efd_0ee8ef89b60b(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_65b177fe_e68a_4bf1_9abc_3acdd73970a5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_158020f2_f440_443f_bdfc_bf4bf66fe502(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_5c6334cb_6778_46bb_a001_12f68613d405(ArrayList<Integer> lst) {
        int sum=0;
        for(int i=0; i<lst.size(); i++) {
            int a=lst.get(i);
            if(lst.get(i)%4==0){
                lst.set(i, a*a*a);
                sum+=a*a*a;
            }
            if(lst.get(i)%3==0){
                lst.set(i, a*a*a*a);
                sum+=a*a*a*a;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_fbdd484f_6607_4d37_8f9d_c39dc9385934(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_de823379_b585_4205_9feb_6582a56ab7dc(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_0f7ada62_460a_4eb5_be82_f9797b2d7376(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_164a09c6_03a5_45de_b5e8_f2af4e3f660b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f8a0a499_f3ab_4c28_ae81_95b809d50600(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e27c79db_7149_4b02_b65c_1b4c9ae37533(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_8b45fec5_0c13_4b86_9c02_0e48ef72c0a5(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            int index = lst.get(i) % 3;
            if(index == 0) {
                sum += lst.get(i);
            }
            if(index == 1) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ac77f7d8_2959_4839_939e_0ed05c8f2c6d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_2bdf1354_de76_475e_be15_5275ca07d202(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_0873675e_9f23_4a04_840a_f1e3a4545d19(ArrayList<Integer> lst) {
        // "
        // Your code goes here.
        // "
        return 0;
    }

    
    public static int sumSquares_Problem_5_b9fdd2ae_64cd_4d3b_9376_c008a0497d1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_dad8f6a8_0044_444b_a3f2_738f376c788d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_9542eb68_b0d3_48ab_92c1_8b1d1d7df757(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_e8f1eada_8b15_4b74_8aa8_f3644aec4c08(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_1b1e7143_37ec_485a_ada9_a04f9bccd945(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_10_61382ff3_6c19_4aad_aa79_12df95927066(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_fee7cd71_206a_46f3_a718_65fbe855f76f(ArrayList<Integer> lst) {

        // your code goes here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_151e4d09_2f26_45a4_82ef_11a0003a1251(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            }
            else if((i%4)==0) {
                sum += i*i*i;
            }
            else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b0a165d6_b437_4e95_ba93_8437058c85f5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_a5656e86_f78e_4284_9bfa_e018135ed6f1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a(ArrayList<Integer> lst) {
        int sum = 0;
        int count = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                sum = sum + i;
                count++;
            }
        }
        sum = (sum * sum) / count;
        return sum;
    }

    
    public static int sumSquares_Problem_6_83c615f8_4610_44f3_a0be_fb0720501d95(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_0b914442_fb49_4b24_b3ab_c93ce3457a01(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_9_72acb516_421d_47bd_8b64_daa7e26b46e4(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_4200ac65_3f46_4b6c_9119_6f9e79aefb84(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_1cb94c77_097f_4a19_8fc5_cfabc98ab74a(ArrayList<Integer> lst) {
        // Your Code Here
        int sum = 0;
        int count = 0;
        for(int i=0; i<lst.size(); i++) {
            count++;
            if(lst.get(i) instanceof Integer) {
                if((count%3)==0) {
                    sum += (lst.get(i) * lst.get(i));
                } else if((count%4)==0) {
                    sum += (lst.get(i) * lst.get(i) * lst.get(i));
                } else {
                    sum += lst.get(i);
                }
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_0f311e64_b979_45d5_91f4_7aef94347589(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_1bf5baf4_6518_4146_88f6_fd98f2123cd8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_c56b7d95_0ea9_4cdc_ad03_5623b1b49e34(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_fce8010d_6643_41e7_95d0_7a4ed6f8209d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_82e83bbb_2930_474b_ad31_071881442dac(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_31185490_d7c8_4aac_8313_ac191b8c7fb0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_324a5a63_6c87_487e_978f_81b9267d09e7(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_80a9ff0c_2af6_48ab_9d2d_e36eeb1bf3f3(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_6_49727e83_e170_4d2f_8744_3e33880947d4(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_663f7217_e75d_417a_bfab_c204eccd235e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_ab47fa26_c4c0_4730_8c15_82015cd0c8b9(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_5a3e18e0_a3fe_4f34_bed2_18faa7dfeb3b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_932345d5_7fa8_4538_bc14_186f5ba046f1(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_889889c2_397f_44b4_9dee_8f645a638895(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_78b2111c_2271_4389_991a_c8c38e277a3b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_399e1ee8_b536_4b4f_acb5_606a07826bfa(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_9_d9ea0cfb_7f6b_4a18_a444_63c4069d2a79(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum+=i*i;
            } else if(i%4==0) {
                sum+=i*i*i;
            } else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_41ba4916_8cbb_44fa_9827_3dae8de0baca(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_3e514e14_b387_48ab_b579_9fc427f2a0c4(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_31c02e27_13bd_4d69_a985_7ab29fa279ba(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x * x).sum();

    }

    
    public static int sumSquares_Problem_7_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_31d29684_6728_45c2_8383_f046fc7646ab(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_4e5c17c1_9061_4772_a0ff_9dfd2340a4b3(ArrayList<Integer> lst) {

        // TODO: Implement this function
        return 0;
    }

    
    public static int sumSquares_Problem_3_573492f9_036c_4ee8_8e79_20550906ffd7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_5da6fd0b_3667_418c_a7f2_2c5dad2038d8(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_b27372b2_3346_499c_a15a_b9fbdbc102e7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_0_5416b249_e88f_4c16_9adb_6a2102c980da(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_6_f3964e00_ea32_474b_9b18_8548792e6444(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_0541aba4_113a_4970_ad62_957b10cd34d9(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_5_f8e90eac_60d2_403d_8ab2_8c7c70a01de7(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_6fd1b752_2140_4c98_939f_b6d1568a0a27(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_69d1b1c7_d7a5_4375_9b43_5b1158a30692(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_2_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_e9d93803_53da_4a94_a4ee_3df8a4697597(ArrayList<Integer> lst) {
        int result = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                result += i;
            }
        }
        return result;
    }

    
    public static int sumSquares_Problem_3_240b8c2c_348c_4acc_abb0_2b2910658e5f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int curr = lst.get(i);
            if (i % 3 == 0) {
                curr = curr * curr;
            } else if (i % 4 == 0) {
                curr = curr * curr * curr;
            }
            sum += curr;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_b1ca4e97_1d92_4c0d_b173_cdd438e156e1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_60547a3b_f2f3_4291_8091_6a9d7c98ed6f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_e1abff06_6c87_4c65_a3ce_b5206a978eae(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_24d67cd8_ac71_4e77_a9d9_f1dfc75e23ab(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_663f7217_e75d_417a_bfab_c204eccd235e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_5453c301_dfb3_404a_8d5b_0fa41044ca8b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_e9d93803_53da_4a94_a4ee_3df8a4697597(ArrayList<Integer> lst) {
        int result = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                result += i;
            }
        }
        return result;
    }

    
    public static int sumSquares_Problem_3_fac98083_6af2_499d_9f6b_8daf3b8e54a1(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_727c1f17_1d45_433c_b239_78e6b9f3b708(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_c28c830c_9b19_4290_bc64_79b90c8f8ad4(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_463b3d8f_4ae9_4df0_aca5_10b37fd9b586(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_4_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_356b9e68_7ca1_45b7_9b9f_11ce1a10e9c9(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_1d658de9_31c8_4f00_8862_d4297229d3cf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_11cbe7a9_951b_419b_ad6b_497c9a804849(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_f63d409d_516f_4bdb_8f21_a636a37dc729(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_661bbd0e_d19e_40f1_99c0_311dd686ba06(ArrayList<Integer> lst) {
        int sum = 0;
        for (int l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_857590b2_20c6_4b5f_bd06_15809eb0ea72(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_037dbebb_8fd8_4c2c_a8e4_b3ea83a2cf58(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_9c8ecab2_36ea_45a7_8fb8_30250a9f7ab0(ArrayList<Integer> lst) {
        // Declare and initialise variables.
        int sum = 0;
        
        // Iterate through the array list entries and perform the required operation.
        for (Integer n : lst) {
            
            // For each entry in the array list calculate the required operation on the value.
            if (n % 3 == 0) {
                sum += n * n;
            } else if (n % 4 == 0) {
                sum += n * n * n;
            } else {
                sum += n;
            }
        }

        // Return the sum.
        return sum;
    }

    
    public static int sumSquares_Problem_9_c82327d4_10dc_419a_9656_325333257766(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_4e2e29ea_127f_4e95_818a_cb281a3c2c33(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_1_45b385b7_5362_410a_ae36_d7f8b115eb27(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_bac17ed9_253d_4881_8bb1_e08e87c4d5c4(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_fe5e697d_f613_41f3_8084_dcd0260bf789(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_afe0535d_13e7_4fc8_913e_4f22ec6a0441(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_694ef5e8_412c_474e_ad6c_4bc652810f1e(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_50c7ebde_3ffd_42f1_8f64_9328f09d581b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_0f001c54_194f_425a_86c7_ef2db7c3f888(ArrayList<Integer> lst) {

        // Your code goes here
        return 0;
    }

    
    public static int sumSquares_Problem_0_df8ce354_1273_42f6_bfa8_4ccc2bf1975e(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_2f3364a4_c2a9_4df1_8bba_bb3036eb90dc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_91037e1d_7744_45b3_aa4b_94e1c157c70f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_f4eb5af5_3708_4de5_b2a1_9c686fe347f9(ArrayList<Integer> lst) {

        // Your code goes here
        return 0;
    }

    
    public static int sumSquares_Problem_2_b475ce83_e078_439a_8339_837f8d9fe9ec(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_005ba5bc_4a1b_4ba6_bdcf_6847c9334151(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_558e2004_f9c3_415a_8c13_5dee91265aaa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e6e22625_c5d8_40e2_9cea_b29ba9c170df(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_aada740f_7e3a_4788_b0bb_191aedd8bb7d(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_d61a06e0_a1dd_4ad7_8876_d018ff3fab9a(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_1e78b721_6a4f_4d56_b619_d2b4480761d0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_5a2951ef_4128_4961_982f_84ceb56920a3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_638f0eac_bade_4319_ac99_0897319a1eca(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b7f7ff44_30ff_47c0_92b7_c4033dcbe7c7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream()
                .filter(i -> i % 3 == 0 || i % 4 == 0)
                .map(i -> i % 3 == 0 ? i * i : i * i * i)
                .reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_8_a3ce6ef5_9c2f_4f24_801c_566f6169ae0d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_a26c4082_781d_4d49_becb_d101065b27b7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_3434766c_069e_4c8b_aaa0_a87707738ebf(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(i -> i % 3 == 0 || i % 4 == 0).map(i -> i * i).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_8_ae5ed841_b15b_4f75_a8ce_52572971e03b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_7bb9c06c_4c6c_4519_9b29_e776d7c9b24a(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_1ae2de34_dd11_421a_a919_1be39e9b8fcc(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_427bc80b_3fab_4486_9da3_033c7d21927c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_a9085423_ebe6_45bb_bfeb_c6e319da3c5f(ArrayList<Integer> lst) {
        // Write your code here.
        int ret = 0;
        for(int i=0;i<lst.size();i++) {
            if(lst.get(i) % 3 == 0)
                ret += lst.get(i);
            else if(lst.get(i) % 4 == 0)
                ret += lst.get(i);
            else {
                if(lst.get(i) % 3 == 1)
                    ret += lst.get(i)*lst.get(i)*lst.get(i);
                else if(lst.get(i) % 4 == 1)
                    ret += lst.get(i)*lst.get(i)*lst.get(i);
                else
                    ret += lst.get(i)*lst.get(i);
            }
        }
        return ret;
    }

    
    public static int sumSquares_Problem_0_b16e8807_e5bc_4be9_9655_875c051cc49c(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_bfcd2dc1_c93f_41eb_82b3_69ef7536a85a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_3_966e529a_30e9_457d_8abf_901a6bfab7fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_60ccdf3e_0f1b_4cf8_81ba_5489ee6566e3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_91037e1d_7744_45b3_aa4b_94e1c157c70f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_bce02fa9_879f_49c1_88cc_f0fa38607796(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_5f043fda_6338_4fc7_845b_6b91bc601040(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_253a383d_ee88_415a_9fc8_94156f28b54a(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0).map(x -> x * x).reduce(0, (x, y) -> x + y) + lst.stream().filter(x -> x % 4 == 0 && x % 3 != 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_4_03bb829b_7af8_499a_b92c_7b89f3fef48b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_9276ae60_6159_4b3a_ad79_9ad80bd3785b(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_92389ec0_2d86_4d0f_8f61_9683e3df5447(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_11b130b4_9e9b_4daa_b940_1bb9f0071084(ArrayList<Integer> lst) {
        ArrayList<Integer> ret = new ArrayList<Integer>(lst.size());
        for (int num : lst) {
            if ((num % 3) == 0) {
                num = num * num;
            }
            else if (num % 4 == 0) {
                num = num * num;
            }
            else if (num % 3 == 0) {
                num = num * num;
            }
            else if (num % 4 == 0) {
                num = num * num;
            }
            ret.add(num);
        }
        return ret.stream().mapToInteger(x -> x).sum();
    }

    
    public static int sumSquares_Problem_1_f5e11a6c_b5b9_4a79_82a9_9b94f6534617(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_acf2d62a_b211_49e4_b4fc_ad9fa3cabe28(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_6d283a53_81d1_4c98_aa4c_d69ccc4b323a(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_e259049d_672d_4d23_b3f2_5f9030585626(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_6278e127_0a3d_4478_850e_5ed3e7773607(ArrayList<Integer> lst) {
        int n = lst.size();
        // List<Integer> result = new ArrayList<Integer>();
        // System.out.println("size of list " + n);
        // result.add(null);
        List<Integer> result = new ArrayList<>();
        if (n < 2) return 0;
        int sum = 0;
        int cur = 0;
        for (Integer e : lst) {
            if (e % 3 == 0) cur = cur * e + e;
            else if (e % 4 == 0) cur = cur * e * e + e;
            else if (e % 3 == 0 && e % 4 == 0) cur = cur * e * e * e + e;
            else result.add(cur = cur * e * e * e * e);
        }
        sum = result.stream().mapToInteger(Integer::intValue).sum();
        return sum;
    }

    
    public static int sumSquares_Problem_1_4ab528fa_06ca_419e_8b90_84adb32dddce(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_8cb10834_ef6f_44fe_8eaa_1da1b8418425(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_0541aba4_113a_4970_ad62_957b10cd34d9(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_7_e93c3bfa_d0dd_4df3_92cb_2f94081aed0f(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_c83950bf_289f_427e_b662_af1421ce0d53(ArrayList<Integer> lst) {
        ArrayList<Integer> lst2 = new ArrayList<>();
        for(Integer n: lst) {
            if (n % 3 == 0 || n % 4 == 0) {
                lst2.add(n);
            } else {
                lst2.add(n * n);
            }
        }
        int sum = 0;
        for(Integer n: lst2) {
            sum += n;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_f76ab832_05d5_439e_8193_151a713ff1bb(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_648387ba_c540_495a_8eaf_9927f7e56216(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_a194825b_6cfc_4259_bdcf_8e9c020265b7(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            }
            else if((i%4)==0) {
                sum+=i*i*i;
            }
            else {
                sum+=i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_b37f2dca_de62_41fb_a926_49419136d281(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_4ef8da68_fec1_4802_ac01_419eeef2e793(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i & 3) == 0) {
                sum += i * i;
            } else if((i & 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_c59b2414_8753_4565_aea9_7c9b4b8f0fdf(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_783891ee_eb84_464a_abb0_b42451fc07e0(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_b7140928_9635_4c5d_bb8f_19ff0fba1a72(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0 && i % 4 != 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0 && i % 3 != 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_ba452ab9_543d_4bd9_979d_5ff0eb68d631(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_4d624990_b328_4f75_b9ad_bafd0dd0f593(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4!= 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 3!= 0 && lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_217d3f55_a499_4a86_b017_255814d2bd6e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_db47b70c_c2f3_4ce6_a98c_5309009653cc(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
            if (lst.get(i) % 3 == 0)
                sum *= lst.get(i);
            else if (lst.get(i) % 4 == 0)
                sum *= lst.get(i);
            else
                sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_26896a9e_3d98_449f_bfa7_848f165a52f0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_178c6532_f397_426f_9f6b_7649ab5f785a(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_3e38d70c_3556_42d4_9c5b_dbb6fee5e3ee(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3==0) {
                sum+=i*i;
            } else if(i%4==0) {
                sum+=i*i*i;
            } else {
                sum+=i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_72049a7d_821b_4dca_9b1a_3cf104a4b67c(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_87dabe2f_e527_4420_a278_aeaf1b587005(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_5bf9a0ea_2d87_40c0_a3f9_282d17f96d14(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_815b3a53_3155_46fe_a340_0a14e26e5ac6(ArrayList<Integer> lst) {
        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_3af1e785_7a03_4f12_bae2_809d3ec2d9b7(ArrayList<Integer> lst) {
        return lst.stream().filter(e -> e%3 != 0).map(e -> e*e).filter(e -> e%4 != 0).map(e -> e*e).collect(Collectors.toList()).stream().reduce((a,b) -> a+b).get();
    }

    
    public static int sumSquares_Problem_7_d88695fd_495d_4d5c_93c9_7d88aca8a8fc(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b218c8b4_55fa_4568_ac94_6daab1a38fc0(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i * i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_02aed84a_4d87_4a53_8668_8a7ee1d03b41(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_d1c12611_54b9_41ec_a78c_a8e6fa9377d3(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_4834397a_c49e_4993_ad6d_d1dedc98f37a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_92dc4688_f22a_422a_befd_1cf76c2bd886(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_0abf1df0_df0d_4688_8bbc_795abef54331(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_0109dbe0_3286_446b_b69e_c3ff15862fe9(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_a341db76_605e_4def_a222_aa05520763c9(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_44aca58b_42df_4fcd_bf03_3f3acddf69c5(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_2876aace_3ca2_4c67_bfe6_886951842b3f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (lst.get(i) % 4 == 0 && lst.get(i) % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (lst.get(i) % 3 != 0 && lst.get(i) % 4 != 0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_769e9be2_ac96_4784_a29b_6c57075a4c2a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_8a7a00ed_a59e_44c4_960f_a62af0d425aa(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_a24c4681_8b7f_4c3b_a672_74eed4ea5756(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_2a4aa73b_31ad_4698_b480_a31d1d0a9b60(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_5ed4914f_3464_4db7_8482_44d8ee91e819(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_aeebc90b_a551_451d_a618_8573b132f31f(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_0f6db28e_fba0_4b5f_bdd0_62ff634e092d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_e7049dcb_9e19_44f3_982c_4e54d7beb1b3(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_5bbc0427_2dc5_41bd_92bf_6296bd130536(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_5584df20_af27_4021_8ee2_d2c102ea98d0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_a38baa72_7c6c_40cb_90d6_467814669ba1(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_8d2a7897_30cd_42b7_af8b_daee576d56f0(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_9386621c_f170_4700_9b7b_35cab9f89fce(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_c61b7dbb_6b8a_469e_9b1e_b8ebd8c0441a(ArrayList<Integer> lst) {
        int sum = 0;
        int count = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                sum = sum + i;
                count++;
            }
        }
        sum = (sum * sum) / count;
        return sum;
    }

    
    public static int sumSquares_Problem_8_b0daf192_1722_4967_a707_6337233e196f(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> {
            int i = lst.indexOf(x);
            if (i % 3 == 0) {
                return x * x;
            } else if (i % 4 == 0 && i % 3 != 0) {
                return x * x * x;
            } else {
                return x;
            }
        }).sum();
    }

    
    public static int sumSquares_Problem_0_d83761ad_2a3a_4702_971a_1aad9703e43f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_1aacf338_6853_4d9e_854a_d6449475d70c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_6c1d9f4a_474a_4f22_a744_f328ed2a91bc(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_7_915e6ba7_730f_4f63_8101_0eb5624dcd98(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_f47c8fe1_de17_4b2b_a484_4559dc07b4f3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_5e9db928_35c0_419d_a2e7_4e2aed2ac4b5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_ba9dc1b3_e7d2_4775_95e8_15c69c04bb20(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_8bff2687_84d3_48cb_aec2_30b206d0a606(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_4a26e3b5_183e_4ab9_af0e_a91ccf88dd5b(ArrayList<Integer> lst) {
        List<Integer> list = new ArrayList<>(lst.size());
        for (int i = 0; i < lst.size(); i++) {
            Integer elem = lst.get(i);
            if (i % 3 == 0) {
                list.add(elem * elem);
            } else if (i % 4 == 0) {
                list.add(elem * elem * elem);
            } else {
                list.add(elem);
            }
        }
        return list.stream().mapToInteger(elem -> elem).sum();
    }

    
    public static int sumSquares_Problem_8_cd48eec2_4cb7_4133_bb54_31dc6bf5cd93(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_b519ce73_e223_4230_894b_a0f291a29e69(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_36ab0c9f_6c45_4ae0_9c5d_ff9067b5ed69(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_9_e9511eeb_c1d1_435c_9572_6d57456515ff(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_45b385b7_5362_410a_ae36_d7f8b115eb27(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_d35a4a83_3387_4691_a6be_46cacdbf95eb(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_5909a985_887a_4e9c_8174_c9a9650ee0f6(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_881d0442_0a4a_436a_af3d_fa6321028b8d(ArrayList<Integer> lst) {

        // Write your code here
        int i = 0;
        int sum = 0;
        while (i < lst.size()) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (lst.get(i) % 3 != 0 && lst.get(i) % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
            i++;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_dc6631ce_5d02_4057_b7c1_fbaae8d1f13b(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_3a6c5564_36ed_4f65_8b87_e075768336e5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_178c6532_f397_426f_9f6b_7649ab5f785a(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_2920ec9d_4773_4905_bd37_c1e21eac8991(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x*x).filter(x -> x%3==0 || x%4==0).reduce(0, (x,y) -> x+y);
    }

    
    public static int sumSquares_Problem_0_478addb9_1928_479a_9391_e707350c9f84(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_97bd7ee3_e95f_4ff8_8fbd_954015ddd0bd(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_79efaffe_8a10_4af3_91d7_857873508885(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_9066d55a_744a_4db9_ac03_785508cabbee(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_1f3430c3_f718_4278_8c6f_bda925965055(ArrayList<Integer> lst) {
        int sum = 0;
        int total = 0;
        Iterator<Integer> iterator = lst.iterator();
        while (iterator.hasNext()) {
            int num = iterator.next();
            if ((num % 3 == 0) && (num % 4 == 0)) {
                num *= num;
                total += num;
            } else {
                total += num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_a7a1cdf1_6b20_4532_82f1_59c35b4b70d7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_aa1cfa02_6e79_4c1b_b01a_f174acf206d6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_21c5ab9d_1a4b_49fd_bc45_f93e08c14318(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_5453c301_dfb3_404a_8d5b_0fa41044ca8b(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_4d624990_b328_4f75_b9ad_bafd0dd0f593(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) % 3 == 0 && lst.get(i) % 4!= 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (lst.get(i) % 3!= 0 && lst.get(i) % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_5366314e_bffb_40b3_aee5_5449e3d04850(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
            else{
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_8de2b119_3720_4f11_83f9_abbab6d92f23(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_164ca8ff_b029_4224_afd4_88fbae9924e2(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_1bf5baf4_6518_4146_88f6_fd98f2123cd8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_5a7fe767_bff0_4d2f_9aca_38e6996f45bb(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_3fdf955c_dd8e_4d0f_be67_7e57be347d5d(ArrayList<Integer> lst) {
        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_5_a5656e86_f78e_4284_9bfa_e018135ed6f1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_a1e116ab_9cc5_4e4e_aac1_21ab05b1e138(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_cbf390ef_421a_4acf_8918_f6668820c8c7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_2f7fa7ae_8ca9_4d3a_8842_39d6cb5de7f6(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_7437e832_c555_4f9b_aad4_382ba4d01cae(ArrayList<Integer> lst) {
        int sum = 0;
        ArrayList newList = new ArrayList();

        for(int i: lst){
            if(i % 3 == 0 || i % 4 == 0){
                newList.add(i);
            }else{
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_400598da_0427_493a_8434_2feca7a51edd(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_5ef2884c_dd89_4f7f_b169_507993f69b97(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_9c682a1a_c0ef_4342_9fc5_03e06bb990e3(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_a6f5f5ca_24da_4237_8180_a8bed783f155(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_fb8487a0_53ef_489d_ba29_fa94cd3244cc(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_414072ab_8397_4ba0_8cdb_aeb69aa566a7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_884d1a62_c544_45ba_bd51_dbbedb71eeba(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_8_98f30288_aad9_467d_b208_6b27d0cf85c0(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_bf9a39d6_42e7_4198_baec_7fb827e74e0a(ArrayList<Integer> lst) {
        int result = 0;
        boolean isMultipleOf3 = lst.get(0) % 3 == 0;
        boolean isMultipleOf4 = lst.get(0) % 4 == 0;
        for (int i = 0; i < lst.size(); i++) {
            if (isMultipleOf3 && i % 3 == 0) {
                result += lst.get(i) * lst.get(i) / 3;
            } else if (isMultipleOf4 && i % 4 == 0) {
                result += lst.get(i) * lst.get(i) / 4;
            } else {
                result += lst.get(i);
            }
        }
        return result;
    }

    
    public static int sumSquares_Problem_10_3aaeb774_020b_4617_ab17_1cfddccf4f76(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_bd0cc2e6_e6ea_4cfd_9bed_646c12635946(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_403ee8ab_176e_4a91_90a4_d7dcd613496e(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_4602b924_803d_415a_bdfe_0de0206a7125(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_24a0c794_1234_4872_83ab_d206b5062f60(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_c8db7701_a480_430f_a0bf_434a1680aaba(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_865d21f0_d80c_432f_b1b8_9874498230e3(ArrayList<Integer> lst) {
        int sum = 0;
        int length =  lst.size();
        int counter = 0;
        while (counter < length) {
            int val = lst.get(counter);
            if (val % 3 == 0) {
                int tmp =  Math.pow(val, 2);
                sum += tmp;
                counter++;
            }
            else if (val % 4 == 0) {
                int tmp =  Math.pow(val, 3);
                sum += tmp;
                counter++;
            }
            else
                sum += val;
            counter++;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_a38baa72_7c6c_40cb_90d6_467814669ba1(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_5ef2884c_dd89_4f7f_b169_507993f69b97(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_51c1eca3_76e6_4443_941b_6468ac7631ff(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i%3 == 0 && i%4 == 0) {
                sum += i;
            }
            else if (i%3 == 0) {
                sum += i * i;
            }
            else if (i%4 == 0) {
                sum += i * i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_2bd01f7f_0632_4818_aa79_8de61c7b4e0d(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f11585c5_00d4_4983_b968_9a7437d7261e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_cfd28e78_833e_4d0f_b036_f052369b3c09(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_30d135c3_f023_4fb1_9c3d_95305aadc243(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_99893b99_a4ad_414b_ac62_dd9285c3a6c2(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_899fb681_838a_4fee_aaeb_8104224668f9(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> {
            if (lst.indexOf(x) % 3 == 0) {
                return x * x;
            } else if (lst.indexOf(x) % 4 == 0 && lst.indexOf(x) % 3 != 0) {
                return x * x * x;
            } else {
                return x;
            }
        }).sum();
    }

    
    public static int sumSquares_Problem_5_b6ca1cfc_22d1_4457_a3d8_2e16d58c6711(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().mapToInteger(x -> x*x).filter(x -> x%3==0 || x%4==0).sum();
    }

    
    public static int sumSquares_Problem_4_5412e256_0693_4601_9264_bb98a1655290(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_3aa853fd_1d22_4010_abdc_12c727670c00(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_a657dff6_0ef5_4bec_88b3_71770e988c99(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_68ffb13f_a02c_4767_9171_bbd6fe496841(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
                sumOfSquares += lst.get(i) * lst.get(i);
            } else if((i % 4) == 0) {
                sum += lst.get(i);
                sumOfSquares += lst.get(i) * lst.get(i);
            } else if((i % 3) != 0) {
                sum += lst.get(i);
                sumOfSquares += lst.get(i) * lst.get(i);
            }
        }
        return sumOfSquares;
    }

    
    public static int sumSquares_Problem_10_7166fc05_b420_40b5_9adc_67af4588f020(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_c87cb24f_c2fc_4ee7_a118_1748de79114c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_ebd3f04f_a081_4d6a_bd0e_6a5e5f7f33d8(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_d21ca633_7161_4933_aa17_22a99fd03daf(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_0c3099e9_a1cd_48e3_81c9_d9632c16f0cc(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_bf3995bb_7132_4003_b1d1_b7a93df5a712(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_10_716ec40a_9196_4c24_9227_eb622cb32760(ArrayList<Integer> lst) {

        // Write your code here
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_8d27fa1e_f3e9_4056_8724_bf79358dc8a7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_7782f7f4_14e3_4725_ad6a_b21a7ffe21ef(ArrayList<Integer> lst) {
        int sum = 0;
        int sumOfSquares = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i;
                sumOfSquares += i * i;
            }
            else if((i % 4) == 0) {
                sum += i;
                sumOfSquares += i * i;
            }
            else {
                sum += i;
                sumOfSquares += i * i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b66578ee_7aad_4e2a_9686_f895890ee894(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i%3)==0) {
                sum += lst.get(i);
            }
            if((i%4)==0) {
                sum += lst.get(i);
            }
            if((i%3)==0 && (i%4)==0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_86639ae9_e4c3_4149_b73f_d6829df05c61(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_b0a165d6_b437_4e95_ba93_8437058c85f5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_60ccdf3e_0f1b_4cf8_81ba_5489ee6566e3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_3b6bc1fb_16bb_4383_b1f3_692949e66542(ArrayList<Integer> lst) {
        // TODO: Fill this in.
        int sum = 0;
        for(Integer x: lst) {
            if((x%3)==0) {
                sum += x*x;
            }
            else if((x%4)==0) {
                sum += x*x*x;
            }
            else {
                sum += x*x*x*x;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_bbc4f5a3_226f_4631_8632_b9b1861f5702(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_43ca981d_ec81_413c_8360_980ecb640ed5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            }
            if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_eda17349_d5a7_4217_b2c4_44594b34b921(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_df836a52_8e5e_4964_99af_6da837d35e47(ArrayList<Integer> lst) {

        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if(i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_cb3e21fe_b2b5_4724_86eb_d661b7e54eaa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_f5e127b9_699a_4b22_9a96_2bf79fabc5aa(ArrayList<Integer> lst) {
        ArrayList<Integer> copy = new ArrayList<>(lst);
        int sum = 0;
        for (Integer i : copy)
            if (i % 3 == 0 && i % 4 == 0)
                sum += i * i;
            else if (i % 3 == 0)
                sum += i * i;
            else if (i % 4 == 0)
                sum += i * i;
            else
                sum += i;
        return sum;
    }

    
    public static int sumSquares_Problem_9_cda23e1c_3a34_4b25_ab7d_0a69ef0f9c00(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_0898b423_5922_4c3b_883e_4c6a1f4ea9ee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_2c4d4ba7_e4a2_487d_a75c_f839b4813bab(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_f7fced6e_9613_4307_9ed2_9a6d557f3840(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_018e5b2b_20bc_4228_8dd8_2e78c81fda11(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_1769920a_0a14_4636_8d94_5dcf9c0e74b9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_a3f92616_88fe_459a_9939_6a4970de9921(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_8013f572_6b2b_4aa7_89db_fb9d2ef2a052(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(lst.get(i) % 3 == 0 && lst.get(i) % 4 != 0){
                sum += lst.get(i);
            }
            else if(lst.get(i) % 3 == 0){
                sum *= lst.get(i);
            }
            else if(lst.get(i) % 4 != 0){
                sum *= lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_da7f12eb_0b0d_4fc7_9d23_81d666efd9fe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_7cfcbc79_7467_47e8_a02c_98ec290ea5e9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum *= i;
            } else if (i % 4 == 0) {
                sum *= i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_be5d77d0_9bbc_4530_9e7b_febb459f9d94(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_d4cf3f8d_8cbb_439c_a52a_c475fef26424(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_042848d0_cc68_4028_8c5d_548a8f030c6f(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_beda2c5c_bbe8_4917_9274_7d2ea50e9131(ArrayList<Integer> lst) {

        // TODO: Implement this function
        return 0;
    }

    
    public static int sumSquares_Problem_6_7aa3e9c6_7f2f_455c_811d_b6b3419af771(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += lst.get(i) * lst.get(i);
            }
            else if(i % 4 == 0){
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_e8aa7d37_fa85_4a0a_a1e5_915dfcdcffa7(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_f560c6a7_2684_41f0_823a_9617d858de63(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_403ee8ab_176e_4a91_90a4_d7dcd613496e(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_d3005b08_ae5c_48ee_a27a_5daf9d966bb7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_1983cd28_010d_48ff_a49a_c4e7aebe6a51(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_f125b4e2_9d79_4d41_a57b_babd368bb827(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_cbf390ef_421a_4acf_8918_f6668820c8c7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_70891e7e_d467_4142_b9bd_b8714d47b85d(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_7cfcbc79_7467_47e8_a02c_98ec290ea5e9(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum *= i;
            } else if (i % 4 == 0) {
                sum *= i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_c56b7d95_0ea9_4cdc_ad03_5623b1b49e34(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_04e1e251_0795_465a_960a_c44904285cde(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_9_3ae92d56_5e6f_4a9c_94e2_25968df57210(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_54d47fe4_870d_4e87_9c5a_22ee0ddce6ca(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_60c0c1ac_dfe3_4b77_8f5d_b8b20aa18b22(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_1d10c67d_7a91_4ec5_98ff_fffc43f91b06(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if(i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        for(int i : lst) {
            sum += i;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_25203b23_4454_4d53_977f_1fb3fdb2f8d7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int index = i % 3;
            if (index == 1) {
                sum += lst.get(i);
            } else if (index == 2) {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_899fb681_838a_4fee_aaeb_8104224668f9(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> {
            if (lst.indexOf(x) % 3 == 0) {
                return x * x;
            } else if (lst.indexOf(x) % 4 == 0 && lst.indexOf(x) % 3 != 0) {
                return x * x * x;
            } else {
                return x;
            }
        }).sum();
    }

    
    public static int sumSquares_Problem_4_dd45b251_83c2_4399_ad11_81a5f364dcee(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_0f2a33b5_4a67_4e06_98d8_f6227a59d314(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_e7a5e8bc_e4df_4d48_bae1_fbf22fe2fbb8(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_e3180e54_d0ae_48d3_8f64_ce593d8e6d04(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_d580d599_d96f_43c3_92f6_c330de837be5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_85a6a1dc_a1e1_4254_bee5_f08a73aee1b1(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_dfde5c19_5f6b_495a_9631_29fe6bdfc3d7(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_1f8f7da3_bdba_4c3c_b7b0_9910a5523b09(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_5412e256_0693_4601_9264_bb98a1655290(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_f76ab832_05d5_439e_8193_151a713ff1bb(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_175d45ce_21ff_4519_b555_ed3de8e83a15(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_676f8461_bb7b_4e5d_9dc3_814714aa7bc9(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_2c67e434_cc17_41ae_bd5d_f08bf50aa2cb(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_65b177fe_e68a_4bf1_9abc_3acdd73970a5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_010b613c_829d_4e69_89ea_f916837e475a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_ca44122e_b4c0_41e4_b0b1_ba7a40ef1875(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_eacec2c1_23cb_4dc9_a7d9_175dfc405289(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_29f75f89_21e3_433c_9490_a8bb6314e6db(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_139dde5d_e1ef_4e9b_a336_a3550f786b1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_94a4b55c_8c0b_48e4_95f4_c5f871c9d7f7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_6_217d3f55_a499_4a86_b017_255814d2bd6e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_1ae2de34_dd11_421a_a919_1be39e9b8fcc(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            }
            if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_d0f37d70_1bab_4ae3_87f4_6606978d1fc7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_003ae497_eb2a_407c_bc09_ed4e11f382cc(ArrayList<Integer> lst) {
        // Your code here
        return 0;

    }

    
    public static int sumSquares_Problem_6_66726b0a_21ad_4aec_99b8_a3005b8067e3(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_81fcc6af_3413_41ad_9ea6_8fee9da8831d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x*x).sum();
    }

    
    public static int sumSquares_Problem_5_af76e576_7bb4_4a6b_ad7e_d01b150d1790(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_7b6e1ae4_c985_48b6_82d4_c576db9363ce(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_555aa5d9_d93d_4313_a133_76a92cbfcc18(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_4ae77bcd_3234_46ec_939a_5e6fd8bc2d36(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x*x).sum();
    }

    
    public static int sumSquares_Problem_8_0109dbe0_3286_446b_b69e_c3ff15862fe9(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_eda60543_6198_4f22_a387_048d53f1d2f0(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b0d3d27d_9d60_43fd_a4b3_aef7f5330bd9(ArrayList<Integer> lst) {
        if (lst.size() == 0)
            return 0; 
        int sum = 0;
        for (int i : lst)
            if (i % 3 == 0 || i % 4 == 0) {
                sum += i;
            }
        return sum;
    }

    
    public static int sumSquares_Problem_10_056eb9f3_4d76_41fe_8e2e_c8a8223ae4eb(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_78b3576a_5b4c_424d_a1c7_75304b4af075(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_21e9c93a_42a6_45df_842f_b29e52725ae3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_3_b7f7ff44_30ff_47c0_92b7_c4033dcbe7c7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream()
                .filter(i -> i % 3 == 0 || i % 4 == 0)
                .map(i -> i % 3 == 0 ? i * i : i * i * i)
                .reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_1_63a48ad4_634d_43f2_844a_14595f5d6e12(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream()
                .filter(x -> x % 3 == 0 || x % 4 == 0)
                .map(x -> x % 3 == 0 ? x * x : x * x * x)
                .reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_1_71d4b5fd_75fc_429e_be2e_846e2234baee(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            } else if(i%4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_eea54644_d489_47cd_bffa_7827ff58ebf2(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_6e0f7005_6730_462b_b1e0_225906676a16(ArrayList<Integer> lst) {

        // Your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 3 != 0 && i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_3a6c5564_36ed_4f65_8b87_e075768336e5(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_769e9be2_ac96_4784_a29b_6c57075a4c2a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_9640fc0e_4b5d_44c4_9dcd_40a96864b95b(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_bcb19784_7424_434a_a9f2_f025dfaf8a59(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_45b385b7_5362_410a_ae36_d7f8b115eb27(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_8c33ddb8_bcb2_4c49_be68_5f1ecc893ea3(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_b710b835_7528_4c57_8274_5fae668c9331(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_d28448ab_ed80_436f_bcf7_631c2e7a0cfa(ArrayList<Integer> lst) {
        if (lst.isEmpty()) {
            return 0;
        }

        // This code block will iterate over all elements in the array list. If the element is a multiple of 3 or 4, we square it and keep it in a 
        // temporary variable temp. If the element is not a multiple of 3 or 4, we add the element to the temporary variable sum. 
        // After iterating, we will return the sum of the temporary variable sum.
        int temp = 0;
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0 && i % 4 == 0) {
                temp += i;
            } else if (i % 3 == 0) {
                temp += i * i;
            } else if (i % 4 == 0) {
                temp += i * i * i;
            } else {
                temp += i;
            }

            sum += temp;
        }

        return sum;
    }

    
    public static int sumSquares_Problem_2_ec63832f_4d1b_439b_a6d2_7c23682e3dd2(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_aa6594ee_007d_4d3c_84d1_09ab0865ce9e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_8a8b7c66_78c8_458a_b168_ccf07efc7639(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_d12051b2_67f6_423e_a823_7025285193da(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_6e92f2be_3435_47e2_824d_e569b5da23be(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_17c68e06_ad0e_437e_9fae_ebfae3252026(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_573492f9_036c_4ee8_8e79_20550906ffd7(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_7d1be315_9a18_46aa_94ef_7b3fff43e696(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_3a7f54ae_685b_4b66_a4e2_095fecc1bb22(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_863762fb_716a_4b99_a863_0c6db1c74006(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_813c79ca_1123_460f_9663_1662963acbae(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                sum += num * num;
            } else if (i % 4 == 0) {
                sum += num * num * num;
            } else {
                sum += num;
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_14e81768_7f5c_4117_a666_00ed2958d23d(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_b0daf192_1722_4967_a707_6337233e196f(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> {
            int i = lst.indexOf(x);
            if (i % 3 == 0) {
                return x * x;
            } else if (i % 4 == 0 && i % 3 != 0) {
                return x * x * x;
            } else {
                return x;
            }
        }).sum();
    }

    
    public static int sumSquares_Problem_8_cce37627_7888_4606_b921_ae0704816a8c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_10_de76465d_8d18_48e5_9237_a4ff622ce839(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_6e2aef7b_99c4_4873_ba12_e7944aaeb612(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i * i;
            } else if(i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_d1985ffc_cc19_4be4_a49b_169fb46a8b68(ArrayList<Integer> lst) {

        // Write your code here
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
        }
        return lst.stream().mapToInteger(Integer::intValue).sum();
    }

    
    public static int sumSquares_Problem_2_d071dbfd_a9b0_46f3_8e3c_643a7ddc7172(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;

    }

    
    public static int sumSquares_Problem_10_b519ce73_e223_4230_894b_a0f291a29e69(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_6b115241_d747_4403_875f_c0173683c785(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_4a370110_9a71_48c3_baa4_db1a048dd0a3(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_cd413b1c_906e_41d8_9f9d_94d0d8bc2618(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int num = lst.get(i);
            if (i % 3 == 0) {
                num = num * num;
            } else if (i % 4 == 0) {
                num = num * num * num;
            }
            sum += num;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_8df0a8fb_76a6_4d47_b27f_9ab44cf86e3c(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_638f0eac_bade_4319_ac99_0897319a1eca(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_0f6db28e_fba0_4b5f_bdd0_62ff634e092d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_b66578ee_7aad_4e2a_9686_f895890ee894(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i%3)==0) {
                sum += lst.get(i);
            }
            if((i%4)==0) {
                sum += lst.get(i);
            }
            if((i%3)==0 && (i%4)==0) {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_d5c9fb27_577a_4cb9_85d5_2eb5b88f1e17(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_8625f07d_a017_4d1e_bdf0_ed1d2c1811dd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e5c8172b_5f08_4447_aff1_2173019b0038(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_6_a00924fd_5f4e_45a4_930f_427c4b139cbe(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_17eed356_a98a_4144_81cc_a130dc8d71dd(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_e4883c35_6136_4eac_a548_2b882630b4da(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_ea685832_8829_471a_9e62_83d698a8e182(ArrayList<Integer> lst) {
        int sum = 0;
        for(Integer i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_379750a7_e27b_4f81_a664_60419d7485c8(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_fde9be33_a06d_468b_9df4_a1cfc42c52f7(ArrayList<Integer> lst) {
        // TODO: Implement this function
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_71295821_17f5_467c_8310_b96eabca3a03(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if(i%3 == 0) {
                sum += i*i;
            }
            else if(i%4 == 0) {
                sum += i*i*i;
            }
            else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_12c01e48_df87_4a12_89e1_ad88fa7a8298(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_99bdb7ed_f3e2_403b_ad72_8220b74a5ab1(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if((i % 3) == 0) {
                sum += lst.get(i);
            }
            else if((i % 4) == 0) {
                sum += lst.get(i);
            }
            else {
                sum += lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_0ba8502f_43dc_42ed_81f5_e91c8393d45d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_6591485e_9389_44f3_8c84_57412fb5852f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_fde9be33_a06d_468b_9df4_a1cfc42c52f7(ArrayList<Integer> lst) {
        // TODO: Implement this function
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_f272842c_cc6f_4617_8dfd_026b72411776(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum+=i*i;
            }
            else if((i%4)==0) {
                sum+=i*i*i;
            }
            else {
                sum+=i*i*i*i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_897f7a09_c0f9_4f05_97a9_55a63ba1be34(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_9_a90687c8_3c55_4822_9987_5affc74c1b2b(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_427bc80b_3fab_4486_9da3_033c7d21927c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_0_15dc3143_4476_405c_b934_727b11559acb(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> x * x).sum();
    }

    
    public static int sumSquares_Problem_4_c8133f89_a8bd_4a12_83c0_b5c8fdfdd015(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_f5ebc825_17c5_4595_a54d_18324bcf89bc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_ca73dd26_cfc4_4d6a_a1bd_d6cc086810b7(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x % 3 == 0 ? x * x : x * x * x).reduce(0, (a, b) -> a + b);
    }

    
    public static int sumSquares_Problem_1_abda6443_f84a_4b2d_91ba_c4e347812c03(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_f22c04f5_c3c1_47d2_a309_bf0fdcffa18b(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_92ebc02f_b78f_4d5e_bd71_3ab6ea75dff0(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_736b8ee1_4b06_480b_a72a_ca2f7b8945db(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_01a16b87_64d9_47e2_aa4d_f752607cdb34(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_c2591a9b_4372_46ab_8dd2_56240dea85a8(ArrayList<Integer> lst) {
        // "
        // This function will take a list of integers. For all entries in the list, the function shall square the integer entry if its index is a 
        // multiple of 3 and will cube the integer entry if its index is a multiple of 4 and not a multiple of 3. The function will not 
        // change the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries. 
        // Examples:
        // sumSquares_Problem_3_c2591a9b_4372_46ab_8dd2_56240dea85a8([1,2,3,4,5,6,7,8,9,10]) -> 1 + 4 + 9 + 8 + 27 + 64 + 125 + 216 + 343 + 512 = 1225
        // sumSquares_Problem_3_c2591a9b_4372_46ab_8dd2_56240dea85a8([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]) -> 1 + 4 + 9 + 8 + 27 + 64 + 125 + 216 + 343 + 512 + 729 + 1000 + 1331 + 1728 + 2197 + 2744 + 3375 + 4096 + 4913 + 5832 + 6859 = 14198
        // "
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_1a892c90_9a35_498b_830a_87fe35ae87e9(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_0_e7fefeb9_ec91_4ff4_a59a_b4476059cb17(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_eecaf400_46b7_4b66_8eac_c85a08e14055(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_d61b31bd_edf0_4430_81b7_4dfc4bdf4bb5(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_3_e0d8a05f_36d1_4de0_8df2_49c4211732b7(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_4_14479c31_c593_4a5e_95d7_e0bfe7a2b37a(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_4_ba1e2ded_36f1_460d_abbf_35d27e5e5e27(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_3dd80269_1724_42c9_beed_d9ee99f84ab9(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_8d2a7897_30cd_42b7_af8b_daee576d56f0(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_10_b3534ed7_8c64_47e7_9cf1_36cfbb23857d(ArrayList<Integer> lst) {

        // your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_744738d8_6498_44bf_bd49_23e635d4afce(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_1d00a0fc_0eef_492a_8e95_5d194a6a72bc(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (lst.get(i) %  3 == 0) {
                sum += lst.get(i);
            } else if (lst.get(i) %  4 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_e977284a_e651_4a31_815b_6f9a68cf57f5(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_8515769a_e00a_4d94_aaa5_c20c676943fa(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int entry = lst.get(i);
            if (i % 3 == 0) {
                entry = entry * entry;
            } else if (i % 4 == 0) {
                entry = entry * entry * entry;
            }
            sum += entry;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_3cfcb7d3_3441_4c5f_8bf4_9ef5d8f77e2f(ArrayList<Integer> lst) {
        // your code goes here
        int sum = 0;
        for(int i = 0; i< lst.size(); i++){
            if(lst.get(i) % 3 == 0){
                sum += lst.get(i);
            }
            if(lst.get(i) % 4 == 0){
                sum += lst.get(i);
            }
            if(lst.get(i) % 3 == 0 && lst.get(i) % 4 == 0){
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_f792f7f2_ec71_491f_a233_b42dc798a07c(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().filter(x -> x % 3 == 0 || x % 4 == 0).map(x -> x * x).reduce(0, Integer::sum);
    }

    
    public static int sumSquares_Problem_5_ac0a4bf0_05d1_421d_a9fa_34788c642591(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_c505ec90_aea4_4998_9da7_6c831cac205a(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_ac0a4bf0_05d1_421d_a9fa_34788c642591(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;

    }

    
    public static int sumSquares_Problem_2_a757f0c0_7e9b_4c47_84f9_a96c2d4d46fc(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++) {
            if(i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_e6c9cb8c_b846_4f7c_b498_ef1a5b162ff1(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_21d70dee_0972_46d8_a754_4b41223f4e46(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_6591485e_9389_44f3_8c84_57412fb5852f(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_379750a7_e27b_4f81_a664_60419d7485c8(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for(int i = 0; i < lst.size(); i++){
            if(i % 3 == 0){
                sum += Math.pow(lst.get(i), 2);
            }
            else if(i % 4 == 0){
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_413db871_33f1_439c_959f_715f0931bb1c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_47bba2dc_56b7_448a_b7c0_31f1fd040fdb(ArrayList<Integer> lst) {
        int sum = 0;
        int sumSquare = 0;
        for (int idx : lst) {
            if (idx % 3 == 0 && idx % 4 == 0) {
                sumSquare = (idx * idx);
            } else if (idx % 3 == 0) {
                sumSquare = (idx * idx);
            } else if (idx % 4 == 0) {
                sumSquare = (idx * idx);
            } else {
                sum = (idx + sum);
            }
        }
        sum =  (sum + sumSquare);
        return sum;
    }

    
    public static int sumSquares_Problem_10_a79f9971_af1e_4864_b6b4_55c2a8130e58(ArrayList<Integer> lst) {

        // Write your code here
        for(int i=0;i<lst.size();i++){
            if(i%3==0){
                lst.set(i,lst.get(i)*lst.get(i));
            }
            if(i%4==0 && i%3!=0){
                lst.set(i,lst.get(i)*lst.get(i)*lst.get(i));
            }
        }
        int sum=0;
        for(int i=0;i<lst.size();i++){
            sum+=lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_7c3da8a2_341d_4837_9f23_e057a64562bb(ArrayList<Integer> lst) {
        // Write your code here
        int sum = 0;
        for(int i : lst) {
            if(i % 3 == 0) {
                sum += i*i;
            } else if(i % 4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_28c7ebdf_3efa_437d_a7fe_ab4bcbbd9109(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_42664c84_42cc_4948_97e3_c641c64de20e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_42af3c73_1d6a_4808_aee4_a0025c3deac7(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_0_cedc3c7f_da18_46d2_8bcf_5e0e4fa399f9(ArrayList<Integer> lst) {

        // Write your code here
        return lst.stream().map(x -> x * x).filter(x -> x % 3 == 0 || x % 4 == 0).reduce(0, (x, y) -> x + y);
    }

    
    public static int sumSquares_Problem_6_12da34a8_fdc6_43a7_a8f2_bad945e1133f(ArrayList<Integer> lst) {
        // "
        int sum = 0;
        for(int i : lst) {
            if (i % 3 == 0) {
                sum += i*i;
            } else if (i % 4 == 0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_4872ce99_b7a1_44f4_89d8_b0fdbc0880e1(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_4a926a5f_f7d5_4621_906e_867aae273f64(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_8_865d21f0_d80c_432f_b1b8_9874498230e3(ArrayList<Integer> lst) {
        int sum = 0;
        int length =  lst.size();
        int counter = 0;
        while (counter < length) {
            int val = lst.get(counter);
            if (val % 3 == 0) {
                int tmp =  Math.pow(val, 2);
                sum += tmp;
                counter++;
            }
            else if (val % 4 == 0) {
                int tmp =  Math.pow(val, 3);
                sum += tmp;
                counter++;
            }
            else
                sum += val;
            counter++;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_51da9846_b0eb_44c7_9601_b63fef168983(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_2_d40371a5_ae8c_4b86_95e1_411e3012ef06(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_a895bdd1_3e53_420c_973a_c4c14915205d(ArrayList<Integer> lst) {
        // write your code in Java SE 8.
        int sum = 0;
        for (Integer x: lst) {
            int index =  Math.floor(x / 3);
            int result =  ((index * index) > x ? index * index : x);
            sum += result;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_7e862c19_9e29_4a33_9f3a_168bb9d7c384(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_b0daf192_1722_4967_a707_6337233e196f(ArrayList<Integer> lst) {
        return lst.stream().mapToInteger(x -> {
            int i = lst.indexOf(x);
            if (i % 3 == 0) {
                return x * x;
            } else if (i % 4 == 0 && i % 3 != 0) {
                return x * x * x;
            } else {
                return x;
            }
        }).sum();
    }

    
    public static int sumSquares_Problem_2_05a54ba2_3905_4a45_a235_bf09bc37b4a2(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_f830ea49_6118_432d_8939_3a04e0200ef5(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_bf133437_b611_4c2b_a637_66627aede83c(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                lst.set(i, lst.get(i) * lst.get(i));
            } else if (i % 4 == 0 && i % 3 != 0) {
                lst.set(i, lst.get(i) * lst.get(i) * lst.get(i));
            }
            sum += lst.get(i);
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_5c6334cb_6778_46bb_a001_12f68613d405(ArrayList<Integer> lst) {
        int sum=0;
        for(int i=0; i<lst.size(); i++) {
            int a=lst.get(i);
            if(lst.get(i)%4==0){
                lst.set(i, a*a*a);
                sum+=a*a*a;
            }
            if(lst.get(i)%3==0){
                lst.set(i, a*a*a*a);
                sum+=a*a*a*a;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_573b929a_4e80_41b9_b8d9_07a65e195c9e(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_ec5401d4_c800_40cd_aa59_4d3719b0752c(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_1_df8ce354_1273_42f6_bfa8_4ccc2bf1975e(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_6fd1b752_2140_4c98_939f_b6d1568a0a27(ArrayList<Integer> lst) {

        // Write your code here
        return 0;
    }

    
    public static int sumSquares_Problem_7_a3f1761d_cd58_4ecd_ab00_5ae42236cde8(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_5698b24e_d4f8_47ec_a4b9_64feadacf73e(ArrayList<Integer> lst) {
        // Complete the function
        int n =  Math.ceil(Math.sqrt(lst.size()));
        int sum = 0;
        for (int i = 0; i < n; i++) {
            if (lst.get(i) % 3 == 0) 
                sum += lst.get(i);
            else if (lst.get(i) % 4 == 0)
                sum += lst.get(i);
            else {
                int k = lst.get(i);
                int d = k - k * k;
                sum += d;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_f8a0a499_f3ab_4c28_ae81_95b809d50600(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_9_5ef0e396_9a0d_4f3a_8819_0d06c10dc97a(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_e6e5416e_acdd_4497_8d03_a8a4bd65d0fd(ArrayList<Integer> lst) {
        int result = 0;
        int temp = 0;
        for (int i : lst) {
            if (i % 3 == 0 || i % 4 == 0) {
                result += i;
            } else {
                temp += i;
            }
        }
        result -= temp;
        return result;
    }

    
    public static int sumSquares_Problem_10_14479c31_c593_4a5e_95d7_e0bfe7a2b37a(ArrayList<Integer> lst) {

        // Your code here
        return 0;
    }

    
    public static int sumSquares_Problem_2_fe5e697d_f613_41f3_8084_dcd0260bf789(ArrayList<Integer> lst) {

        // Write your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_6_b95a33f3_d95f_404a_9545_decd7aeccf8e(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            int val = lst.get(i);
            if (i % 3 == 0) {
                val = val * val;
            } else if (i % 4 == 0) {
                val = val * val * val;
            }
            sum += val;
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_16a19495_7462_4362_b04f_fc9bde746fb6(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_1_d2698ee2_438e_4e72_a50a_afc7dc65ec40(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_893fb16f_1d0c_424b_beb1_53966af892a1(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i%3)==0) {
                sum += i*i;
            } else if((i%4)==0) {
                sum += i*i*i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_7_b2e5b779_cd09_4690_b83d_2c9f677ed669(ArrayList<Integer> lst) {
        int sum = 0;
        for (Integer l : lst) {
            if (l % 3 == 0) {
                sum += l * l;
            } else if (l % 4 == 0) {
                sum += l * l * l;
            } else {
                sum += l;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_3ed59702_3753_451e_84b5_8ead8d462b47(ArrayList<Integer> lst) {

        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += Math.pow(lst.get(i), 2);
            } else if (i % 4 == 0) {
                sum += Math.pow(lst.get(i), 3);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_a8e7a2ba_9caf_401c_99b7_f22515292bda(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_8_0f97ea33_5029_4f81_a5bb_8ea9a45c127d(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_2_97265762_bdb1_4448_ba9a_3cafe4287c6f(ArrayList<Integer> lst) {
        int sum = 0;
        for(int i : lst) {
            if((i % 3) == 0) {
                sum += i * i;
            } else if((i % 4) == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_191611d2_1730_471d_bcc5_794c0aa7c004(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_10_744738d8_6498_44bf_bd49_23e635d4afce(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_3_02f0e7e4_7fa5_4fa0_a4cc_3dea9a256300(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_8f7cfef4_689f_4dc3_a938_09457e58b00d(ArrayList<Integer> lst) {

        // your code here
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0 && i % 4 != 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0 && i % 3 != 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_4_de0c03d5_424c_49df_a44e_71db75d9ae4c(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i = 0; i < lst.size(); i++) {
            if (i % 3 == 0) {
                sum += lst.get(i) * lst.get(i);
            } else if (i % 4 == 0) {
                sum += lst.get(i) * lst.get(i) * lst.get(i);
            } else {
                sum += lst.get(i);
            }
        }
        return sum;
    }

    
    public static int sumSquares_Problem_5_463b3d8f_4ae9_4df0_aca5_10b37fd9b586(ArrayList<Integer> lst) {

        // TODO: Implement me
        return 0;
    }

    
    public static int sumSquares_Problem_2_c8ce6fac_cacd_46d1_8317_2185ba755012(ArrayList<Integer> lst) {
        int sum = 0;
        for (int i : lst) {
            if (i % 3 == 0) {
                sum += i * i;
            } else if (i % 4 == 0) {
                sum += i * i * i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

}
